{
  "version": 3,
  "sources": ["../../reveal.js/js/utils/util.js", "../../reveal.js/js/utils/device.js", "../../reveal.js/node_modules/fitty/dist/fitty.module.js", "../../reveal.js/js/controllers/slidecontent.js", "../../reveal.js/js/controllers/slidenumber.js", "../../reveal.js/js/controllers/jumptoslide.js", "../../reveal.js/js/utils/color.js", "../../reveal.js/js/controllers/backgrounds.js", "../../reveal.js/js/utils/constants.js", "../../reveal.js/js/controllers/autoanimate.js", "../../reveal.js/js/controllers/fragments.js", "../../reveal.js/js/controllers/overview.js", "../../reveal.js/js/controllers/keyboard.js", "../../reveal.js/js/controllers/location.js", "../../reveal.js/js/controllers/controls.js", "../../reveal.js/js/controllers/progress.js", "../../reveal.js/js/controllers/pointer.js", "../../reveal.js/js/utils/loader.js", "../../reveal.js/js/controllers/plugins.js", "../../reveal.js/js/controllers/print.js", "../../reveal.js/js/controllers/touch.js", "../../reveal.js/js/controllers/focus.js", "../../reveal.js/js/controllers/notes.js", "../../reveal.js/js/components/playback.js", "../../reveal.js/js/config.js", "../../reveal.js/js/reveal.js", "../../reveal.js/js/index.js"],
  "sourcesContent": ["/**\n * Extend object a with the properties of object b.\n * If there's a conflict, object b takes precedence.\n *\n * @param {object} a\n * @param {object} b\n */\nexport const extend = ( a, b ) => {\n\n\tfor( let i in b ) {\n\t\ta[ i ] = b[ i ];\n\t}\n\n\treturn a;\n\n}\n\n/**\n * querySelectorAll but returns an Array.\n */\nexport const queryAll = ( el, selector ) => {\n\n\treturn Array.from( el.querySelectorAll( selector ) );\n\n}\n\n/**\n * classList.toggle() with cross browser support\n */\nexport const toggleClass = ( el, className, value ) => {\n\tif( value ) {\n\t\tel.classList.add( className );\n\t}\n\telse {\n\t\tel.classList.remove( className );\n\t}\n}\n\n/**\n * Utility for deserializing a value.\n *\n * @param {*} value\n * @return {*}\n */\nexport const deserialize = ( value ) => {\n\n\tif( typeof value === 'string' ) {\n\t\tif( value === 'null' ) return null;\n\t\telse if( value === 'true' ) return true;\n\t\telse if( value === 'false' ) return false;\n\t\telse if( value.match( /^-?[\\d\\.]+$/ ) ) return parseFloat( value );\n\t}\n\n\treturn value;\n\n}\n\n/**\n * Measures the distance in pixels between point a\n * and point b.\n *\n * @param {object} a point with x/y properties\n * @param {object} b point with x/y properties\n *\n * @return {number}\n */\nexport const distanceBetween = ( a, b ) => {\n\n\tlet dx = a.x - b.x,\n\t\tdy = a.y - b.y;\n\n\treturn Math.sqrt( dx*dx + dy*dy );\n\n}\n\n/**\n * Applies a CSS transform to the target element.\n *\n * @param {HTMLElement} element\n * @param {string} transform\n */\nexport const transformElement = ( element, transform ) => {\n\n\telement.style.transform = transform;\n\n}\n\n/**\n * Element.matches with IE support.\n *\n * @param {HTMLElement} target The element to match\n * @param {String} selector The CSS selector to match\n * the element against\n *\n * @return {Boolean}\n */\nexport const matches = ( target, selector ) => {\n\n\tlet matchesMethod = target.matches || target.matchesSelector || target.msMatchesSelector;\n\n\treturn !!( matchesMethod && matchesMethod.call( target, selector ) );\n\n}\n\n/**\n * Find the closest parent that matches the given\n * selector.\n *\n * @param {HTMLElement} target The child element\n * @param {String} selector The CSS selector to match\n * the parents against\n *\n * @return {HTMLElement} The matched parent or null\n * if no matching parent was found\n */\nexport const closest = ( target, selector ) => {\n\n\t// Native Element.closest\n\tif( typeof target.closest === 'function' ) {\n\t\treturn target.closest( selector );\n\t}\n\n\t// Polyfill\n\twhile( target ) {\n\t\tif( matches( target, selector ) ) {\n\t\t\treturn target;\n\t\t}\n\n\t\t// Keep searching\n\t\ttarget = target.parentNode;\n\t}\n\n\treturn null;\n\n}\n\n/**\n * Handling the fullscreen functionality via the fullscreen API\n *\n * @see http://fullscreen.spec.whatwg.org/\n * @see https://developer.mozilla.org/en-US/docs/DOM/Using_fullscreen_mode\n */\nexport const enterFullscreen = element => {\n\n\telement = element || document.documentElement;\n\n\t// Check which implementation is available\n\tlet requestMethod = element.requestFullscreen ||\n\t\t\t\t\t\telement.webkitRequestFullscreen ||\n\t\t\t\t\t\telement.webkitRequestFullScreen ||\n\t\t\t\t\t\telement.mozRequestFullScreen ||\n\t\t\t\t\t\telement.msRequestFullscreen;\n\n\tif( requestMethod ) {\n\t\trequestMethod.apply( element );\n\t}\n\n}\n\n/**\n * Creates an HTML element and returns a reference to it.\n * If the element already exists the existing instance will\n * be returned.\n *\n * @param {HTMLElement} container\n * @param {string} tagname\n * @param {string} classname\n * @param {string} innerHTML\n *\n * @return {HTMLElement}\n */\nexport const createSingletonNode = ( container, tagname, classname, innerHTML='' ) => {\n\n\t// Find all nodes matching the description\n\tlet nodes = container.querySelectorAll( '.' + classname );\n\n\t// Check all matches to find one which is a direct child of\n\t// the specified container\n\tfor( let i = 0; i < nodes.length; i++ ) {\n\t\tlet testNode = nodes[i];\n\t\tif( testNode.parentNode === container ) {\n\t\t\treturn testNode;\n\t\t}\n\t}\n\n\t// If no node was found, create it now\n\tlet node = document.createElement( tagname );\n\tnode.className = classname;\n\tnode.innerHTML = innerHTML;\n\tcontainer.appendChild( node );\n\n\treturn node;\n\n}\n\n/**\n * Injects the given CSS styles into the DOM.\n *\n * @param {string} value\n */\nexport const createStyleSheet = ( value ) => {\n\n\tlet tag = document.createElement( 'style' );\n\ttag.type = 'text/css';\n\n\tif( value && value.length > 0 ) {\n\t\tif( tag.styleSheet ) {\n\t\t\ttag.styleSheet.cssText = value;\n\t\t}\n\t\telse {\n\t\t\ttag.appendChild( document.createTextNode( value ) );\n\t\t}\n\t}\n\n\tdocument.head.appendChild( tag );\n\n\treturn tag;\n\n}\n\n/**\n * Returns a key:value hash of all query params.\n */\nexport const getQueryHash = () => {\n\n\tlet query = {};\n\n\tlocation.search.replace( /[A-Z0-9]+?=([\\w\\.%-]*)/gi, a => {\n\t\tquery[ a.split( '=' ).shift() ] = a.split( '=' ).pop();\n\t} );\n\n\t// Basic deserialization\n\tfor( let i in query ) {\n\t\tlet value = query[ i ];\n\n\t\tquery[ i ] = deserialize( unescape( value ) );\n\t}\n\n\t// Do not accept new dependencies via query config to avoid\n\t// the potential of malicious script injection\n\tif( typeof query['dependencies'] !== 'undefined' ) delete query['dependencies'];\n\n\treturn query;\n\n}\n\n/**\n * Returns the remaining height within the parent of the\n * target element.\n *\n * remaining height = [ configured parent height ] - [ current parent height ]\n *\n * @param {HTMLElement} element\n * @param {number} [height]\n */\nexport const getRemainingHeight = ( element, height = 0 ) => {\n\n\tif( element ) {\n\t\tlet newHeight, oldHeight = element.style.height;\n\n\t\t// Change the .stretch element height to 0 in order find the height of all\n\t\t// the other elements\n\t\telement.style.height = '0px';\n\n\t\t// In Overview mode, the parent (.slide) height is set of 700px.\n\t\t// Restore it temporarily to its natural height.\n\t\telement.parentNode.style.height = 'auto';\n\n\t\tnewHeight = height - element.parentNode.offsetHeight;\n\n\t\t// Restore the old height, just in case\n\t\telement.style.height = oldHeight + 'px';\n\n\t\t// Clear the parent (.slide) height. .removeProperty works in IE9+\n\t\telement.parentNode.style.removeProperty('height');\n\n\t\treturn newHeight;\n\t}\n\n\treturn height;\n\n}\n\nconst fileExtensionToMimeMap = {\n\t'mp4': 'video/mp4',\n\t'm4a': 'video/mp4',\n\t'ogv': 'video/ogg',\n\t'mpeg': 'video/mpeg',\n\t'webm': 'video/webm'\n}\n\n/**\n * Guess the MIME type for common file formats.\n */\nexport const getMimeTypeFromFile = ( filename='' ) => {\n\treturn fileExtensionToMimeMap[filename.split('.').pop()]\n}\n\n/**\n * Encodes a string for RFC3986-compliant URL format.\n * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/encodeURI#encoding_for_rfc3986\n *\n * @param {string} url\n */\nexport const encodeRFC3986URI = ( url='' ) => {\n\treturn encodeURI(url)\n\t  .replace(/%5B/g, \"[\")\n\t  .replace(/%5D/g, \"]\")\n\t  .replace(\n\t\t/[!'()*]/g,\n\t\t(c) => `%${c.charCodeAt(0).toString(16).toUpperCase()}`\n\t  );\n}", "const UA = navigator.userAgent;\n\nexport const isMobile = /(iphone|ipod|ipad|android)/gi.test( UA ) ||\n\t\t\t\t\t\t( navigator.platform === 'MacIntel' && navigator.maxTouchPoints > 1 ); // iPadOS\n\nexport const isChrome = /chrome/i.test( UA ) && !/edge/i.test( UA );\n\nexport const isAndroid = /android/gi.test( UA );", "/*\n * fitty v2.3.3 - Snugly resizes text to fit its parent container\n * Copyright (c) 2020 Rik Schennink <rik@pqina.nl> (https://pqina.nl/)\n */\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nexports.default = function (w) {\n\n  // no window, early exit\n  if (!w) return;\n\n  // node list to array helper method\n  var toArray = function toArray(nl) {\n    return [].slice.call(nl);\n  };\n\n  // states\n  var DrawState = {\n    IDLE: 0,\n    DIRTY_CONTENT: 1,\n    DIRTY_LAYOUT: 2,\n    DIRTY: 3\n  };\n\n  // all active fitty elements\n  var fitties = [];\n\n  // group all redraw calls till next frame, we cancel each frame request when a new one comes in. If no support for request animation frame, this is an empty function and supports for fitty stops.\n  var redrawFrame = null;\n  var requestRedraw = 'requestAnimationFrame' in w ? function () {\n    w.cancelAnimationFrame(redrawFrame);\n    redrawFrame = w.requestAnimationFrame(function () {\n      return redraw(fitties.filter(function (f) {\n        return f.dirty && f.active;\n      }));\n    });\n  } : function () {};\n\n  // sets all fitties to dirty so they are redrawn on the next redraw loop, then calls redraw\n  var redrawAll = function redrawAll(type) {\n    return function () {\n      fitties.forEach(function (f) {\n        return f.dirty = type;\n      });\n      requestRedraw();\n    };\n  };\n\n  // redraws fitties so they nicely fit their parent container\n  var redraw = function redraw(fitties) {\n\n    // getting info from the DOM at this point should not trigger a reflow, let's gather as much intel as possible before triggering a reflow\n\n    // check if styles of all fitties have been computed\n    fitties.filter(function (f) {\n      return !f.styleComputed;\n    }).forEach(function (f) {\n      f.styleComputed = computeStyle(f);\n    });\n\n    // restyle elements that require pre-styling, this triggers a reflow, please try to prevent by adding CSS rules (see docs)\n    fitties.filter(shouldPreStyle).forEach(applyStyle);\n\n    // we now determine which fitties should be redrawn\n    var fittiesToRedraw = fitties.filter(shouldRedraw);\n\n    // we calculate final styles for these fitties\n    fittiesToRedraw.forEach(calculateStyles);\n\n    // now we apply the calculated styles from our previous loop\n    fittiesToRedraw.forEach(function (f) {\n      applyStyle(f);\n      markAsClean(f);\n    });\n\n    // now we dispatch events for all restyled fitties\n    fittiesToRedraw.forEach(dispatchFitEvent);\n  };\n\n  var markAsClean = function markAsClean(f) {\n    return f.dirty = DrawState.IDLE;\n  };\n\n  var calculateStyles = function calculateStyles(f) {\n\n    // get available width from parent node\n    f.availableWidth = f.element.parentNode.clientWidth;\n\n    // the space our target element uses\n    f.currentWidth = f.element.scrollWidth;\n\n    // remember current font size\n    f.previousFontSize = f.currentFontSize;\n\n    // let's calculate the new font size\n    f.currentFontSize = Math.min(Math.max(f.minSize, f.availableWidth / f.currentWidth * f.previousFontSize), f.maxSize);\n\n    // if allows wrapping, only wrap when at minimum font size (otherwise would break container)\n    f.whiteSpace = f.multiLine && f.currentFontSize === f.minSize ? 'normal' : 'nowrap';\n  };\n\n  // should always redraw if is not dirty layout, if is dirty layout, only redraw if size has changed\n  var shouldRedraw = function shouldRedraw(f) {\n    return f.dirty !== DrawState.DIRTY_LAYOUT || f.dirty === DrawState.DIRTY_LAYOUT && f.element.parentNode.clientWidth !== f.availableWidth;\n  };\n\n  // every fitty element is tested for invalid styles\n  var computeStyle = function computeStyle(f) {\n\n    // get style properties\n    var style = w.getComputedStyle(f.element, null);\n\n    // get current font size in pixels (if we already calculated it, use the calculated version)\n    f.currentFontSize = parseFloat(style.getPropertyValue('font-size'));\n\n    // get display type and wrap mode\n    f.display = style.getPropertyValue('display');\n    f.whiteSpace = style.getPropertyValue('white-space');\n  };\n\n  // determines if this fitty requires initial styling, can be prevented by applying correct styles through CSS\n  var shouldPreStyle = function shouldPreStyle(f) {\n\n    var preStyle = false;\n\n    // if we already tested for prestyling we don't have to do it again\n    if (f.preStyleTestCompleted) return false;\n\n    // should have an inline style, if not, apply\n    if (!/inline-/.test(f.display)) {\n      preStyle = true;\n      f.display = 'inline-block';\n    }\n\n    // to correctly calculate dimensions the element should have whiteSpace set to nowrap\n    if (f.whiteSpace !== 'nowrap') {\n      preStyle = true;\n      f.whiteSpace = 'nowrap';\n    }\n\n    // we don't have to do this twice\n    f.preStyleTestCompleted = true;\n\n    return preStyle;\n  };\n\n  // apply styles to single fitty\n  var applyStyle = function applyStyle(f) {\n    f.element.style.whiteSpace = f.whiteSpace;\n    f.element.style.display = f.display;\n    f.element.style.fontSize = f.currentFontSize + 'px';\n  };\n\n  // dispatch a fit event on a fitty\n  var dispatchFitEvent = function dispatchFitEvent(f) {\n    f.element.dispatchEvent(new CustomEvent('fit', {\n      detail: {\n        oldValue: f.previousFontSize,\n        newValue: f.currentFontSize,\n        scaleFactor: f.currentFontSize / f.previousFontSize\n      }\n    }));\n  };\n\n  // fit method, marks the fitty as dirty and requests a redraw (this will also redraw any other fitty marked as dirty)\n  var fit = function fit(f, type) {\n    return function () {\n      f.dirty = type;\n      if (!f.active) return;\n      requestRedraw();\n    };\n  };\n\n  var init = function init(f) {\n\n    // save some of the original CSS properties before we change them\n    f.originalStyle = {\n      whiteSpace: f.element.style.whiteSpace,\n      display: f.element.style.display,\n      fontSize: f.element.style.fontSize\n    };\n\n    // should we observe DOM mutations\n    observeMutations(f);\n\n    // this is a new fitty so we need to validate if it's styles are in order\n    f.newbie = true;\n\n    // because it's a new fitty it should also be dirty, we want it to redraw on the first loop\n    f.dirty = true;\n\n    // we want to be able to update this fitty\n    fitties.push(f);\n  };\n\n  var destroy = function destroy(f) {\n    return function () {\n\n      // remove from fitties array\n      fitties = fitties.filter(function (_) {\n        return _.element !== f.element;\n      });\n\n      // stop observing DOM\n      if (f.observeMutations) f.observer.disconnect();\n\n      // reset the CSS properties we changes\n      f.element.style.whiteSpace = f.originalStyle.whiteSpace;\n      f.element.style.display = f.originalStyle.display;\n      f.element.style.fontSize = f.originalStyle.fontSize;\n    };\n  };\n\n  // add a new fitty, does not redraw said fitty\n  var subscribe = function subscribe(f) {\n    return function () {\n      if (f.active) return;\n      f.active = true;\n      requestRedraw();\n    };\n  };\n\n  // remove an existing fitty\n  var unsubscribe = function unsubscribe(f) {\n    return function () {\n      return f.active = false;\n    };\n  };\n\n  var observeMutations = function observeMutations(f) {\n\n    // no observing?\n    if (!f.observeMutations) return;\n\n    // start observing mutations\n    f.observer = new MutationObserver(fit(f, DrawState.DIRTY_CONTENT));\n\n    // start observing\n    f.observer.observe(f.element, f.observeMutations);\n  };\n\n  // default mutation observer settings\n  var mutationObserverDefaultSetting = {\n    subtree: true,\n    childList: true,\n    characterData: true\n  };\n\n  // default fitty options\n  var defaultOptions = {\n    minSize: 16,\n    maxSize: 512,\n    multiLine: true,\n    observeMutations: 'MutationObserver' in w ? mutationObserverDefaultSetting : false\n  };\n\n  // array of elements in, fitty instances out\n  function fittyCreate(elements, options) {\n\n    // set options object\n    var fittyOptions = _extends({}, defaultOptions, options);\n\n    // create fitties\n    var publicFitties = elements.map(function (element) {\n\n      // create fitty instance\n      var f = _extends({}, fittyOptions, {\n\n        // internal options for this fitty\n        element: element,\n        active: true\n      });\n\n      // initialise this fitty\n      init(f);\n\n      // expose API\n      return {\n        element: element,\n        fit: fit(f, DrawState.DIRTY),\n        unfreeze: subscribe(f),\n        freeze: unsubscribe(f),\n        unsubscribe: destroy(f)\n      };\n    });\n\n    // call redraw on newly initiated fitties\n    requestRedraw();\n\n    // expose fitties\n    return publicFitties;\n  }\n\n  // fitty creation function\n  function fitty(target) {\n    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n\n    // if target is a string\n    return typeof target === 'string' ?\n\n    // treat it as a querySelector\n    fittyCreate(toArray(document.querySelectorAll(target)), options) :\n\n    // create single fitty\n    fittyCreate([target], options)[0];\n  }\n\n  // handles viewport changes, redraws all fitties, but only does so after a timeout\n  var resizeDebounce = null;\n  var onWindowResized = function onWindowResized() {\n    w.clearTimeout(resizeDebounce);\n    resizeDebounce = w.setTimeout(redrawAll(DrawState.DIRTY_LAYOUT), fitty.observeWindowDelay);\n  };\n\n  // define observe window property, so when we set it to true or false events are automatically added and removed\n  var events = ['resize', 'orientationchange'];\n  Object.defineProperty(fitty, 'observeWindow', {\n    set: function set(enabled) {\n      var method = (enabled ? 'add' : 'remove') + 'EventListener';\n      events.forEach(function (e) {\n        w[method](e, onWindowResized);\n      });\n    }\n  });\n\n  // fitty global properties (by setting observeWindow to true the events above get added)\n  fitty.observeWindow = true;\n  fitty.observeWindowDelay = 100;\n\n  // public fit all method, will force redraw no matter what\n  fitty.fitAll = redrawAll(DrawState.DIRTY);\n\n  // export our fitty function, we don't want to keep it to our selves\n  return fitty;\n}(typeof window === 'undefined' ? null : window);", "import { extend, queryAll, closest, getMimeTypeFromFile, encodeRFC3986URI } from '../utils/util.js'\nimport { isMobile } from '../utils/device.js'\n\nimport fitty from 'fitty';\n\n/**\n * Handles loading, unloading and playback of slide\n * content such as images, videos and iframes.\n */\nexport default class SlideContent {\n\n\tconstructor( Reveal ) {\n\n\t\tthis.Reveal = Reveal;\n\n\t\tthis.startEmbeddedIframe = this.startEmbeddedIframe.bind( this );\n\n\t}\n\n\t/**\n\t * Should the given element be preloaded?\n\t * Decides based on local element attributes and global config.\n\t *\n\t * @param {HTMLElement} element\n\t */\n\tshouldPreload( element ) {\n\n\t\t// Prefer an explicit global preload setting\n\t\tlet preload = this.Reveal.getConfig().preloadIframes;\n\n\t\t// If no global setting is available, fall back on the element's\n\t\t// own preload setting\n\t\tif( typeof preload !== 'boolean' ) {\n\t\t\tpreload = element.hasAttribute( 'data-preload' );\n\t\t}\n\n\t\treturn preload;\n\t}\n\n\t/**\n\t * Called when the given slide is within the configured view\n\t * distance. Shows the slide element and loads any content\n\t * that is set to load lazily (data-src).\n\t *\n\t * @param {HTMLElement} slide Slide to show\n\t */\n\tload( slide, options = {} ) {\n\n\t\t// Show the slide element\n\t\tslide.style.display = this.Reveal.getConfig().display;\n\n\t\t// Media elements with data-src attributes\n\t\tqueryAll( slide, 'img[data-src], video[data-src], audio[data-src], iframe[data-src]' ).forEach( element => {\n\t\t\tif( element.tagName !== 'IFRAME' || this.shouldPreload( element ) ) {\n\t\t\t\telement.setAttribute( 'src', element.getAttribute( 'data-src' ) );\n\t\t\t\telement.setAttribute( 'data-lazy-loaded', '' );\n\t\t\t\telement.removeAttribute( 'data-src' );\n\t\t\t}\n\t\t} );\n\n\t\t// Media elements with <source> children\n\t\tqueryAll( slide, 'video, audio' ).forEach( media => {\n\t\t\tlet sources = 0;\n\n\t\t\tqueryAll( media, 'source[data-src]' ).forEach( source => {\n\t\t\t\tsource.setAttribute( 'src', source.getAttribute( 'data-src' ) );\n\t\t\t\tsource.removeAttribute( 'data-src' );\n\t\t\t\tsource.setAttribute( 'data-lazy-loaded', '' );\n\t\t\t\tsources += 1;\n\t\t\t} );\n\n\t\t\t// Enable inline video playback in mobile Safari\n\t\t\tif( isMobile && media.tagName === 'VIDEO' ) {\n\t\t\t\tmedia.setAttribute( 'playsinline', '' );\n\t\t\t}\n\n\t\t\t// If we rewrote sources for this video/audio element, we need\n\t\t\t// to manually tell it to load from its new origin\n\t\t\tif( sources > 0 ) {\n\t\t\t\tmedia.load();\n\t\t\t}\n\t\t} );\n\n\n\t\t// Show the corresponding background element\n\t\tlet background = slide.slideBackgroundElement;\n\t\tif( background ) {\n\t\t\tbackground.style.display = 'block';\n\n\t\t\tlet backgroundContent = slide.slideBackgroundContentElement;\n\t\t\tlet backgroundIframe = slide.getAttribute( 'data-background-iframe' );\n\n\t\t\t// If the background contains media, load it\n\t\t\tif( background.hasAttribute( 'data-loaded' ) === false ) {\n\t\t\t\tbackground.setAttribute( 'data-loaded', 'true' );\n\n\t\t\t\tlet backgroundImage = slide.getAttribute( 'data-background-image' ),\n\t\t\t\t\tbackgroundVideo = slide.getAttribute( 'data-background-video' ),\n\t\t\t\t\tbackgroundVideoLoop = slide.hasAttribute( 'data-background-video-loop' ),\n\t\t\t\t\tbackgroundVideoMuted = slide.hasAttribute( 'data-background-video-muted' );\n\n\t\t\t\t// Images\n\t\t\t\tif( backgroundImage ) {\n\t\t\t\t\t// base64\n\t\t\t\t\tif(  /^data:/.test( backgroundImage.trim() ) ) {\n\t\t\t\t\t\tbackgroundContent.style.backgroundImage = `url(${backgroundImage.trim()})`;\n\t\t\t\t\t}\n\t\t\t\t\t// URL(s)\n\t\t\t\t\telse {\n\t\t\t\t\t\tbackgroundContent.style.backgroundImage = backgroundImage.split( ',' ).map( background => {\n\t\t\t\t\t\t\t// Decode URL(s) that are already encoded first\n\t\t\t\t\t\t\tlet decoded = decodeURI(background.trim());\n\t\t\t\t\t\t\treturn `url(${encodeRFC3986URI(decoded)})`;\n\t\t\t\t\t\t}).join( ',' );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t// Videos\n\t\t\t\telse if ( backgroundVideo && !this.Reveal.isSpeakerNotes() ) {\n\t\t\t\t\tlet video = document.createElement( 'video' );\n\n\t\t\t\t\tif( backgroundVideoLoop ) {\n\t\t\t\t\t\tvideo.setAttribute( 'loop', '' );\n\t\t\t\t\t}\n\n\t\t\t\t\tif( backgroundVideoMuted ) {\n\t\t\t\t\t\tvideo.muted = true;\n\t\t\t\t\t}\n\n\t\t\t\t\t// Enable inline playback in mobile Safari\n\t\t\t\t\t//\n\t\t\t\t\t// Mute is required for video to play when using\n\t\t\t\t\t// swipe gestures to navigate since they don't\n\t\t\t\t\t// count as direct user actions :'(\n\t\t\t\t\tif( isMobile ) {\n\t\t\t\t\t\tvideo.muted = true;\n\t\t\t\t\t\tvideo.setAttribute( 'playsinline', '' );\n\t\t\t\t\t}\n\n\t\t\t\t\t// Support comma separated lists of video sources\n\t\t\t\t\tbackgroundVideo.split( ',' ).forEach( source => {\n\t\t\t\t\t\tlet type = getMimeTypeFromFile( source );\n\t\t\t\t\t\tif( type ) {\n\t\t\t\t\t\t\tvideo.innerHTML += `<source src=\"${source}\" type=\"${type}\">`;\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\tvideo.innerHTML += `<source src=\"${source}\">`;\n\t\t\t\t\t\t}\n\t\t\t\t\t} );\n\n\t\t\t\t\tbackgroundContent.appendChild( video );\n\t\t\t\t}\n\t\t\t\t// Iframes\n\t\t\t\telse if( backgroundIframe && options.excludeIframes !== true ) {\n\t\t\t\t\tlet iframe = document.createElement( 'iframe' );\n\t\t\t\t\tiframe.setAttribute( 'allowfullscreen', '' );\n\t\t\t\t\tiframe.setAttribute( 'mozallowfullscreen', '' );\n\t\t\t\t\tiframe.setAttribute( 'webkitallowfullscreen', '' );\n\t\t\t\t\tiframe.setAttribute( 'allow', 'autoplay' );\n\n\t\t\t\t\tiframe.setAttribute( 'data-src', backgroundIframe );\n\n\t\t\t\t\tiframe.style.width  = '100%';\n\t\t\t\t\tiframe.style.height = '100%';\n\t\t\t\t\tiframe.style.maxHeight = '100%';\n\t\t\t\t\tiframe.style.maxWidth = '100%';\n\n\t\t\t\t\tbackgroundContent.appendChild( iframe );\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Start loading preloadable iframes\n\t\t\tlet backgroundIframeElement = backgroundContent.querySelector( 'iframe[data-src]' );\n\t\t\tif( backgroundIframeElement ) {\n\n\t\t\t\t// Check if this iframe is eligible to be preloaded\n\t\t\t\tif( this.shouldPreload( background ) && !/autoplay=(1|true|yes)/gi.test( backgroundIframe ) ) {\n\t\t\t\t\tif( backgroundIframeElement.getAttribute( 'src' ) !== backgroundIframe ) {\n\t\t\t\t\t\tbackgroundIframeElement.setAttribute( 'src', backgroundIframe );\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tthis.layout( slide );\n\n\t}\n\n\t/**\n\t * Applies JS-dependent layout helpers for the scope.\n\t */\n\tlayout( scopeElement ) {\n\n\t\t// Autosize text with the r-fit-text class based on the\n\t\t// size of its container. This needs to happen after the\n\t\t// slide is visible in order to measure the text.\n\t\tArray.from( scopeElement.querySelectorAll( '.r-fit-text' ) ).forEach( element => {\n\t\t\tfitty( element, {\n\t\t\t\tminSize: 24,\n\t\t\t\tmaxSize: this.Reveal.getConfig().height * 0.8,\n\t\t\t\tobserveMutations: false,\n\t\t\t\tobserveWindow: false\n\t\t\t} );\n\t\t} );\n\n\t}\n\n\t/**\n\t * Unloads and hides the given slide. This is called when the\n\t * slide is moved outside of the configured view distance.\n\t *\n\t * @param {HTMLElement} slide\n\t */\n\tunload( slide ) {\n\n\t\t// Hide the slide element\n\t\tslide.style.display = 'none';\n\n\t\t// Hide the corresponding background element\n\t\tlet background = this.Reveal.getSlideBackground( slide );\n\t\tif( background ) {\n\t\t\tbackground.style.display = 'none';\n\n\t\t\t// Unload any background iframes\n\t\t\tqueryAll( background, 'iframe[src]' ).forEach( element => {\n\t\t\t\telement.removeAttribute( 'src' );\n\t\t\t} );\n\t\t}\n\n\t\t// Reset lazy-loaded media elements with src attributes\n\t\tqueryAll( slide, 'video[data-lazy-loaded][src], audio[data-lazy-loaded][src], iframe[data-lazy-loaded][src]' ).forEach( element => {\n\t\t\telement.setAttribute( 'data-src', element.getAttribute( 'src' ) );\n\t\t\telement.removeAttribute( 'src' );\n\t\t} );\n\n\t\t// Reset lazy-loaded media elements with <source> children\n\t\tqueryAll( slide, 'video[data-lazy-loaded] source[src], audio source[src]' ).forEach( source => {\n\t\t\tsource.setAttribute( 'data-src', source.getAttribute( 'src' ) );\n\t\t\tsource.removeAttribute( 'src' );\n\t\t} );\n\n\t}\n\n\t/**\n\t * Enforces origin-specific format rules for embedded media.\n\t */\n\tformatEmbeddedContent() {\n\n\t\tlet _appendParamToIframeSource = ( sourceAttribute, sourceURL, param ) => {\n\t\t\tqueryAll( this.Reveal.getSlidesElement(), 'iframe['+ sourceAttribute +'*=\"'+ sourceURL +'\"]' ).forEach( el => {\n\t\t\t\tlet src = el.getAttribute( sourceAttribute );\n\t\t\t\tif( src && src.indexOf( param ) === -1 ) {\n\t\t\t\t\tel.setAttribute( sourceAttribute, src + ( !/\\?/.test( src ) ? '?' : '&' ) + param );\n\t\t\t\t}\n\t\t\t});\n\t\t};\n\n\t\t// YouTube frames must include \"?enablejsapi=1\"\n\t\t_appendParamToIframeSource( 'src', 'youtube.com/embed/', 'enablejsapi=1' );\n\t\t_appendParamToIframeSource( 'data-src', 'youtube.com/embed/', 'enablejsapi=1' );\n\n\t\t// Vimeo frames must include \"?api=1\"\n\t\t_appendParamToIframeSource( 'src', 'player.vimeo.com/', 'api=1' );\n\t\t_appendParamToIframeSource( 'data-src', 'player.vimeo.com/', 'api=1' );\n\n\t}\n\n\t/**\n\t * Start playback of any embedded content inside of\n\t * the given element.\n\t *\n\t * @param {HTMLElement} element\n\t */\n\tstartEmbeddedContent( element ) {\n\n\t\tif( element && !this.Reveal.isSpeakerNotes() ) {\n\n\t\t\t// Restart GIFs\n\t\t\tqueryAll( element, 'img[src$=\".gif\"]' ).forEach( el => {\n\t\t\t\t// Setting the same unchanged source like this was confirmed\n\t\t\t\t// to work in Chrome, FF & Safari\n\t\t\t\tel.setAttribute( 'src', el.getAttribute( 'src' ) );\n\t\t\t} );\n\n\t\t\t// HTML5 media elements\n\t\t\tqueryAll( element, 'video, audio' ).forEach( el => {\n\t\t\t\tif( closest( el, '.fragment' ) && !closest( el, '.fragment.visible' ) ) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\t// Prefer an explicit global autoplay setting\n\t\t\t\tlet autoplay = this.Reveal.getConfig().autoPlayMedia;\n\n\t\t\t\t// If no global setting is available, fall back on the element's\n\t\t\t\t// own autoplay setting\n\t\t\t\tif( typeof autoplay !== 'boolean' ) {\n\t\t\t\t\tautoplay = el.hasAttribute( 'data-autoplay' ) || !!closest( el, '.slide-background' );\n\t\t\t\t}\n\n\t\t\t\tif( autoplay && typeof el.play === 'function' ) {\n\n\t\t\t\t\t// If the media is ready, start playback\n\t\t\t\t\tif( el.readyState > 1 ) {\n\t\t\t\t\t\tthis.startEmbeddedMedia( { target: el } );\n\t\t\t\t\t}\n\t\t\t\t\t// Mobile devices never fire a loaded event so instead\n\t\t\t\t\t// of waiting, we initiate playback\n\t\t\t\t\telse if( isMobile ) {\n\t\t\t\t\t\tlet promise = el.play();\n\n\t\t\t\t\t\t// If autoplay does not work, ensure that the controls are visible so\n\t\t\t\t\t\t// that the viewer can start the media on their own\n\t\t\t\t\t\tif( promise && typeof promise.catch === 'function' && el.controls === false ) {\n\t\t\t\t\t\t\tpromise.catch( () => {\n\t\t\t\t\t\t\t\tel.controls = true;\n\n\t\t\t\t\t\t\t\t// Once the video does start playing, hide the controls again\n\t\t\t\t\t\t\t\tel.addEventListener( 'play', () => {\n\t\t\t\t\t\t\t\t\tel.controls = false;\n\t\t\t\t\t\t\t\t} );\n\t\t\t\t\t\t\t} );\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\t// If the media isn't loaded, wait before playing\n\t\t\t\t\telse {\n\t\t\t\t\t\tel.removeEventListener( 'loadeddata', this.startEmbeddedMedia ); // remove first to avoid dupes\n\t\t\t\t\t\tel.addEventListener( 'loadeddata', this.startEmbeddedMedia );\n\t\t\t\t\t}\n\n\t\t\t\t}\n\t\t\t} );\n\n\t\t\t// Normal iframes\n\t\t\tqueryAll( element, 'iframe[src]' ).forEach( el => {\n\t\t\t\tif( closest( el, '.fragment' ) && !closest( el, '.fragment.visible' ) ) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tthis.startEmbeddedIframe( { target: el } );\n\t\t\t} );\n\n\t\t\t// Lazy loading iframes\n\t\t\tqueryAll( element, 'iframe[data-src]' ).forEach( el => {\n\t\t\t\tif( closest( el, '.fragment' ) && !closest( el, '.fragment.visible' ) ) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tif( el.getAttribute( 'src' ) !== el.getAttribute( 'data-src' ) ) {\n\t\t\t\t\tel.removeEventListener( 'load', this.startEmbeddedIframe ); // remove first to avoid dupes\n\t\t\t\t\tel.addEventListener( 'load', this.startEmbeddedIframe );\n\t\t\t\t\tel.setAttribute( 'src', el.getAttribute( 'data-src' ) );\n\t\t\t\t}\n\t\t\t} );\n\n\t\t}\n\n\t}\n\n\t/**\n\t * Starts playing an embedded video/audio element after\n\t * it has finished loading.\n\t *\n\t * @param {object} event\n\t */\n\tstartEmbeddedMedia( event ) {\n\n\t\tlet isAttachedToDOM = !!closest( event.target, 'html' ),\n\t\t\tisVisible  \t\t= !!closest( event.target, '.present' );\n\n\t\tif( isAttachedToDOM && isVisible ) {\n\t\t\tevent.target.currentTime = 0;\n\t\t\tevent.target.play();\n\t\t}\n\n\t\tevent.target.removeEventListener( 'loadeddata', this.startEmbeddedMedia );\n\n\t}\n\n\t/**\n\t * \"Starts\" the content of an embedded iframe using the\n\t * postMessage API.\n\t *\n\t * @param {object} event\n\t */\n\tstartEmbeddedIframe( event ) {\n\n\t\tlet iframe = event.target;\n\n\t\tif( iframe && iframe.contentWindow ) {\n\n\t\t\tlet isAttachedToDOM = !!closest( event.target, 'html' ),\n\t\t\t\tisVisible  \t\t= !!closest( event.target, '.present' );\n\n\t\t\tif( isAttachedToDOM && isVisible ) {\n\n\t\t\t\t// Prefer an explicit global autoplay setting\n\t\t\t\tlet autoplay = this.Reveal.getConfig().autoPlayMedia;\n\n\t\t\t\t// If no global setting is available, fall back on the element's\n\t\t\t\t// own autoplay setting\n\t\t\t\tif( typeof autoplay !== 'boolean' ) {\n\t\t\t\t\tautoplay = iframe.hasAttribute( 'data-autoplay' ) || !!closest( iframe, '.slide-background' );\n\t\t\t\t}\n\n\t\t\t\t// YouTube postMessage API\n\t\t\t\tif( /youtube\\.com\\/embed\\//.test( iframe.getAttribute( 'src' ) ) && autoplay ) {\n\t\t\t\t\tiframe.contentWindow.postMessage( '{\"event\":\"command\",\"func\":\"playVideo\",\"args\":\"\"}', '*' );\n\t\t\t\t}\n\t\t\t\t// Vimeo postMessage API\n\t\t\t\telse if( /player\\.vimeo\\.com\\//.test( iframe.getAttribute( 'src' ) ) && autoplay ) {\n\t\t\t\t\tiframe.contentWindow.postMessage( '{\"method\":\"play\"}', '*' );\n\t\t\t\t}\n\t\t\t\t// Generic postMessage API\n\t\t\t\telse {\n\t\t\t\t\tiframe.contentWindow.postMessage( 'slide:start', '*' );\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\t/**\n\t * Stop playback of any embedded content inside of\n\t * the targeted slide.\n\t *\n\t * @param {HTMLElement} element\n\t */\n\tstopEmbeddedContent( element, options = {} ) {\n\n\t\toptions = extend( {\n\t\t\t// Defaults\n\t\t\tunloadIframes: true\n\t\t}, options );\n\n\t\tif( element && element.parentNode ) {\n\t\t\t// HTML5 media elements\n\t\t\tqueryAll( element, 'video, audio' ).forEach( el => {\n\t\t\t\tif( !el.hasAttribute( 'data-ignore' ) && typeof el.pause === 'function' ) {\n\t\t\t\t\tel.setAttribute('data-paused-by-reveal', '');\n\t\t\t\t\tel.pause();\n\t\t\t\t}\n\t\t\t} );\n\n\t\t\t// Generic postMessage API for non-lazy loaded iframes\n\t\t\tqueryAll( element, 'iframe' ).forEach( el => {\n\t\t\t\tif( el.contentWindow ) el.contentWindow.postMessage( 'slide:stop', '*' );\n\t\t\t\tel.removeEventListener( 'load', this.startEmbeddedIframe );\n\t\t\t});\n\n\t\t\t// YouTube postMessage API\n\t\t\tqueryAll( element, 'iframe[src*=\"youtube.com/embed/\"]' ).forEach( el => {\n\t\t\t\tif( !el.hasAttribute( 'data-ignore' ) && el.contentWindow && typeof el.contentWindow.postMessage === 'function' ) {\n\t\t\t\t\tel.contentWindow.postMessage( '{\"event\":\"command\",\"func\":\"pauseVideo\",\"args\":\"\"}', '*' );\n\t\t\t\t}\n\t\t\t});\n\n\t\t\t// Vimeo postMessage API\n\t\t\tqueryAll( element, 'iframe[src*=\"player.vimeo.com/\"]' ).forEach( el => {\n\t\t\t\tif( !el.hasAttribute( 'data-ignore' ) && el.contentWindow && typeof el.contentWindow.postMessage === 'function' ) {\n\t\t\t\t\tel.contentWindow.postMessage( '{\"method\":\"pause\"}', '*' );\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tif( options.unloadIframes === true ) {\n\t\t\t\t// Unload lazy-loaded iframes\n\t\t\t\tqueryAll( element, 'iframe[data-src]' ).forEach( el => {\n\t\t\t\t\t// Only removing the src doesn't actually unload the frame\n\t\t\t\t\t// in all browsers (Firefox) so we set it to blank first\n\t\t\t\t\tel.setAttribute( 'src', 'about:blank' );\n\t\t\t\t\tel.removeAttribute( 'src' );\n\t\t\t\t} );\n\t\t\t}\n\t\t}\n\n\t}\n\n}\n", "/**\n * Handles the display of reveal.js' optional slide number.\n */\nexport default class SlideNumber {\n\n\tconstructor( Reveal ) {\n\n\t\tthis.Reveal = Reveal;\n\n\t}\n\n\trender() {\n\n\t\tthis.element = document.createElement( 'div' );\n\t\tthis.element.className = 'slide-number';\n\t\tthis.Reveal.getRevealElement().appendChild( this.element );\n\n\t}\n\n\t/**\n\t * Called when the reveal.js config is updated.\n\t */\n\tconfigure( config, oldConfig ) {\n\n\t\tlet slideNumberDisplay = 'none';\n\t\tif( config.slideNumber && !this.Reveal.isPrintingPDF() ) {\n\t\t\tif( config.showSlideNumber === 'all' ) {\n\t\t\t\tslideNumberDisplay = 'block';\n\t\t\t}\n\t\t\telse if( config.showSlideNumber === 'speaker' && this.Reveal.isSpeakerNotes() ) {\n\t\t\t\tslideNumberDisplay = 'block';\n\t\t\t}\n\t\t}\n\n\t\tthis.element.style.display = slideNumberDisplay;\n\n\t}\n\n\t/**\n\t * Updates the slide number to match the current slide.\n\t */\n\tupdate() {\n\n\t\t// Update slide number if enabled\n\t\tif( this.Reveal.getConfig().slideNumber && this.element ) {\n\t\t\tthis.element.innerHTML = this.getSlideNumber();\n\t\t}\n\n\t}\n\n\t/**\n\t * Returns the HTML string corresponding to the current slide\n\t * number, including formatting.\n\t */\n\tgetSlideNumber( slide = this.Reveal.getCurrentSlide() ) {\n\n\t\tlet config = this.Reveal.getConfig();\n\t\tlet value;\n\t\tlet format = 'h.v';\n\n\t\tif ( typeof config.slideNumber === 'function' ) {\n\t\t\tvalue = config.slideNumber( slide );\n\t\t} else {\n\t\t\t// Check if a custom number format is available\n\t\t\tif( typeof config.slideNumber === 'string' ) {\n\t\t\t\tformat = config.slideNumber;\n\t\t\t}\n\n\t\t\t// If there are ONLY vertical slides in this deck, always use\n\t\t\t// a flattened slide number\n\t\t\tif( !/c/.test( format ) && this.Reveal.getHorizontalSlides().length === 1 ) {\n\t\t\t\tformat = 'c';\n\t\t\t}\n\n\t\t\t// Offset the current slide number by 1 to make it 1-indexed\n\t\t\tlet horizontalOffset = slide && slide.dataset.visibility === 'uncounted' ? 0 : 1;\n\n\t\t\tvalue = [];\n\t\t\tswitch( format ) {\n\t\t\t\tcase 'c':\n\t\t\t\t\tvalue.push( this.Reveal.getSlidePastCount( slide ) + horizontalOffset );\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'c/t':\n\t\t\t\t\tvalue.push( this.Reveal.getSlidePastCount( slide ) + horizontalOffset, '/', this.Reveal.getTotalSlides() );\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\tlet indices = this.Reveal.getIndices( slide );\n\t\t\t\t\tvalue.push( indices.h + horizontalOffset );\n\t\t\t\t\tlet sep = format === 'h/v' ? '/' : '.';\n\t\t\t\t\tif( this.Reveal.isVerticalSlide( slide ) ) value.push( sep, indices.v + 1 );\n\t\t\t}\n\t\t}\n\n\t\tlet url = '#' + this.Reveal.location.getHash( slide );\n\t\treturn this.formatNumber( value[0], value[1], value[2], url );\n\n\t}\n\n\t/**\n\t * Applies HTML formatting to a slide number before it's\n\t * written to the DOM.\n\t *\n\t * @param {number} a Current slide\n\t * @param {string} delimiter Character to separate slide numbers\n\t * @param {(number|*)} b Total slides\n\t * @param {HTMLElement} [url='#'+locationHash()] The url to link to\n\t * @return {string} HTML string fragment\n\t */\n\tformatNumber( a, delimiter, b, url = '#' + this.Reveal.location.getHash() ) {\n\n\t\tif( typeof b === 'number' && !isNaN( b ) ) {\n\t\t\treturn  `<a href=\"${url}\">\n\t\t\t\t\t<span class=\"slide-number-a\">${a}</span>\n\t\t\t\t\t<span class=\"slide-number-delimiter\">${delimiter}</span>\n\t\t\t\t\t<span class=\"slide-number-b\">${b}</span>\n\t\t\t\t\t</a>`;\n\t\t}\n\t\telse {\n\t\t\treturn `<a href=\"${url}\">\n\t\t\t\t\t<span class=\"slide-number-a\">${a}</span>\n\t\t\t\t\t</a>`;\n\t\t}\n\n\t}\n\n\tdestroy() {\n\n\t\tthis.element.remove();\n\n\t}\n\n}", "/**\n * Makes it possible to jump to a slide by entering its\n * slide number or id.\n */\nexport default class JumpToSlide {\n\n\tconstructor( Reveal ) {\n\n\t\tthis.Reveal = Reveal;\n\n\t\tthis.onInput = this.onInput.bind( this );\n\t\tthis.onBlur = this.onBlur.bind( this );\n\t\tthis.onKeyDown = this.onKeyDown.bind( this );\n\n\t}\n\n\trender() {\n\n\t\tthis.element = document.createElement( 'div' );\n\t\tthis.element.className = 'jump-to-slide';\n\n    this.jumpInput = document.createElement( 'input' );\n    this.jumpInput.type = 'text';\n    this.jumpInput.className = 'jump-to-slide-input';\n    this.jumpInput.placeholder = 'Jump to slide';\n\t\tthis.jumpInput.addEventListener( 'input', this.onInput );\n\t\tthis.jumpInput.addEventListener( 'keydown', this.onKeyDown );\n\t\tthis.jumpInput.addEventListener( 'blur', this.onBlur );\n\n    this.element.appendChild( this.jumpInput );\n\n\t}\n\n\tshow() {\n\n\t\tthis.indicesOnShow = this.Reveal.getIndices();\n\n\t\tthis.Reveal.getRevealElement().appendChild( this.element );\n\t\tthis.jumpInput.focus();\n\n\t}\n\n\thide() {\n\n\t\tif( this.isVisible() ) {\n\t\t\tthis.element.remove();\n\t\t\tthis.jumpInput.value = '';\n\n\t\t\tclearTimeout( this.jumpTimeout );\n\t\t\tdelete this.jumpTimeout;\n\t\t}\n\n\t}\n\n\tisVisible() {\n\n\t\treturn !!this.element.parentNode;\n\n\t}\n\n\t/**\n\t * Parses the current input and jumps to the given slide.\n\t */\n\tjump() {\n\n\t\tclearTimeout( this.jumpTimeout );\n\t\tdelete this.jumpTimeout;\n\n\t\tconst query = this.jumpInput.value.trim( '' );\n\t\tlet indices = this.Reveal.location.getIndicesFromHash( query, { oneBasedIndex: true } );\n\n\t\t// If no valid index was found and the input query is a\n\t\t// string, fall back on a simple search\n\t\tif( !indices && /\\S+/i.test( query ) && query.length > 1 ) {\n\t\t\tindices = this.search( query );\n\t\t}\n\n\t\tif( indices && query !== '' ) {\n\t\t\tthis.Reveal.slide( indices.h, indices.v, indices.f );\n\t\t\treturn true;\n\t\t}\n\t\telse {\n\t\t\tthis.Reveal.slide( this.indicesOnShow.h, this.indicesOnShow.v, this.indicesOnShow.f );\n\t\t\treturn false;\n\t\t}\n\n\t}\n\n\tjumpAfter( delay ) {\n\n\t\tclearTimeout( this.jumpTimeout );\n\t\tthis.jumpTimeout = setTimeout( () => this.jump(), delay );\n\n\t}\n\n\t/**\n\t * A lofi search that looks for the given query in all\n\t * of our slides and returns the first match.\n\t */\n\tsearch( query ) {\n\n\t\tconst regex = new RegExp( '\\\\b' + query.trim() + '\\\\b', 'i' );\n\n\t\tconst slide = this.Reveal.getSlides().find( ( slide ) => {\n\t\t\treturn regex.test( slide.innerText );\n\t\t} );\n\n\t\tif( slide ) {\n\t\t\treturn this.Reveal.getIndices( slide );\n\t\t}\n\t\telse {\n\t\t\treturn null;\n\t\t}\n\n\t}\n\n\t/**\n\t * Reverts back to the slide we were on when jump to slide was\n\t * invoked.\n\t */\n\tcancel() {\n\n\t\tthis.Reveal.slide( this.indicesOnShow.h, this.indicesOnShow.v, this.indicesOnShow.f );\n\t\tthis.hide();\n\n\t}\n\n\tconfirm() {\n\n\t\tthis.jump();\n\t\tthis.hide();\n\n\t}\n\n\tdestroy() {\n\n\t\tthis.jumpInput.removeEventListener( 'input', this.onInput );\n\t\tthis.jumpInput.removeEventListener( 'keydown', this.onKeyDown );\n\t\tthis.jumpInput.removeEventListener( 'blur', this.onBlur );\n\n\t\tthis.element.remove();\n\n\t}\n\n\tonKeyDown( event ) {\n\n\t\tif( event.keyCode === 13 ) {\n\t\t\tthis.confirm();\n\t\t}\n\t\telse if( event.keyCode === 27 ) {\n\t\t\tthis.cancel();\n\n\t\t\tevent.stopImmediatePropagation();\n\t\t}\n\n\t}\n\n\tonInput( event ) {\n\n\t\tthis.jumpAfter( 200 );\n\n\t}\n\n\tonBlur() {\n\n\t\tsetTimeout( () => this.hide(), 1 );\n\n\t}\n\n}", "/**\n * Converts various color input formats to an {r:0,g:0,b:0} object.\n *\n * @param {string} color The string representation of a color\n * @example\n * colorToRgb('#000');\n * @example\n * colorToRgb('#000000');\n * @example\n * colorToRgb('rgb(0,0,0)');\n * @example\n * colorToRgb('rgba(0,0,0)');\n *\n * @return {{r: number, g: number, b: number, [a]: number}|null}\n */\nexport const colorToRgb = ( color ) => {\n\n\tlet hex3 = color.match( /^#([0-9a-f]{3})$/i );\n\tif( hex3 && hex3[1] ) {\n\t\thex3 = hex3[1];\n\t\treturn {\n\t\t\tr: parseInt( hex3.charAt( 0 ), 16 ) * 0x11,\n\t\t\tg: parseInt( hex3.charAt( 1 ), 16 ) * 0x11,\n\t\t\tb: parseInt( hex3.charAt( 2 ), 16 ) * 0x11\n\t\t};\n\t}\n\n\tlet hex6 = color.match( /^#([0-9a-f]{6})$/i );\n\tif( hex6 && hex6[1] ) {\n\t\thex6 = hex6[1];\n\t\treturn {\n\t\t\tr: parseInt( hex6.slice( 0, 2 ), 16 ),\n\t\t\tg: parseInt( hex6.slice( 2, 4 ), 16 ),\n\t\t\tb: parseInt( hex6.slice( 4, 6 ), 16 )\n\t\t};\n\t}\n\n\tlet rgb = color.match( /^rgb\\s*\\(\\s*(\\d+)\\s*,\\s*(\\d+)\\s*,\\s*(\\d+)\\s*\\)$/i );\n\tif( rgb ) {\n\t\treturn {\n\t\t\tr: parseInt( rgb[1], 10 ),\n\t\t\tg: parseInt( rgb[2], 10 ),\n\t\t\tb: parseInt( rgb[3], 10 )\n\t\t};\n\t}\n\n\tlet rgba = color.match( /^rgba\\s*\\(\\s*(\\d+)\\s*,\\s*(\\d+)\\s*,\\s*(\\d+)\\s*\\,\\s*([\\d]+|[\\d]*.[\\d]+)\\s*\\)$/i );\n\tif( rgba ) {\n\t\treturn {\n\t\t\tr: parseInt( rgba[1], 10 ),\n\t\t\tg: parseInt( rgba[2], 10 ),\n\t\t\tb: parseInt( rgba[3], 10 ),\n\t\t\ta: parseFloat( rgba[4] )\n\t\t};\n\t}\n\n\treturn null;\n\n}\n\n/**\n * Calculates brightness on a scale of 0-255.\n *\n * @param {string} color See colorToRgb for supported formats.\n * @see {@link colorToRgb}\n */\nexport const colorBrightness = ( color ) => {\n\n\tif( typeof color === 'string' ) color = colorToRgb( color );\n\n\tif( color ) {\n\t\treturn ( color.r * 299 + color.g * 587 + color.b * 114 ) / 1000;\n\t}\n\n\treturn null;\n\n}", "import { queryAll } from '../utils/util.js'\nimport { colorToRgb, colorBrightness } from '../utils/color.js'\n\n/**\n * Creates and updates slide backgrounds.\n */\nexport default class Backgrounds {\n\n\tconstructor( Reveal ) {\n\n\t\tthis.Reveal = Reveal;\n\n\t}\n\n\trender() {\n\n\t\tthis.element = document.createElement( 'div' );\n\t\tthis.element.className = 'backgrounds';\n\t\tthis.Reveal.getRevealElement().appendChild( this.element );\n\n\t}\n\n\t/**\n\t * Creates the slide background elements and appends them\n\t * to the background container. One element is created per\n\t * slide no matter if the given slide has visible background.\n\t */\n\tcreate() {\n\n\t\t// Clear prior backgrounds\n\t\tthis.element.innerHTML = '';\n\t\tthis.element.classList.add( 'no-transition' );\n\n\t\t// Iterate over all horizontal slides\n\t\tthis.Reveal.getHorizontalSlides().forEach( slideh => {\n\n\t\t\tlet backgroundStack = this.createBackground( slideh, this.element );\n\n\t\t\t// Iterate over all vertical slides\n\t\t\tqueryAll( slideh, 'section' ).forEach( slidev => {\n\n\t\t\t\tthis.createBackground( slidev, backgroundStack );\n\n\t\t\t\tbackgroundStack.classList.add( 'stack' );\n\n\t\t\t} );\n\n\t\t} );\n\n\t\t// Add parallax background if specified\n\t\tif( this.Reveal.getConfig().parallaxBackgroundImage ) {\n\n\t\t\tthis.element.style.backgroundImage = 'url(\"' + this.Reveal.getConfig().parallaxBackgroundImage + '\")';\n\t\t\tthis.element.style.backgroundSize = this.Reveal.getConfig().parallaxBackgroundSize;\n\t\t\tthis.element.style.backgroundRepeat = this.Reveal.getConfig().parallaxBackgroundRepeat;\n\t\t\tthis.element.style.backgroundPosition = this.Reveal.getConfig().parallaxBackgroundPosition;\n\n\t\t\t// Make sure the below properties are set on the element - these properties are\n\t\t\t// needed for proper transitions to be set on the element via CSS. To remove\n\t\t\t// annoying background slide-in effect when the presentation starts, apply\n\t\t\t// these properties after short time delay\n\t\t\tsetTimeout( () => {\n\t\t\t\tthis.Reveal.getRevealElement().classList.add( 'has-parallax-background' );\n\t\t\t}, 1 );\n\n\t\t}\n\t\telse {\n\n\t\t\tthis.element.style.backgroundImage = '';\n\t\t\tthis.Reveal.getRevealElement().classList.remove( 'has-parallax-background' );\n\n\t\t}\n\n\t}\n\n\t/**\n\t * Creates a background for the given slide.\n\t *\n\t * @param {HTMLElement} slide\n\t * @param {HTMLElement} container The element that the background\n\t * should be appended to\n\t * @return {HTMLElement} New background div\n\t */\n\tcreateBackground( slide, container ) {\n\n\t\t// Main slide background element\n\t\tlet element = document.createElement( 'div' );\n\t\telement.className = 'slide-background ' + slide.className.replace( /present|past|future/, '' );\n\n\t\t// Inner background element that wraps images/videos/iframes\n\t\tlet contentElement = document.createElement( 'div' );\n\t\tcontentElement.className = 'slide-background-content';\n\n\t\telement.appendChild( contentElement );\n\t\tcontainer.appendChild( element );\n\n\t\tslide.slideBackgroundElement = element;\n\t\tslide.slideBackgroundContentElement = contentElement;\n\n\t\t// Syncs the background to reflect all current background settings\n\t\tthis.sync( slide );\n\n\t\treturn element;\n\n\t}\n\n\t/**\n\t * Renders all of the visual properties of a slide background\n\t * based on the various background attributes.\n\t *\n\t * @param {HTMLElement} slide\n\t */\n\tsync( slide ) {\n\n\t\tconst element = slide.slideBackgroundElement,\n\t\t\tcontentElement = slide.slideBackgroundContentElement;\n\n\t\tconst data = {\n\t\t\tbackground: slide.getAttribute( 'data-background' ),\n\t\t\tbackgroundSize: slide.getAttribute( 'data-background-size' ),\n\t\t\tbackgroundImage: slide.getAttribute( 'data-background-image' ),\n\t\t\tbackgroundVideo: slide.getAttribute( 'data-background-video' ),\n\t\t\tbackgroundIframe: slide.getAttribute( 'data-background-iframe' ),\n\t\t\tbackgroundColor: slide.getAttribute( 'data-background-color' ),\n\t\t\tbackgroundGradient: slide.getAttribute( 'data-background-gradient' ),\n\t\t\tbackgroundRepeat: slide.getAttribute( 'data-background-repeat' ),\n\t\t\tbackgroundPosition: slide.getAttribute( 'data-background-position' ),\n\t\t\tbackgroundTransition: slide.getAttribute( 'data-background-transition' ),\n\t\t\tbackgroundOpacity: slide.getAttribute( 'data-background-opacity' ),\n\t\t};\n\n\t\tconst dataPreload = slide.hasAttribute( 'data-preload' );\n\n\t\t// Reset the prior background state in case this is not the\n\t\t// initial sync\n\t\tslide.classList.remove( 'has-dark-background' );\n\t\tslide.classList.remove( 'has-light-background' );\n\n\t\telement.removeAttribute( 'data-loaded' );\n\t\telement.removeAttribute( 'data-background-hash' );\n\t\telement.removeAttribute( 'data-background-size' );\n\t\telement.removeAttribute( 'data-background-transition' );\n\t\telement.style.backgroundColor = '';\n\n\t\tcontentElement.style.backgroundSize = '';\n\t\tcontentElement.style.backgroundRepeat = '';\n\t\tcontentElement.style.backgroundPosition = '';\n\t\tcontentElement.style.backgroundImage = '';\n\t\tcontentElement.style.opacity = '';\n\t\tcontentElement.innerHTML = '';\n\n\t\tif( data.background ) {\n\t\t\t// Auto-wrap image urls in url(...)\n\t\t\tif( /^(http|file|\\/\\/)/gi.test( data.background ) || /\\.(svg|png|jpg|jpeg|gif|bmp|webp)([?#\\s]|$)/gi.test( data.background ) ) {\n\t\t\t\tslide.setAttribute( 'data-background-image', data.background );\n\t\t\t}\n\t\t\telse {\n\t\t\t\telement.style.background = data.background;\n\t\t\t}\n\t\t}\n\n\t\t// Create a hash for this combination of background settings.\n\t\t// This is used to determine when two slide backgrounds are\n\t\t// the same.\n\t\tif( data.background || data.backgroundColor || data.backgroundGradient || data.backgroundImage || data.backgroundVideo || data.backgroundIframe ) {\n\t\t\telement.setAttribute( 'data-background-hash', data.background +\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tdata.backgroundSize +\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tdata.backgroundImage +\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tdata.backgroundVideo +\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tdata.backgroundIframe +\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tdata.backgroundColor +\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tdata.backgroundGradient +\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tdata.backgroundRepeat +\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tdata.backgroundPosition +\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tdata.backgroundTransition +\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tdata.backgroundOpacity );\n\t\t}\n\n\t\t// Additional and optional background properties\n\t\tif( data.backgroundSize ) element.setAttribute( 'data-background-size', data.backgroundSize );\n\t\tif( data.backgroundColor ) element.style.backgroundColor = data.backgroundColor;\n\t\tif( data.backgroundGradient ) element.style.backgroundImage = data.backgroundGradient;\n\t\tif( data.backgroundTransition ) element.setAttribute( 'data-background-transition', data.backgroundTransition );\n\n\t\tif( dataPreload ) element.setAttribute( 'data-preload', '' );\n\n\t\t// Background image options are set on the content wrapper\n\t\tif( data.backgroundSize ) contentElement.style.backgroundSize = data.backgroundSize;\n\t\tif( data.backgroundRepeat ) contentElement.style.backgroundRepeat = data.backgroundRepeat;\n\t\tif( data.backgroundPosition ) contentElement.style.backgroundPosition = data.backgroundPosition;\n\t\tif( data.backgroundOpacity ) contentElement.style.opacity = data.backgroundOpacity;\n\n\t\t// If this slide has a background color, we add a class that\n\t\t// signals if it is light or dark. If the slide has no background\n\t\t// color, no class will be added\n\t\tlet contrastColor = data.backgroundColor;\n\n\t\t// If no bg color was found, or it cannot be converted by colorToRgb, check the computed background\n\t\tif( !contrastColor || !colorToRgb( contrastColor ) ) {\n\t\t\tlet computedBackgroundStyle = window.getComputedStyle( element );\n\t\t\tif( computedBackgroundStyle && computedBackgroundStyle.backgroundColor ) {\n\t\t\t\tcontrastColor = computedBackgroundStyle.backgroundColor;\n\t\t\t}\n\t\t}\n\n\t\tif( contrastColor ) {\n\t\t\tconst rgb = colorToRgb( contrastColor );\n\n\t\t\t// Ignore fully transparent backgrounds. Some browsers return\n\t\t\t// rgba(0,0,0,0) when reading the computed background color of\n\t\t\t// an element with no background\n\t\t\tif( rgb && rgb.a !== 0 ) {\n\t\t\t\tif( colorBrightness( contrastColor ) < 128 ) {\n\t\t\t\t\tslide.classList.add( 'has-dark-background' );\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tslide.classList.add( 'has-light-background' );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t}\n\n\t/**\n\t * Updates the background elements to reflect the current\n\t * slide.\n\t *\n\t * @param {boolean} includeAll If true, the backgrounds of\n\t * all vertical slides (not just the present) will be updated.\n\t */\n\tupdate( includeAll = false ) {\n\n\t\tlet currentSlide = this.Reveal.getCurrentSlide();\n\t\tlet indices = this.Reveal.getIndices();\n\n\t\tlet currentBackground = null;\n\n\t\t// Reverse past/future classes when in RTL mode\n\t\tlet horizontalPast = this.Reveal.getConfig().rtl ? 'future' : 'past',\n\t\t\thorizontalFuture = this.Reveal.getConfig().rtl ? 'past' : 'future';\n\n\t\t// Update the classes of all backgrounds to match the\n\t\t// states of their slides (past/present/future)\n\t\tArray.from( this.element.childNodes ).forEach( ( backgroundh, h ) => {\n\n\t\t\tbackgroundh.classList.remove( 'past', 'present', 'future' );\n\n\t\t\tif( h < indices.h ) {\n\t\t\t\tbackgroundh.classList.add( horizontalPast );\n\t\t\t}\n\t\t\telse if ( h > indices.h ) {\n\t\t\t\tbackgroundh.classList.add( horizontalFuture );\n\t\t\t}\n\t\t\telse {\n\t\t\t\tbackgroundh.classList.add( 'present' );\n\n\t\t\t\t// Store a reference to the current background element\n\t\t\t\tcurrentBackground = backgroundh;\n\t\t\t}\n\n\t\t\tif( includeAll || h === indices.h ) {\n\t\t\t\tqueryAll( backgroundh, '.slide-background' ).forEach( ( backgroundv, v ) => {\n\n\t\t\t\t\tbackgroundv.classList.remove( 'past', 'present', 'future' );\n\n\t\t\t\t\tif( v < indices.v ) {\n\t\t\t\t\t\tbackgroundv.classList.add( 'past' );\n\t\t\t\t\t}\n\t\t\t\t\telse if ( v > indices.v ) {\n\t\t\t\t\t\tbackgroundv.classList.add( 'future' );\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tbackgroundv.classList.add( 'present' );\n\n\t\t\t\t\t\t// Only if this is the present horizontal and vertical slide\n\t\t\t\t\t\tif( h === indices.h ) currentBackground = backgroundv;\n\t\t\t\t\t}\n\n\t\t\t\t} );\n\t\t\t}\n\n\t\t} );\n\n\t\t// Stop content inside of previous backgrounds\n\t\tif( this.previousBackground ) {\n\n\t\t\tthis.Reveal.slideContent.stopEmbeddedContent( this.previousBackground, { unloadIframes: !this.Reveal.slideContent.shouldPreload( this.previousBackground ) } );\n\n\t\t}\n\n\t\t// Start content in the current background\n\t\tif( currentBackground ) {\n\n\t\t\tthis.Reveal.slideContent.startEmbeddedContent( currentBackground );\n\n\t\t\tlet currentBackgroundContent = currentBackground.querySelector( '.slide-background-content' );\n\t\t\tif( currentBackgroundContent ) {\n\n\t\t\t\tlet backgroundImageURL = currentBackgroundContent.style.backgroundImage || '';\n\n\t\t\t\t// Restart GIFs (doesn't work in Firefox)\n\t\t\t\tif( /\\.gif/i.test( backgroundImageURL ) ) {\n\t\t\t\t\tcurrentBackgroundContent.style.backgroundImage = '';\n\t\t\t\t\twindow.getComputedStyle( currentBackgroundContent ).opacity;\n\t\t\t\t\tcurrentBackgroundContent.style.backgroundImage = backgroundImageURL;\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// Don't transition between identical backgrounds. This\n\t\t\t// prevents unwanted flicker.\n\t\t\tlet previousBackgroundHash = this.previousBackground ? this.previousBackground.getAttribute( 'data-background-hash' ) : null;\n\t\t\tlet currentBackgroundHash = currentBackground.getAttribute( 'data-background-hash' );\n\t\t\tif( currentBackgroundHash && currentBackgroundHash === previousBackgroundHash && currentBackground !== this.previousBackground ) {\n\t\t\t\tthis.element.classList.add( 'no-transition' );\n\t\t\t}\n\n\t\t\tthis.previousBackground = currentBackground;\n\n\t\t}\n\n\t\t// If there's a background brightness flag for this slide,\n\t\t// bubble it to the .reveal container\n\t\tif( currentSlide ) {\n\t\t\t[ 'has-light-background', 'has-dark-background' ].forEach( classToBubble => {\n\t\t\t\tif( currentSlide.classList.contains( classToBubble ) ) {\n\t\t\t\t\tthis.Reveal.getRevealElement().classList.add( classToBubble );\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tthis.Reveal.getRevealElement().classList.remove( classToBubble );\n\t\t\t\t}\n\t\t\t}, this );\n\t\t}\n\n\t\t// Allow the first background to apply without transition\n\t\tsetTimeout( () => {\n\t\t\tthis.element.classList.remove( 'no-transition' );\n\t\t}, 1 );\n\n\t}\n\n\t/**\n\t * Updates the position of the parallax background based\n\t * on the current slide index.\n\t */\n\tupdateParallax() {\n\n\t\tlet indices = this.Reveal.getIndices();\n\n\t\tif( this.Reveal.getConfig().parallaxBackgroundImage ) {\n\n\t\t\tlet horizontalSlides = this.Reveal.getHorizontalSlides(),\n\t\t\t\tverticalSlides = this.Reveal.getVerticalSlides();\n\n\t\t\tlet backgroundSize = this.element.style.backgroundSize.split( ' ' ),\n\t\t\t\tbackgroundWidth, backgroundHeight;\n\n\t\t\tif( backgroundSize.length === 1 ) {\n\t\t\t\tbackgroundWidth = backgroundHeight = parseInt( backgroundSize[0], 10 );\n\t\t\t}\n\t\t\telse {\n\t\t\t\tbackgroundWidth = parseInt( backgroundSize[0], 10 );\n\t\t\t\tbackgroundHeight = parseInt( backgroundSize[1], 10 );\n\t\t\t}\n\n\t\t\tlet slideWidth = this.element.offsetWidth,\n\t\t\t\thorizontalSlideCount = horizontalSlides.length,\n\t\t\t\thorizontalOffsetMultiplier,\n\t\t\t\thorizontalOffset;\n\n\t\t\tif( typeof this.Reveal.getConfig().parallaxBackgroundHorizontal === 'number' ) {\n\t\t\t\thorizontalOffsetMultiplier = this.Reveal.getConfig().parallaxBackgroundHorizontal;\n\t\t\t}\n\t\t\telse {\n\t\t\t\thorizontalOffsetMultiplier = horizontalSlideCount > 1 ? ( backgroundWidth - slideWidth ) / ( horizontalSlideCount-1 ) : 0;\n\t\t\t}\n\n\t\t\thorizontalOffset = horizontalOffsetMultiplier * indices.h * -1;\n\n\t\t\tlet slideHeight = this.element.offsetHeight,\n\t\t\t\tverticalSlideCount = verticalSlides.length,\n\t\t\t\tverticalOffsetMultiplier,\n\t\t\t\tverticalOffset;\n\n\t\t\tif( typeof this.Reveal.getConfig().parallaxBackgroundVertical === 'number' ) {\n\t\t\t\tverticalOffsetMultiplier = this.Reveal.getConfig().parallaxBackgroundVertical;\n\t\t\t}\n\t\t\telse {\n\t\t\t\tverticalOffsetMultiplier = ( backgroundHeight - slideHeight ) / ( verticalSlideCount-1 );\n\t\t\t}\n\n\t\t\tverticalOffset = verticalSlideCount > 0 ?  verticalOffsetMultiplier * indices.v : 0;\n\n\t\t\tthis.element.style.backgroundPosition = horizontalOffset + 'px ' + -verticalOffset + 'px';\n\n\t\t}\n\n\t}\n\n\tdestroy() {\n\n\t\tthis.element.remove();\n\n\t}\n\n}\n", "\nexport const SLIDES_SELECTOR = '.slides section';\nexport const HORIZONTAL_SLIDES_SELECTOR = '.slides>section';\nexport const VERTICAL_SLIDES_SELECTOR = '.slides>section.present>section';\n\n// Methods that may not be invoked via the postMessage API\nexport const POST_MESSAGE_METHOD_BLACKLIST = /registerPlugin|registerKeyboardShortcut|addKeyBinding|addEventListener|showPreview/;\n\n// Regex for retrieving the fragment style from a class attribute\nexport const FRAGMENT_STYLE_REGEX = /fade-(down|up|right|left|out|in-then-out|in-then-semi-out)|semi-fade-out|current-visible|shrink|grow/;", "import { queryAll, extend, createStyleSheet, matches, closest } from '../utils/util.js'\nimport { FRAGMENT_STYLE_REGEX } from '../utils/constants.js'\n\n// Counter used to generate unique IDs for auto-animated elements\nlet autoAnimateCounter = 0;\n\n/**\n * Automatically animates matching elements across\n * slides with the [data-auto-animate] attribute.\n */\nexport default class AutoAnimate {\n\n\tconstructor( Reveal ) {\n\n\t\tthis.Reveal = Reveal;\n\n\t}\n\n\t/**\n\t * Runs an auto-animation between the given slides.\n\t *\n\t * @param  {HTMLElement} fromSlide\n\t * @param  {HTMLElement} toSlide\n\t */\n\trun( fromSlide, toSlide ) {\n\n\t\t// Clean up after prior animations\n\t\tthis.reset();\n\n\t\tlet allSlides = this.Reveal.getSlides();\n\t\tlet toSlideIndex = allSlides.indexOf( toSlide );\n\t\tlet fromSlideIndex = allSlides.indexOf( fromSlide );\n\n\t\t// Ensure that both slides are auto-animate targets with the same data-auto-animate-id value\n\t\t// (including null if absent on both) and that data-auto-animate-restart isn't set on the\n\t\t// physically latter slide (independent of slide direction)\n\t\tif( fromSlide.hasAttribute( 'data-auto-animate' ) && toSlide.hasAttribute( 'data-auto-animate' )\n\t\t\t\t&& fromSlide.getAttribute( 'data-auto-animate-id' ) === toSlide.getAttribute( 'data-auto-animate-id' ) \n\t\t\t\t&& !( toSlideIndex > fromSlideIndex ? toSlide : fromSlide ).hasAttribute( 'data-auto-animate-restart' ) ) {\n\n\t\t\t// Create a new auto-animate sheet\n\t\t\tthis.autoAnimateStyleSheet = this.autoAnimateStyleSheet || createStyleSheet();\n\n\t\t\tlet animationOptions = this.getAutoAnimateOptions( toSlide );\n\n\t\t\t// Set our starting state\n\t\t\tfromSlide.dataset.autoAnimate = 'pending';\n\t\t\ttoSlide.dataset.autoAnimate = 'pending';\n\n\t\t\t// Flag the navigation direction, needed for fragment buildup\n\t\t\tanimationOptions.slideDirection = toSlideIndex > fromSlideIndex ? 'forward' : 'backward';\n\n\t\t\t// If the from-slide is hidden because it has moved outside\n\t\t\t// the view distance, we need to temporarily show it while\n\t\t\t// measuring\n\t\t\tlet fromSlideIsHidden = fromSlide.style.display === 'none';\n\t\t\tif( fromSlideIsHidden ) fromSlide.style.display = this.Reveal.getConfig().display;\n\n\t\t\t// Inject our auto-animate styles for this transition\n\t\t\tlet css = this.getAutoAnimatableElements( fromSlide, toSlide ).map( elements => {\n\t\t\t\treturn this.autoAnimateElements( elements.from, elements.to, elements.options || {}, animationOptions, autoAnimateCounter++ );\n\t\t\t} );\n\n\t\t\tif( fromSlideIsHidden ) fromSlide.style.display = 'none';\n\n\t\t\t// Animate unmatched elements, if enabled\n\t\t\tif( toSlide.dataset.autoAnimateUnmatched !== 'false' && this.Reveal.getConfig().autoAnimateUnmatched === true ) {\n\n\t\t\t\t// Our default timings for unmatched elements\n\t\t\t\tlet defaultUnmatchedDuration = animationOptions.duration * 0.8,\n\t\t\t\t\tdefaultUnmatchedDelay = animationOptions.duration * 0.2;\n\n\t\t\t\tthis.getUnmatchedAutoAnimateElements( toSlide ).forEach( unmatchedElement => {\n\n\t\t\t\t\tlet unmatchedOptions = this.getAutoAnimateOptions( unmatchedElement, animationOptions );\n\t\t\t\t\tlet id = 'unmatched';\n\n\t\t\t\t\t// If there is a duration or delay set specifically for this\n\t\t\t\t\t// element our unmatched elements should adhere to those\n\t\t\t\t\tif( unmatchedOptions.duration !== animationOptions.duration || unmatchedOptions.delay !== animationOptions.delay ) {\n\t\t\t\t\t\tid = 'unmatched-' + autoAnimateCounter++;\n\t\t\t\t\t\tcss.push( `[data-auto-animate=\"running\"] [data-auto-animate-target=\"${id}\"] { transition: opacity ${unmatchedOptions.duration}s ease ${unmatchedOptions.delay}s; }` );\n\t\t\t\t\t}\n\n\t\t\t\t\tunmatchedElement.dataset.autoAnimateTarget = id;\n\n\t\t\t\t}, this );\n\n\t\t\t\t// Our default transition for unmatched elements\n\t\t\t\tcss.push( `[data-auto-animate=\"running\"] [data-auto-animate-target=\"unmatched\"] { transition: opacity ${defaultUnmatchedDuration}s ease ${defaultUnmatchedDelay}s; }` );\n\n\t\t\t}\n\n\t\t\t// Setting the whole chunk of CSS at once is the most\n\t\t\t// efficient way to do this. Using sheet.insertRule\n\t\t\t// is multiple factors slower.\n\t\t\tthis.autoAnimateStyleSheet.innerHTML = css.join( '' );\n\n\t\t\t// Start the animation next cycle\n\t\t\trequestAnimationFrame( () => {\n\t\t\t\tif( this.autoAnimateStyleSheet ) {\n\t\t\t\t\t// This forces our newly injected styles to be applied in Firefox\n\t\t\t\t\tgetComputedStyle( this.autoAnimateStyleSheet ).fontWeight;\n\n\t\t\t\t\ttoSlide.dataset.autoAnimate = 'running';\n\t\t\t\t}\n\t\t\t} );\n\n\t\t\tthis.Reveal.dispatchEvent({\n\t\t\t\ttype: 'autoanimate',\n\t\t\t\tdata: {\n\t\t\t\t\tfromSlide,\n\t\t\t\t\ttoSlide,\n\t\t\t\t\tsheet: this.autoAnimateStyleSheet\n\t\t\t\t}\n\t\t\t});\n\n\t\t}\n\n\t}\n\n\t/**\n\t * Rolls back all changes that we've made to the DOM so\n\t * that as part of animating.\n\t */\n\treset() {\n\n\t\t// Reset slides\n\t\tqueryAll( this.Reveal.getRevealElement(), '[data-auto-animate]:not([data-auto-animate=\"\"])' ).forEach( element => {\n\t\t\telement.dataset.autoAnimate = '';\n\t\t} );\n\n\t\t// Reset elements\n\t\tqueryAll( this.Reveal.getRevealElement(), '[data-auto-animate-target]' ).forEach( element => {\n\t\t\tdelete element.dataset.autoAnimateTarget;\n\t\t} );\n\n\t\t// Remove the animation sheet\n\t\tif( this.autoAnimateStyleSheet && this.autoAnimateStyleSheet.parentNode ) {\n\t\t\tthis.autoAnimateStyleSheet.parentNode.removeChild( this.autoAnimateStyleSheet );\n\t\t\tthis.autoAnimateStyleSheet = null;\n\t\t}\n\n\t}\n\n\t/**\n\t * Creates a FLIP animation where the `to` element starts out\n\t * in the `from` element position and animates to its original\n\t * state.\n\t *\n\t * @param {HTMLElement} from\n\t * @param {HTMLElement} to\n\t * @param {Object} elementOptions Options for this element pair\n\t * @param {Object} animationOptions Options set at the slide level\n\t * @param {String} id Unique ID that we can use to identify this\n\t * auto-animate element in the DOM\n\t */\n\tautoAnimateElements( from, to, elementOptions, animationOptions, id ) {\n\n\t\t// 'from' elements are given a data-auto-animate-target with no value,\n\t\t// 'to' elements are are given a data-auto-animate-target with an ID\n\t\tfrom.dataset.autoAnimateTarget = '';\n\t\tto.dataset.autoAnimateTarget = id;\n\n\t\t// Each element may override any of the auto-animate options\n\t\t// like transition easing, duration and delay via data-attributes\n\t\tlet options = this.getAutoAnimateOptions( to, animationOptions );\n\n\t\t// If we're using a custom element matcher the element options\n\t\t// may contain additional transition overrides\n\t\tif( typeof elementOptions.delay !== 'undefined' ) options.delay = elementOptions.delay;\n\t\tif( typeof elementOptions.duration !== 'undefined' ) options.duration = elementOptions.duration;\n\t\tif( typeof elementOptions.easing !== 'undefined' ) options.easing = elementOptions.easing;\n\n\t\tlet fromProps = this.getAutoAnimatableProperties( 'from', from, elementOptions ),\n\t\t\ttoProps = this.getAutoAnimatableProperties( 'to', to, elementOptions );\n\n\t\t// Maintain fragment visibility for matching elements when\n\t\t// we're navigating forwards, this way the viewer won't need\n\t\t// to step through the same fragments twice\n\t\tif( to.classList.contains( 'fragment' ) ) {\n\n\t\t\t// Don't auto-animate the opacity of fragments to avoid\n\t\t\t// conflicts with fragment animations\n\t\t\tdelete toProps.styles['opacity'];\n\n\t\t\tif( from.classList.contains( 'fragment' ) ) {\n\n\t\t\t\tlet fromFragmentStyle = ( from.className.match( FRAGMENT_STYLE_REGEX ) || [''] )[0];\n\t\t\t\tlet toFragmentStyle = ( to.className.match( FRAGMENT_STYLE_REGEX ) || [''] )[0];\n\n\t\t\t\t// Only skip the fragment if the fragment animation style\n\t\t\t\t// remains unchanged\n\t\t\t\tif( fromFragmentStyle === toFragmentStyle && animationOptions.slideDirection === 'forward' ) {\n\t\t\t\t\tto.classList.add( 'visible', 'disabled' );\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\t// If translation and/or scaling are enabled, css transform\n\t\t// the 'to' element so that it matches the position and size\n\t\t// of the 'from' element\n\t\tif( elementOptions.translate !== false || elementOptions.scale !== false ) {\n\n\t\t\tlet presentationScale = this.Reveal.getScale();\n\n\t\t\tlet delta = {\n\t\t\t\tx: ( fromProps.x - toProps.x ) / presentationScale,\n\t\t\t\ty: ( fromProps.y - toProps.y ) / presentationScale,\n\t\t\t\tscaleX: fromProps.width / toProps.width,\n\t\t\t\tscaleY: fromProps.height / toProps.height\n\t\t\t};\n\n\t\t\t// Limit decimal points to avoid 0.0001px blur and stutter\n\t\t\tdelta.x = Math.round( delta.x * 1000 ) / 1000;\n\t\t\tdelta.y = Math.round( delta.y * 1000 ) / 1000;\n\t\t\tdelta.scaleX = Math.round( delta.scaleX * 1000 ) / 1000;\n\t\t\tdelta.scaleX = Math.round( delta.scaleX * 1000 ) / 1000;\n\n\t\t\tlet translate = elementOptions.translate !== false && ( delta.x !== 0 || delta.y !== 0 ),\n\t\t\t\tscale = elementOptions.scale !== false && ( delta.scaleX !== 0 || delta.scaleY !== 0 );\n\n\t\t\t// No need to transform if nothing's changed\n\t\t\tif( translate || scale ) {\n\n\t\t\t\tlet transform = [];\n\n\t\t\t\tif( translate ) transform.push( `translate(${delta.x}px, ${delta.y}px)` );\n\t\t\t\tif( scale ) transform.push( `scale(${delta.scaleX}, ${delta.scaleY})` );\n\n\t\t\t\tfromProps.styles['transform'] = transform.join( ' ' );\n\t\t\t\tfromProps.styles['transform-origin'] = 'top left';\n\n\t\t\t\ttoProps.styles['transform'] = 'none';\n\n\t\t\t}\n\n\t\t}\n\n\t\t// Delete all unchanged 'to' styles\n\t\tfor( let propertyName in toProps.styles ) {\n\t\t\tconst toValue = toProps.styles[propertyName];\n\t\t\tconst fromValue = fromProps.styles[propertyName];\n\n\t\t\tif( toValue === fromValue ) {\n\t\t\t\tdelete toProps.styles[propertyName];\n\t\t\t}\n\t\t\telse {\n\t\t\t\t// If these property values were set via a custom matcher providing\n\t\t\t\t// an explicit 'from' and/or 'to' value, we always inject those values.\n\t\t\t\tif( toValue.explicitValue === true ) {\n\t\t\t\t\ttoProps.styles[propertyName] = toValue.value;\n\t\t\t\t}\n\n\t\t\t\tif( fromValue.explicitValue === true ) {\n\t\t\t\t\tfromProps.styles[propertyName] = fromValue.value;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tlet css = '';\n\n\t\tlet toStyleProperties = Object.keys( toProps.styles );\n\n\t\t// Only create animate this element IF at least one style\n\t\t// property has changed\n\t\tif( toStyleProperties.length > 0 ) {\n\n\t\t\t// Instantly move to the 'from' state\n\t\t\tfromProps.styles['transition'] = 'none';\n\n\t\t\t// Animate towards the 'to' state\n\t\t\ttoProps.styles['transition'] = `all ${options.duration}s ${options.easing} ${options.delay}s`;\n\t\t\ttoProps.styles['transition-property'] = toStyleProperties.join( ', ' );\n\t\t\ttoProps.styles['will-change'] = toStyleProperties.join( ', ' );\n\n\t\t\t// Build up our custom CSS. We need to override inline styles\n\t\t\t// so we need to make our styles vErY IMPORTANT!1!!\n\t\t\tlet fromCSS = Object.keys( fromProps.styles ).map( propertyName => {\n\t\t\t\treturn propertyName + ': ' + fromProps.styles[propertyName] + ' !important;';\n\t\t\t} ).join( '' );\n\n\t\t\tlet toCSS = Object.keys( toProps.styles ).map( propertyName => {\n\t\t\t\treturn propertyName + ': ' + toProps.styles[propertyName] + ' !important;';\n\t\t\t} ).join( '' );\n\n\t\t\tcss = \t'[data-auto-animate-target=\"'+ id +'\"] {'+ fromCSS +'}' +\n\t\t\t\t\t'[data-auto-animate=\"running\"] [data-auto-animate-target=\"'+ id +'\"] {'+ toCSS +'}';\n\n\t\t}\n\n\t\treturn css;\n\n\t}\n\n\t/**\n\t * Returns the auto-animate options for the given element.\n\t *\n\t * @param {HTMLElement} element Element to pick up options\n\t * from, either a slide or an animation target\n\t * @param {Object} [inheritedOptions] Optional set of existing\n\t * options\n\t */\n\tgetAutoAnimateOptions( element, inheritedOptions ) {\n\n\t\tlet options = {\n\t\t\teasing: this.Reveal.getConfig().autoAnimateEasing,\n\t\t\tduration: this.Reveal.getConfig().autoAnimateDuration,\n\t\t\tdelay: 0\n\t\t};\n\n\t\toptions = extend( options, inheritedOptions );\n\n\t\t// Inherit options from parent elements\n\t\tif( element.parentNode ) {\n\t\t\tlet autoAnimatedParent = closest( element.parentNode, '[data-auto-animate-target]' );\n\t\t\tif( autoAnimatedParent ) {\n\t\t\t\toptions = this.getAutoAnimateOptions( autoAnimatedParent, options );\n\t\t\t}\n\t\t}\n\n\t\tif( element.dataset.autoAnimateEasing ) {\n\t\t\toptions.easing = element.dataset.autoAnimateEasing;\n\t\t}\n\n\t\tif( element.dataset.autoAnimateDuration ) {\n\t\t\toptions.duration = parseFloat( element.dataset.autoAnimateDuration );\n\t\t}\n\n\t\tif( element.dataset.autoAnimateDelay ) {\n\t\t\toptions.delay = parseFloat( element.dataset.autoAnimateDelay );\n\t\t}\n\n\t\treturn options;\n\n\t}\n\n\t/**\n\t * Returns an object containing all of the properties\n\t * that can be auto-animated for the given element and\n\t * their current computed values.\n\t *\n\t * @param {String} direction 'from' or 'to'\n\t */\n\tgetAutoAnimatableProperties( direction, element, elementOptions ) {\n\n\t\tlet config = this.Reveal.getConfig();\n\n\t\tlet properties = { styles: [] };\n\n\t\t// Position and size\n\t\tif( elementOptions.translate !== false || elementOptions.scale !== false ) {\n\t\t\tlet bounds;\n\n\t\t\t// Custom auto-animate may optionally return a custom tailored\n\t\t\t// measurement function\n\t\t\tif( typeof elementOptions.measure === 'function' ) {\n\t\t\t\tbounds = elementOptions.measure( element );\n\t\t\t}\n\t\t\telse {\n\t\t\t\tif( config.center ) {\n\t\t\t\t\t// More precise, but breaks when used in combination\n\t\t\t\t\t// with zoom for scaling the deck ¯\\_(ツ)_/¯\n\t\t\t\t\tbounds = element.getBoundingClientRect();\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tlet scale = this.Reveal.getScale();\n\t\t\t\t\tbounds = {\n\t\t\t\t\t\tx: element.offsetLeft * scale,\n\t\t\t\t\t\ty: element.offsetTop * scale,\n\t\t\t\t\t\twidth: element.offsetWidth * scale,\n\t\t\t\t\t\theight: element.offsetHeight * scale\n\t\t\t\t\t};\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tproperties.x = bounds.x;\n\t\t\tproperties.y = bounds.y;\n\t\t\tproperties.width = bounds.width;\n\t\t\tproperties.height = bounds.height;\n\t\t}\n\n\t\tconst computedStyles = getComputedStyle( element );\n\n\t\t// CSS styles\n\t\t( elementOptions.styles || config.autoAnimateStyles ).forEach( style => {\n\t\t\tlet value;\n\n\t\t\t// `style` is either the property name directly, or an object\n\t\t\t// definition of a style property\n\t\t\tif( typeof style === 'string' ) style = { property: style };\n\n\t\t\tif( typeof style.from !== 'undefined' && direction === 'from' ) {\n\t\t\t\tvalue = { value: style.from, explicitValue: true };\n\t\t\t}\n\t\t\telse if( typeof style.to !== 'undefined' && direction === 'to' ) {\n\t\t\t\tvalue = { value: style.to, explicitValue: true };\n\t\t\t}\n\t\t\telse {\n\t\t\t\t// Use a unitless value for line-height so that it inherits properly\n\t\t\t\tif( style.property === 'line-height' ) {\n\t\t\t\t\tvalue = parseFloat( computedStyles['line-height'] ) / parseFloat( computedStyles['font-size'] );\n\t\t\t\t}\n\n\t\t\t\tif( isNaN(value) ) {\n\t\t\t\t\tvalue = computedStyles[style.property];\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif( value !== '' ) {\n\t\t\t\tproperties.styles[style.property] = value;\n\t\t\t}\n\t\t} );\n\n\t\treturn properties;\n\n\t}\n\n\t/**\n\t * Get a list of all element pairs that we can animate\n\t * between the given slides.\n\t *\n\t * @param {HTMLElement} fromSlide\n\t * @param {HTMLElement} toSlide\n\t *\n\t * @return {Array} Each value is an array where [0] is\n\t * the element we're animating from and [1] is the\n\t * element we're animating to\n\t */\n\tgetAutoAnimatableElements( fromSlide, toSlide ) {\n\n\t\tlet matcher = typeof this.Reveal.getConfig().autoAnimateMatcher === 'function' ? this.Reveal.getConfig().autoAnimateMatcher : this.getAutoAnimatePairs;\n\n\t\tlet pairs = matcher.call( this, fromSlide, toSlide );\n\n\t\tlet reserved = [];\n\n\t\t// Remove duplicate pairs\n\t\treturn pairs.filter( ( pair, index ) => {\n\t\t\tif( reserved.indexOf( pair.to ) === -1 ) {\n\t\t\t\treserved.push( pair.to );\n\t\t\t\treturn true;\n\t\t\t}\n\t\t} );\n\n\t}\n\n\t/**\n\t * Identifies matching elements between slides.\n\t *\n\t * You can specify a custom matcher function by using\n\t * the `autoAnimateMatcher` config option.\n\t */\n\tgetAutoAnimatePairs( fromSlide, toSlide ) {\n\n\t\tlet pairs = [];\n\n\t\tconst codeNodes = 'pre';\n\t\tconst textNodes = 'h1, h2, h3, h4, h5, h6, p, li';\n\t\tconst mediaNodes = 'img, video, iframe';\n\n\t\t// Explicit matches via data-id\n\t\tthis.findAutoAnimateMatches( pairs, fromSlide, toSlide, '[data-id]', node => {\n\t\t\treturn node.nodeName + ':::' + node.getAttribute( 'data-id' );\n\t\t} );\n\n\t\t// Text\n\t\tthis.findAutoAnimateMatches( pairs, fromSlide, toSlide, textNodes, node => {\n\t\t\treturn node.nodeName + ':::' + node.innerText;\n\t\t} );\n\n\t\t// Media\n\t\tthis.findAutoAnimateMatches( pairs, fromSlide, toSlide, mediaNodes, node => {\n\t\t\treturn node.nodeName + ':::' + ( node.getAttribute( 'src' ) || node.getAttribute( 'data-src' ) );\n\t\t} );\n\n\t\t// Code\n\t\tthis.findAutoAnimateMatches( pairs, fromSlide, toSlide, codeNodes, node => {\n\t\t\treturn node.nodeName + ':::' + node.innerText;\n\t\t} );\n\n\t\tpairs.forEach( pair => {\n\t\t\t// Disable scale transformations on text nodes, we transition\n\t\t\t// each individual text property instead\n\t\t\tif( matches( pair.from, textNodes ) ) {\n\t\t\t\tpair.options = { scale: false };\n\t\t\t}\n\t\t\t// Animate individual lines of code\n\t\t\telse if( matches( pair.from, codeNodes ) ) {\n\n\t\t\t\t// Transition the code block's width and height instead of scaling\n\t\t\t\t// to prevent its content from being squished\n\t\t\t\tpair.options = { scale: false, styles: [ 'width', 'height' ] };\n\n\t\t\t\t// Lines of code\n\t\t\t\tthis.findAutoAnimateMatches( pairs, pair.from, pair.to, '.hljs .hljs-ln-code', node => {\n\t\t\t\t\treturn node.textContent;\n\t\t\t\t}, {\n\t\t\t\t\tscale: false,\n\t\t\t\t\tstyles: [],\n\t\t\t\t\tmeasure: this.getLocalBoundingBox.bind( this )\n\t\t\t\t} );\n\n\t\t\t\t// Line numbers\n\t\t\t\tthis.findAutoAnimateMatches( pairs, pair.from, pair.to, '.hljs .hljs-ln-line[data-line-number]', node => {\n\t\t\t\t\treturn node.getAttribute( 'data-line-number' );\n\t\t\t\t}, {\n\t\t\t\t\tscale: false,\n\t\t\t\t\tstyles: [ 'width' ],\n\t\t\t\t\tmeasure: this.getLocalBoundingBox.bind( this )\n\t\t\t\t} );\n\n\t\t\t}\n\n\t\t}, this );\n\n\t\treturn pairs;\n\n\t}\n\n\t/**\n\t * Helper method which returns a bounding box based on\n\t * the given elements offset coordinates.\n\t *\n\t * @param {HTMLElement} element\n\t * @return {Object} x, y, width, height\n\t */\n\tgetLocalBoundingBox( element ) {\n\n\t\tconst presentationScale = this.Reveal.getScale();\n\n\t\treturn {\n\t\t\tx: Math.round( ( element.offsetLeft * presentationScale ) * 100 ) / 100,\n\t\t\ty: Math.round( ( element.offsetTop * presentationScale ) * 100 ) / 100,\n\t\t\twidth: Math.round( ( element.offsetWidth * presentationScale ) * 100 ) / 100,\n\t\t\theight: Math.round( ( element.offsetHeight * presentationScale ) * 100 ) / 100\n\t\t};\n\n\t}\n\n\t/**\n\t * Finds matching elements between two slides.\n\t *\n\t * @param {Array} pairs            \tList of pairs to push matches to\n\t * @param {HTMLElement} fromScope   Scope within the from element exists\n\t * @param {HTMLElement} toScope     Scope within the to element exists\n\t * @param {String} selector         CSS selector of the element to match\n\t * @param {Function} serializer     A function that accepts an element and returns\n\t *                                  a stringified ID based on its contents\n\t * @param {Object} animationOptions Optional config options for this pair\n\t */\n\tfindAutoAnimateMatches( pairs, fromScope, toScope, selector, serializer, animationOptions ) {\n\n\t\tlet fromMatches = {};\n\t\tlet toMatches = {};\n\n\t\t[].slice.call( fromScope.querySelectorAll( selector ) ).forEach( ( element, i ) => {\n\t\t\tconst key = serializer( element );\n\t\t\tif( typeof key === 'string' && key.length ) {\n\t\t\t\tfromMatches[key] = fromMatches[key] || [];\n\t\t\t\tfromMatches[key].push( element );\n\t\t\t}\n\t\t} );\n\n\t\t[].slice.call( toScope.querySelectorAll( selector ) ).forEach( ( element, i ) => {\n\t\t\tconst key = serializer( element );\n\t\t\ttoMatches[key] = toMatches[key] || [];\n\t\t\ttoMatches[key].push( element );\n\n\t\t\tlet fromElement;\n\n\t\t\t// Retrieve the 'from' element\n\t\t\tif( fromMatches[key] ) {\n\t\t\t\tconst primaryIndex = toMatches[key].length - 1;\n\t\t\t\tconst secondaryIndex = fromMatches[key].length - 1;\n\n\t\t\t\t// If there are multiple identical from elements, retrieve\n\t\t\t\t// the one at the same index as our to-element.\n\t\t\t\tif( fromMatches[key][ primaryIndex ] ) {\n\t\t\t\t\tfromElement = fromMatches[key][ primaryIndex ];\n\t\t\t\t\tfromMatches[key][ primaryIndex ] = null;\n\t\t\t\t}\n\t\t\t\t// If there are no matching from-elements at the same index,\n\t\t\t\t// use the last one.\n\t\t\t\telse if( fromMatches[key][ secondaryIndex ] ) {\n\t\t\t\t\tfromElement = fromMatches[key][ secondaryIndex ];\n\t\t\t\t\tfromMatches[key][ secondaryIndex ] = null;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// If we've got a matching pair, push it to the list of pairs\n\t\t\tif( fromElement ) {\n\t\t\t\tpairs.push({\n\t\t\t\t\tfrom: fromElement,\n\t\t\t\t\tto: element,\n\t\t\t\t\toptions: animationOptions\n\t\t\t\t});\n\t\t\t}\n\t\t} );\n\n\t}\n\n\t/**\n\t * Returns a all elements within the given scope that should\n\t * be considered unmatched in an auto-animate transition. If\n\t * fading of unmatched elements is turned on, these elements\n\t * will fade when going between auto-animate slides.\n\t *\n\t * Note that parents of auto-animate targets are NOT considered\n\t * unmatched since fading them would break the auto-animation.\n\t *\n\t * @param {HTMLElement} rootElement\n\t * @return {Array}\n\t */\n\tgetUnmatchedAutoAnimateElements( rootElement ) {\n\n\t\treturn [].slice.call( rootElement.children ).reduce( ( result, element ) => {\n\n\t\t\tconst containsAnimatedElements = element.querySelector( '[data-auto-animate-target]' );\n\n\t\t\t// The element is unmatched if\n\t\t\t// - It is not an auto-animate target\n\t\t\t// - It does not contain any auto-animate targets\n\t\t\tif( !element.hasAttribute( 'data-auto-animate-target' ) && !containsAnimatedElements ) {\n\t\t\t\tresult.push( element );\n\t\t\t}\n\n\t\t\tif( element.querySelector( '[data-auto-animate-target]' ) ) {\n\t\t\t\tresult = result.concat( this.getUnmatchedAutoAnimateElements( element ) );\n\t\t\t}\n\n\t\t\treturn result;\n\n\t\t}, [] );\n\n\t}\n\n}\n", "import { extend, queryAll } from '../utils/util.js'\n\n/**\n * Handles sorting and navigation of slide fragments.\n * Fragments are elements within a slide that are\n * revealed/animated incrementally.\n */\nexport default class Fragments {\n\n\tconstructor( Reveal ) {\n\n\t\tthis.Reveal = Reveal;\n\n\t}\n\n\t/**\n\t * Called when the reveal.js config is updated.\n\t */\n\tconfigure( config, oldConfig ) {\n\n\t\tif( config.fragments === false ) {\n\t\t\tthis.disable();\n\t\t}\n\t\telse if( oldConfig.fragments === false ) {\n\t\t\tthis.enable();\n\t\t}\n\n\t}\n\n\t/**\n\t * If fragments are disabled in the deck, they should all be\n\t * visible rather than stepped through.\n\t */\n\tdisable() {\n\n\t\tqueryAll( this.Reveal.getSlidesElement(), '.fragment' ).forEach( element => {\n\t\t\telement.classList.add( 'visible' );\n\t\t\telement.classList.remove( 'current-fragment' );\n\t\t} );\n\n\t}\n\n\t/**\n\t * Reverse of #disable(). Only called if fragments have\n\t * previously been disabled.\n\t */\n\tenable() {\n\n\t\tqueryAll( this.Reveal.getSlidesElement(), '.fragment' ).forEach( element => {\n\t\t\telement.classList.remove( 'visible' );\n\t\t\telement.classList.remove( 'current-fragment' );\n\t\t} );\n\n\t}\n\n\t/**\n\t * Returns an object describing the available fragment\n\t * directions.\n\t *\n\t * @return {{prev: boolean, next: boolean}}\n\t */\n\tavailableRoutes() {\n\n\t\tlet currentSlide = this.Reveal.getCurrentSlide();\n\t\tif( currentSlide && this.Reveal.getConfig().fragments ) {\n\t\t\tlet fragments = currentSlide.querySelectorAll( '.fragment:not(.disabled)' );\n\t\t\tlet hiddenFragments = currentSlide.querySelectorAll( '.fragment:not(.disabled):not(.visible)' );\n\n\t\t\treturn {\n\t\t\t\tprev: fragments.length - hiddenFragments.length > 0,\n\t\t\t\tnext: !!hiddenFragments.length\n\t\t\t};\n\t\t}\n\t\telse {\n\t\t\treturn { prev: false, next: false };\n\t\t}\n\n\t}\n\n\t/**\n\t * Return a sorted fragments list, ordered by an increasing\n\t * \"data-fragment-index\" attribute.\n\t *\n\t * Fragments will be revealed in the order that they are returned by\n\t * this function, so you can use the index attributes to control the\n\t * order of fragment appearance.\n\t *\n\t * To maintain a sensible default fragment order, fragments are presumed\n\t * to be passed in document order. This function adds a \"fragment-index\"\n\t * attribute to each node if such an attribute is not already present,\n\t * and sets that attribute to an integer value which is the position of\n\t * the fragment within the fragments list.\n\t *\n\t * @param {object[]|*} fragments\n\t * @param {boolean} grouped If true the returned array will contain\n\t * nested arrays for all fragments with the same index\n\t * @return {object[]} sorted Sorted array of fragments\n\t */\n\tsort( fragments, grouped = false ) {\n\n\t\tfragments = Array.from( fragments );\n\n\t\tlet ordered = [],\n\t\t\tunordered = [],\n\t\t\tsorted = [];\n\n\t\t// Group ordered and unordered elements\n\t\tfragments.forEach( fragment => {\n\t\t\tif( fragment.hasAttribute( 'data-fragment-index' ) ) {\n\t\t\t\tlet index = parseInt( fragment.getAttribute( 'data-fragment-index' ), 10 );\n\n\t\t\t\tif( !ordered[index] ) {\n\t\t\t\t\tordered[index] = [];\n\t\t\t\t}\n\n\t\t\t\tordered[index].push( fragment );\n\t\t\t}\n\t\t\telse {\n\t\t\t\tunordered.push( [ fragment ] );\n\t\t\t}\n\t\t} );\n\n\t\t// Append fragments without explicit indices in their\n\t\t// DOM order\n\t\tordered = ordered.concat( unordered );\n\n\t\t// Manually count the index up per group to ensure there\n\t\t// are no gaps\n\t\tlet index = 0;\n\n\t\t// Push all fragments in their sorted order to an array,\n\t\t// this flattens the groups\n\t\tordered.forEach( group => {\n\t\t\tgroup.forEach( fragment => {\n\t\t\t\tsorted.push( fragment );\n\t\t\t\tfragment.setAttribute( 'data-fragment-index', index );\n\t\t\t} );\n\n\t\t\tindex ++;\n\t\t} );\n\n\t\treturn grouped === true ? ordered : sorted;\n\n\t}\n\n\t/**\n\t * Sorts and formats all of fragments in the\n\t * presentation.\n\t */\n\tsortAll() {\n\n\t\tthis.Reveal.getHorizontalSlides().forEach( horizontalSlide => {\n\n\t\t\tlet verticalSlides = queryAll( horizontalSlide, 'section' );\n\t\t\tverticalSlides.forEach( ( verticalSlide, y ) => {\n\n\t\t\t\tthis.sort( verticalSlide.querySelectorAll( '.fragment' ) );\n\n\t\t\t}, this );\n\n\t\t\tif( verticalSlides.length === 0 ) this.sort( horizontalSlide.querySelectorAll( '.fragment' ) );\n\n\t\t} );\n\n\t}\n\n\t/**\n\t * Refreshes the fragments on the current slide so that they\n\t * have the appropriate classes (.visible + .current-fragment).\n\t *\n\t * @param {number} [index] The index of the current fragment\n\t * @param {array} [fragments] Array containing all fragments\n\t * in the current slide\n\t *\n\t * @return {{shown: array, hidden: array}}\n\t */\n\tupdate( index, fragments ) {\n\n\t\tlet changedFragments = {\n\t\t\tshown: [],\n\t\t\thidden: []\n\t\t};\n\n\t\tlet currentSlide = this.Reveal.getCurrentSlide();\n\t\tif( currentSlide && this.Reveal.getConfig().fragments ) {\n\n\t\t\tfragments = fragments || this.sort( currentSlide.querySelectorAll( '.fragment' ) );\n\n\t\t\tif( fragments.length ) {\n\n\t\t\t\tlet maxIndex = 0;\n\n\t\t\t\tif( typeof index !== 'number' ) {\n\t\t\t\t\tlet currentFragment = this.sort( currentSlide.querySelectorAll( '.fragment.visible' ) ).pop();\n\t\t\t\t\tif( currentFragment ) {\n\t\t\t\t\t\tindex = parseInt( currentFragment.getAttribute( 'data-fragment-index' ) || 0, 10 );\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tArray.from( fragments ).forEach( ( el, i ) => {\n\n\t\t\t\t\tif( el.hasAttribute( 'data-fragment-index' ) ) {\n\t\t\t\t\t\ti = parseInt( el.getAttribute( 'data-fragment-index' ), 10 );\n\t\t\t\t\t}\n\n\t\t\t\t\tmaxIndex = Math.max( maxIndex, i );\n\n\t\t\t\t\t// Visible fragments\n\t\t\t\t\tif( i <= index ) {\n\t\t\t\t\t\tlet wasVisible = el.classList.contains( 'visible' )\n\t\t\t\t\t\tel.classList.add( 'visible' );\n\t\t\t\t\t\tel.classList.remove( 'current-fragment' );\n\n\t\t\t\t\t\tif( i === index ) {\n\t\t\t\t\t\t\t// Announce the fragments one by one to the Screen Reader\n\t\t\t\t\t\t\tthis.Reveal.announceStatus( this.Reveal.getStatusText( el ) );\n\n\t\t\t\t\t\t\tel.classList.add( 'current-fragment' );\n\t\t\t\t\t\t\tthis.Reveal.slideContent.startEmbeddedContent( el );\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif( !wasVisible ) {\n\t\t\t\t\t\t\tchangedFragments.shown.push( el )\n\t\t\t\t\t\t\tthis.Reveal.dispatchEvent({\n\t\t\t\t\t\t\t\ttarget: el,\n\t\t\t\t\t\t\t\ttype: 'visible',\n\t\t\t\t\t\t\t\tbubbles: false\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\t// Hidden fragments\n\t\t\t\t\telse {\n\t\t\t\t\t\tlet wasVisible = el.classList.contains( 'visible' )\n\t\t\t\t\t\tel.classList.remove( 'visible' );\n\t\t\t\t\t\tel.classList.remove( 'current-fragment' );\n\n\t\t\t\t\t\tif( wasVisible ) {\n\t\t\t\t\t\t\tthis.Reveal.slideContent.stopEmbeddedContent( el );\n\t\t\t\t\t\t\tchangedFragments.hidden.push( el );\n\t\t\t\t\t\t\tthis.Reveal.dispatchEvent({\n\t\t\t\t\t\t\t\ttarget: el,\n\t\t\t\t\t\t\t\ttype: 'hidden',\n\t\t\t\t\t\t\t\tbubbles: false\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t} );\n\n\t\t\t\t// Write the current fragment index to the slide <section>.\n\t\t\t\t// This can be used by end users to apply styles based on\n\t\t\t\t// the current fragment index.\n\t\t\t\tindex = typeof index === 'number' ? index : -1;\n\t\t\t\tindex = Math.max( Math.min( index, maxIndex ), -1 );\n\t\t\t\tcurrentSlide.setAttribute( 'data-fragment', index );\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn changedFragments;\n\n\t}\n\n\t/**\n\t * Formats the fragments on the given slide so that they have\n\t * valid indices. Call this if fragments are changed in the DOM\n\t * after reveal.js has already initialized.\n\t *\n\t * @param {HTMLElement} slide\n\t * @return {Array} a list of the HTML fragments that were synced\n\t */\n\tsync( slide = this.Reveal.getCurrentSlide() ) {\n\n\t\treturn this.sort( slide.querySelectorAll( '.fragment' ) );\n\n\t}\n\n\t/**\n\t * Navigate to the specified slide fragment.\n\t *\n\t * @param {?number} index The index of the fragment that\n\t * should be shown, -1 means all are invisible\n\t * @param {number} offset Integer offset to apply to the\n\t * fragment index\n\t *\n\t * @return {boolean} true if a change was made in any\n\t * fragments visibility as part of this call\n\t */\n\tgoto( index, offset = 0 ) {\n\n\t\tlet currentSlide = this.Reveal.getCurrentSlide();\n\t\tif( currentSlide && this.Reveal.getConfig().fragments ) {\n\n\t\t\tlet fragments = this.sort( currentSlide.querySelectorAll( '.fragment:not(.disabled)' ) );\n\t\t\tif( fragments.length ) {\n\n\t\t\t\t// If no index is specified, find the current\n\t\t\t\tif( typeof index !== 'number' ) {\n\t\t\t\t\tlet lastVisibleFragment = this.sort( currentSlide.querySelectorAll( '.fragment:not(.disabled).visible' ) ).pop();\n\n\t\t\t\t\tif( lastVisibleFragment ) {\n\t\t\t\t\t\tindex = parseInt( lastVisibleFragment.getAttribute( 'data-fragment-index' ) || 0, 10 );\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tindex = -1;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// Apply the offset if there is one\n\t\t\t\tindex += offset;\n\n\t\t\t\tlet changedFragments = this.update( index, fragments );\n\n\t\t\t\tif( changedFragments.hidden.length ) {\n\t\t\t\t\tthis.Reveal.dispatchEvent({\n\t\t\t\t\t\ttype: 'fragmenthidden',\n\t\t\t\t\t\tdata: {\n\t\t\t\t\t\t\tfragment: changedFragments.hidden[0],\n\t\t\t\t\t\t\tfragments: changedFragments.hidden\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t}\n\n\t\t\t\tif( changedFragments.shown.length ) {\n\t\t\t\t\tthis.Reveal.dispatchEvent({\n\t\t\t\t\t\ttype: 'fragmentshown',\n\t\t\t\t\t\tdata: {\n\t\t\t\t\t\t\tfragment: changedFragments.shown[0],\n\t\t\t\t\t\t\tfragments: changedFragments.shown\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t}\n\n\t\t\t\tthis.Reveal.controls.update();\n\t\t\t\tthis.Reveal.progress.update();\n\n\t\t\t\tif( this.Reveal.getConfig().fragmentInURL ) {\n\t\t\t\t\tthis.Reveal.location.writeURL();\n\t\t\t\t}\n\n\t\t\t\treturn !!( changedFragments.shown.length || changedFragments.hidden.length );\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn false;\n\n\t}\n\n\t/**\n\t * Navigate to the next slide fragment.\n\t *\n\t * @return {boolean} true if there was a next fragment,\n\t * false otherwise\n\t */\n\tnext() {\n\n\t\treturn this.goto( null, 1 );\n\n\t}\n\n\t/**\n\t * Navigate to the previous slide fragment.\n\t *\n\t * @return {boolean} true if there was a previous fragment,\n\t * false otherwise\n\t */\n\tprev() {\n\n\t\treturn this.goto( null, -1 );\n\n\t}\n\n}", "import { SLIDES_SELECTOR } from '../utils/constants.js'\nimport { extend, queryAll, transformElement } from '../utils/util.js'\n\n/**\n * Handles all logic related to the overview mode\n * (birds-eye view of all slides).\n */\nexport default class Overview {\n\n\tconstructor( Reveal ) {\n\n\t\tthis.Reveal = Reveal;\n\n\t\tthis.active = false;\n\n\t\tthis.onSlideClicked = this.onSlideClicked.bind( this );\n\n\t}\n\n\t/**\n\t * Displays the overview of slides (quick nav) by scaling\n\t * down and arranging all slide elements.\n\t */\n\tactivate() {\n\n\t\t// Only proceed if enabled in config\n\t\tif( this.Reveal.getConfig().overview && !this.isActive() ) {\n\n\t\t\tthis.active = true;\n\n\t\t\tthis.Reveal.getRevealElement().classList.add( 'overview' );\n\n\t\t\t// Don't auto-slide while in overview mode\n\t\t\tthis.Reveal.cancelAutoSlide();\n\n\t\t\t// Move the backgrounds element into the slide container to\n\t\t\t// that the same scaling is applied\n\t\t\tthis.Reveal.getSlidesElement().appendChild( this.Reveal.getBackgroundsElement() );\n\n\t\t\t// Clicking on an overview slide navigates to it\n\t\t\tqueryAll( this.Reveal.getRevealElement(), SLIDES_SELECTOR ).forEach( slide => {\n\t\t\t\tif( !slide.classList.contains( 'stack' ) ) {\n\t\t\t\t\tslide.addEventListener( 'click', this.onSlideClicked, true );\n\t\t\t\t}\n\t\t\t} );\n\n\t\t\t// Calculate slide sizes\n\t\t\tconst margin = 70;\n\t\t\tconst slideSize = this.Reveal.getComputedSlideSize();\n\t\t\tthis.overviewSlideWidth = slideSize.width + margin;\n\t\t\tthis.overviewSlideHeight = slideSize.height + margin;\n\n\t\t\t// Reverse in RTL mode\n\t\t\tif( this.Reveal.getConfig().rtl ) {\n\t\t\t\tthis.overviewSlideWidth = -this.overviewSlideWidth;\n\t\t\t}\n\n\t\t\tthis.Reveal.updateSlidesVisibility();\n\n\t\t\tthis.layout();\n\t\t\tthis.update();\n\n\t\t\tthis.Reveal.layout();\n\n\t\t\tconst indices = this.Reveal.getIndices();\n\n\t\t\t// Notify observers of the overview showing\n\t\t\tthis.Reveal.dispatchEvent({\n\t\t\t\ttype: 'overviewshown',\n\t\t\t\tdata: {\n\t\t\t\t\t'indexh': indices.h,\n\t\t\t\t\t'indexv': indices.v,\n\t\t\t\t\t'currentSlide': this.Reveal.getCurrentSlide()\n\t\t\t\t}\n\t\t\t});\n\n\t\t}\n\n\t}\n\n\t/**\n\t * Uses CSS transforms to position all slides in a grid for\n\t * display inside of the overview mode.\n\t */\n\tlayout() {\n\n\t\t// Layout slides\n\t\tthis.Reveal.getHorizontalSlides().forEach( ( hslide, h ) => {\n\t\t\thslide.setAttribute( 'data-index-h', h );\n\t\t\ttransformElement( hslide, 'translate3d(' + ( h * this.overviewSlideWidth ) + 'px, 0, 0)' );\n\n\t\t\tif( hslide.classList.contains( 'stack' ) ) {\n\n\t\t\t\tqueryAll( hslide, 'section' ).forEach( ( vslide, v ) => {\n\t\t\t\t\tvslide.setAttribute( 'data-index-h', h );\n\t\t\t\t\tvslide.setAttribute( 'data-index-v', v );\n\n\t\t\t\t\ttransformElement( vslide, 'translate3d(0, ' + ( v * this.overviewSlideHeight ) + 'px, 0)' );\n\t\t\t\t} );\n\n\t\t\t}\n\t\t} );\n\n\t\t// Layout slide backgrounds\n\t\tArray.from( this.Reveal.getBackgroundsElement().childNodes ).forEach( ( hbackground, h ) => {\n\t\t\ttransformElement( hbackground, 'translate3d(' + ( h * this.overviewSlideWidth ) + 'px, 0, 0)' );\n\n\t\t\tqueryAll( hbackground, '.slide-background' ).forEach( ( vbackground, v ) => {\n\t\t\t\ttransformElement( vbackground, 'translate3d(0, ' + ( v * this.overviewSlideHeight ) + 'px, 0)' );\n\t\t\t} );\n\t\t} );\n\n\t}\n\n\t/**\n\t * Moves the overview viewport to the current slides.\n\t * Called each time the current slide changes.\n\t */\n\tupdate() {\n\n\t\tconst vmin = Math.min( window.innerWidth, window.innerHeight );\n\t\tconst scale = Math.max( vmin / 5, 150 ) / vmin;\n\t\tconst indices = this.Reveal.getIndices();\n\n\t\tthis.Reveal.transformSlides( {\n\t\t\toverview: [\n\t\t\t\t'scale('+ scale +')',\n\t\t\t\t'translateX('+ ( -indices.h * this.overviewSlideWidth ) +'px)',\n\t\t\t\t'translateY('+ ( -indices.v * this.overviewSlideHeight ) +'px)'\n\t\t\t].join( ' ' )\n\t\t} );\n\n\t}\n\n\t/**\n\t * Exits the slide overview and enters the currently\n\t * active slide.\n\t */\n\tdeactivate() {\n\n\t\t// Only proceed if enabled in config\n\t\tif( this.Reveal.getConfig().overview ) {\n\n\t\t\tthis.active = false;\n\n\t\t\tthis.Reveal.getRevealElement().classList.remove( 'overview' );\n\n\t\t\t// Temporarily add a class so that transitions can do different things\n\t\t\t// depending on whether they are exiting/entering overview, or just\n\t\t\t// moving from slide to slide\n\t\t\tthis.Reveal.getRevealElement().classList.add( 'overview-deactivating' );\n\n\t\t\tsetTimeout( () => {\n\t\t\t\tthis.Reveal.getRevealElement().classList.remove( 'overview-deactivating' );\n\t\t\t}, 1 );\n\n\t\t\t// Move the background element back out\n\t\t\tthis.Reveal.getRevealElement().appendChild( this.Reveal.getBackgroundsElement() );\n\n\t\t\t// Clean up changes made to slides\n\t\t\tqueryAll( this.Reveal.getRevealElement(), SLIDES_SELECTOR ).forEach( slide => {\n\t\t\t\ttransformElement( slide, '' );\n\n\t\t\t\tslide.removeEventListener( 'click', this.onSlideClicked, true );\n\t\t\t} );\n\n\t\t\t// Clean up changes made to backgrounds\n\t\t\tqueryAll( this.Reveal.getBackgroundsElement(), '.slide-background' ).forEach( background => {\n\t\t\t\ttransformElement( background, '' );\n\t\t\t} );\n\n\t\t\tthis.Reveal.transformSlides( { overview: '' } );\n\n\t\t\tconst indices = this.Reveal.getIndices();\n\n\t\t\tthis.Reveal.slide( indices.h, indices.v );\n\t\t\tthis.Reveal.layout();\n\t\t\tthis.Reveal.cueAutoSlide();\n\n\t\t\t// Notify observers of the overview hiding\n\t\t\tthis.Reveal.dispatchEvent({\n\t\t\t\ttype: 'overviewhidden',\n\t\t\t\tdata: {\n\t\t\t\t\t'indexh': indices.h,\n\t\t\t\t\t'indexv': indices.v,\n\t\t\t\t\t'currentSlide': this.Reveal.getCurrentSlide()\n\t\t\t\t}\n\t\t\t});\n\n\t\t}\n\t}\n\n\t/**\n\t * Toggles the slide overview mode on and off.\n\t *\n\t * @param {Boolean} [override] Flag which overrides the\n\t * toggle logic and forcibly sets the desired state. True means\n\t * overview is open, false means it's closed.\n\t */\n\ttoggle( override ) {\n\n\t\tif( typeof override === 'boolean' ) {\n\t\t\toverride ? this.activate() : this.deactivate();\n\t\t}\n\t\telse {\n\t\t\tthis.isActive() ? this.deactivate() : this.activate();\n\t\t}\n\n\t}\n\n\t/**\n\t * Checks if the overview is currently active.\n\t *\n\t * @return {Boolean} true if the overview is active,\n\t * false otherwise\n\t */\n\tisActive() {\n\n\t\treturn this.active;\n\n\t}\n\n\t/**\n\t * Invoked when a slide is and we're in the overview.\n\t *\n\t * @param {object} event\n\t */\n\tonSlideClicked( event ) {\n\n\t\tif( this.isActive() ) {\n\t\t\tevent.preventDefault();\n\n\t\t\tlet element = event.target;\n\n\t\t\twhile( element && !element.nodeName.match( /section/gi ) ) {\n\t\t\t\telement = element.parentNode;\n\t\t\t}\n\n\t\t\tif( element && !element.classList.contains( 'disabled' ) ) {\n\n\t\t\t\tthis.deactivate();\n\n\t\t\t\tif( element.nodeName.match( /section/gi ) ) {\n\t\t\t\t\tlet h = parseInt( element.getAttribute( 'data-index-h' ), 10 ),\n\t\t\t\t\t\tv = parseInt( element.getAttribute( 'data-index-v' ), 10 );\n\n\t\t\t\t\tthis.Reveal.slide( h, v );\n\t\t\t\t}\n\n\t\t\t}\n\t\t}\n\n\t}\n\n}", "import { enterFullscreen } from '../utils/util.js'\n\n/**\n * Handles all reveal.js keyboard interactions.\n */\nexport default class Keyboard {\n\n\tconstructor( Reveal ) {\n\n\t\tthis.Reveal = Reveal;\n\n\t\t// A key:value map of keyboard keys and descriptions of\n\t\t// the actions they trigger\n\t\tthis.shortcuts = {};\n\n\t\t// Holds custom key code mappings\n\t\tthis.bindings = {};\n\n\t\tthis.onDocumentKeyDown = this.onDocumentKeyDown.bind( this );\n\t\tthis.onDocumentKeyPress = this.onDocumentKeyPress.bind( this );\n\n\t}\n\n\t/**\n\t * Called when the reveal.js config is updated.\n\t */\n\tconfigure( config, oldConfig ) {\n\n\t\tif( config.navigationMode === 'linear' ) {\n\t\t\tthis.shortcuts['&#8594;  ,  &#8595;  ,  SPACE  ,  N  ,  L  ,  J'] = 'Next slide';\n\t\t\tthis.shortcuts['&#8592;  ,  &#8593;  ,  P  ,  H  ,  K']           = 'Previous slide';\n\t\t}\n\t\telse {\n\t\t\tthis.shortcuts['N  ,  SPACE']   = 'Next slide';\n\t\t\tthis.shortcuts['P  ,  Shift SPACE']             = 'Previous slide';\n\t\t\tthis.shortcuts['&#8592;  ,  H'] = 'Navigate left';\n\t\t\tthis.shortcuts['&#8594;  ,  L'] = 'Navigate right';\n\t\t\tthis.shortcuts['&#8593;  ,  K'] = 'Navigate up';\n\t\t\tthis.shortcuts['&#8595;  ,  J'] = 'Navigate down';\n\t\t}\n\n\t\tthis.shortcuts['Alt + &#8592;/&#8593/&#8594;/&#8595;']        = 'Navigate without fragments';\n\t\tthis.shortcuts['Shift + &#8592;/&#8593/&#8594;/&#8595;']      = 'Jump to first/last slide';\n\t\tthis.shortcuts['B  ,  .']                       = 'Pause';\n\t\tthis.shortcuts['F']                             = 'Fullscreen';\n\t\tthis.shortcuts['G']                             = 'Jump to slide';\n\t\tthis.shortcuts['ESC, O']                        = 'Slide overview';\n\n\t}\n\n\t/**\n\t * Starts listening for keyboard events.\n\t */\n\tbind() {\n\n\t\tdocument.addEventListener( 'keydown', this.onDocumentKeyDown, false );\n\t\tdocument.addEventListener( 'keypress', this.onDocumentKeyPress, false );\n\n\t}\n\n\t/**\n\t * Stops listening for keyboard events.\n\t */\n\tunbind() {\n\n\t\tdocument.removeEventListener( 'keydown', this.onDocumentKeyDown, false );\n\t\tdocument.removeEventListener( 'keypress', this.onDocumentKeyPress, false );\n\n\t}\n\n\t/**\n\t * Add a custom key binding with optional description to\n\t * be added to the help screen.\n\t */\n\taddKeyBinding( binding, callback ) {\n\n\t\tif( typeof binding === 'object' && binding.keyCode ) {\n\t\t\tthis.bindings[binding.keyCode] = {\n\t\t\t\tcallback: callback,\n\t\t\t\tkey: binding.key,\n\t\t\t\tdescription: binding.description\n\t\t\t};\n\t\t}\n\t\telse {\n\t\t\tthis.bindings[binding] = {\n\t\t\t\tcallback: callback,\n\t\t\t\tkey: null,\n\t\t\t\tdescription: null\n\t\t\t};\n\t\t}\n\n\t}\n\n\t/**\n\t * Removes the specified custom key binding.\n\t */\n\tremoveKeyBinding( keyCode ) {\n\n\t\tdelete this.bindings[keyCode];\n\n\t}\n\n\t/**\n\t * Programmatically triggers a keyboard event\n\t *\n\t * @param {int} keyCode\n\t */\n\ttriggerKey( keyCode ) {\n\n\t\tthis.onDocumentKeyDown( { keyCode } );\n\n\t}\n\n\t/**\n\t * Registers a new shortcut to include in the help overlay\n\t *\n\t * @param {String} key\n\t * @param {String} value\n\t */\n\tregisterKeyboardShortcut( key, value ) {\n\n\t\tthis.shortcuts[key] = value;\n\n\t}\n\n\tgetShortcuts() {\n\n\t\treturn this.shortcuts;\n\n\t}\n\n\tgetBindings() {\n\n\t\treturn this.bindings;\n\n\t}\n\n\t/**\n\t * Handler for the document level 'keypress' event.\n\t *\n\t * @param {object} event\n\t */\n\tonDocumentKeyPress( event ) {\n\n\t\t// Check if the pressed key is question mark\n\t\tif( event.shiftKey && event.charCode === 63 ) {\n\t\t\tthis.Reveal.toggleHelp();\n\t\t}\n\n\t}\n\n\t/**\n\t * Handler for the document level 'keydown' event.\n\t *\n\t * @param {object} event\n\t */\n\tonDocumentKeyDown( event ) {\n\n\t\tlet config = this.Reveal.getConfig();\n\n\t\t// If there's a condition specified and it returns false,\n\t\t// ignore this event\n\t\tif( typeof config.keyboardCondition === 'function' && config.keyboardCondition(event) === false ) {\n\t\t\treturn true;\n\t\t}\n\n\t\t// If keyboardCondition is set, only capture keyboard events\n\t\t// for embedded decks when they are focused\n\t\tif( config.keyboardCondition === 'focused' && !this.Reveal.isFocused() ) {\n\t\t\treturn true;\n\t\t}\n\n\t\t// Shorthand\n\t\tlet keyCode = event.keyCode;\n\n\t\t// Remember if auto-sliding was paused so we can toggle it\n\t\tlet autoSlideWasPaused = !this.Reveal.isAutoSliding();\n\n\t\tthis.Reveal.onUserInput( event );\n\n\t\t// Is there a focused element that could be using the keyboard?\n\t\tlet activeElementIsCE = document.activeElement && document.activeElement.isContentEditable === true;\n\t\tlet activeElementIsInput = document.activeElement && document.activeElement.tagName && /input|textarea/i.test( document.activeElement.tagName );\n\t\tlet activeElementIsNotes = document.activeElement && document.activeElement.className && /speaker-notes/i.test( document.activeElement.className);\n\n\t\t// Whitelist certain modifiers for slide navigation shortcuts\n\t\tlet isNavigationKey = [32, 37, 38, 39, 40, 78, 80].indexOf( event.keyCode ) !== -1;\n\n\t\t// Prevent all other events when a modifier is pressed\n\t\tlet unusedModifier = \t!( isNavigationKey && event.shiftKey || event.altKey ) &&\n\t\t\t\t\t\t\t\t( event.shiftKey || event.altKey || event.ctrlKey || event.metaKey );\n\n\t\t// Disregard the event if there's a focused element or a\n\t\t// keyboard modifier key is present\n\t\tif( activeElementIsCE || activeElementIsInput || activeElementIsNotes || unusedModifier ) return;\n\n\t\t// While paused only allow resume keyboard events; 'b', 'v', '.'\n\t\tlet resumeKeyCodes = [66,86,190,191];\n\t\tlet key;\n\n\t\t// Custom key bindings for togglePause should be able to resume\n\t\tif( typeof config.keyboard === 'object' ) {\n\t\t\tfor( key in config.keyboard ) {\n\t\t\t\tif( config.keyboard[key] === 'togglePause' ) {\n\t\t\t\t\tresumeKeyCodes.push( parseInt( key, 10 ) );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif( this.Reveal.isPaused() && resumeKeyCodes.indexOf( keyCode ) === -1 ) {\n\t\t\treturn false;\n\t\t}\n\n\t\t// Use linear navigation if we're configured to OR if\n\t\t// the presentation is one-dimensional\n\t\tlet useLinearMode = config.navigationMode === 'linear' || !this.Reveal.hasHorizontalSlides() || !this.Reveal.hasVerticalSlides();\n\n\t\tlet triggered = false;\n\n\t\t// 1. User defined key bindings\n\t\tif( typeof config.keyboard === 'object' ) {\n\n\t\t\tfor( key in config.keyboard ) {\n\n\t\t\t\t// Check if this binding matches the pressed key\n\t\t\t\tif( parseInt( key, 10 ) === keyCode ) {\n\n\t\t\t\t\tlet value = config.keyboard[ key ];\n\n\t\t\t\t\t// Callback function\n\t\t\t\t\tif( typeof value === 'function' ) {\n\t\t\t\t\t\tvalue.apply( null, [ event ] );\n\t\t\t\t\t}\n\t\t\t\t\t// String shortcuts to reveal.js API\n\t\t\t\t\telse if( typeof value === 'string' && typeof this.Reveal[ value ] === 'function' ) {\n\t\t\t\t\t\tthis.Reveal[ value ].call();\n\t\t\t\t\t}\n\n\t\t\t\t\ttriggered = true;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\t// 2. Registered custom key bindings\n\t\tif( triggered === false ) {\n\n\t\t\tfor( key in this.bindings ) {\n\n\t\t\t\t// Check if this binding matches the pressed key\n\t\t\t\tif( parseInt( key, 10 ) === keyCode ) {\n\n\t\t\t\t\tlet action = this.bindings[ key ].callback;\n\n\t\t\t\t\t// Callback function\n\t\t\t\t\tif( typeof action === 'function' ) {\n\t\t\t\t\t\taction.apply( null, [ event ] );\n\t\t\t\t\t}\n\t\t\t\t\t// String shortcuts to reveal.js API\n\t\t\t\t\telse if( typeof action === 'string' && typeof this.Reveal[ action ] === 'function' ) {\n\t\t\t\t\t\tthis.Reveal[ action ].call();\n\t\t\t\t\t}\n\n\t\t\t\t\ttriggered = true;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// 3. System defined key bindings\n\t\tif( triggered === false ) {\n\n\t\t\t// Assume true and try to prove false\n\t\t\ttriggered = true;\n\n\t\t\t// P, PAGE UP\n\t\t\tif( keyCode === 80 || keyCode === 33 ) {\n\t\t\t\tthis.Reveal.prev({skipFragments: event.altKey});\n\t\t\t}\n\t\t\t// N, PAGE DOWN\n\t\t\telse if( keyCode === 78 || keyCode === 34 ) {\n\t\t\t\tthis.Reveal.next({skipFragments: event.altKey});\n\t\t\t}\n\t\t\t// H, LEFT\n\t\t\telse if( keyCode === 72 || keyCode === 37 ) {\n\t\t\t\tif( event.shiftKey ) {\n\t\t\t\t\tthis.Reveal.slide( 0 );\n\t\t\t\t}\n\t\t\t\telse if( !this.Reveal.overview.isActive() && useLinearMode ) {\n\t\t\t\t\tthis.Reveal.prev({skipFragments: event.altKey});\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tthis.Reveal.left({skipFragments: event.altKey});\n\t\t\t\t}\n\t\t\t}\n\t\t\t// L, RIGHT\n\t\t\telse if( keyCode === 76 || keyCode === 39 ) {\n\t\t\t\tif( event.shiftKey ) {\n\t\t\t\t\tthis.Reveal.slide( this.Reveal.getHorizontalSlides().length - 1 );\n\t\t\t\t}\n\t\t\t\telse if( !this.Reveal.overview.isActive() && useLinearMode ) {\n\t\t\t\t\tthis.Reveal.next({skipFragments: event.altKey});\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tthis.Reveal.right({skipFragments: event.altKey});\n\t\t\t\t}\n\t\t\t}\n\t\t\t// K, UP\n\t\t\telse if( keyCode === 75 || keyCode === 38 ) {\n\t\t\t\tif( event.shiftKey ) {\n\t\t\t\t\tthis.Reveal.slide( undefined, 0 );\n\t\t\t\t}\n\t\t\t\telse if( !this.Reveal.overview.isActive() && useLinearMode ) {\n\t\t\t\t\tthis.Reveal.prev({skipFragments: event.altKey});\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tthis.Reveal.up({skipFragments: event.altKey});\n\t\t\t\t}\n\t\t\t}\n\t\t\t// J, DOWN\n\t\t\telse if( keyCode === 74 || keyCode === 40 ) {\n\t\t\t\tif( event.shiftKey ) {\n\t\t\t\t\tthis.Reveal.slide( undefined, Number.MAX_VALUE );\n\t\t\t\t}\n\t\t\t\telse if( !this.Reveal.overview.isActive() && useLinearMode ) {\n\t\t\t\t\tthis.Reveal.next({skipFragments: event.altKey});\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tthis.Reveal.down({skipFragments: event.altKey});\n\t\t\t\t}\n\t\t\t}\n\t\t\t// HOME\n\t\t\telse if( keyCode === 36 ) {\n\t\t\t\tthis.Reveal.slide( 0 );\n\t\t\t}\n\t\t\t// END\n\t\t\telse if( keyCode === 35 ) {\n\t\t\t\tthis.Reveal.slide( this.Reveal.getHorizontalSlides().length - 1 );\n\t\t\t}\n\t\t\t// SPACE\n\t\t\telse if( keyCode === 32 ) {\n\t\t\t\tif( this.Reveal.overview.isActive() ) {\n\t\t\t\t\tthis.Reveal.overview.deactivate();\n\t\t\t\t}\n\t\t\t\tif( event.shiftKey ) {\n\t\t\t\t\tthis.Reveal.prev({skipFragments: event.altKey});\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tthis.Reveal.next({skipFragments: event.altKey});\n\t\t\t\t}\n\t\t\t}\n\t\t\t// TWO-SPOT, SEMICOLON, B, V, PERIOD, LOGITECH PRESENTER TOOLS \"BLACK SCREEN\" BUTTON\n\t\t\telse if( keyCode === 58 || keyCode === 59 || keyCode === 66 || keyCode === 86 || keyCode === 190 || keyCode === 191 ) {\n\t\t\t\tthis.Reveal.togglePause();\n\t\t\t}\n\t\t\t// F\n\t\t\telse if( keyCode === 70 ) {\n\t\t\t\tenterFullscreen( config.embedded ? this.Reveal.getViewportElement() : document.documentElement );\n\t\t\t}\n\t\t\t// A\n\t\t\telse if( keyCode === 65 ) {\n\t\t\t\tif ( config.autoSlideStoppable ) {\n\t\t\t\t\tthis.Reveal.toggleAutoSlide( autoSlideWasPaused );\n\t\t\t\t}\n\t\t\t}\n\t\t\t// G\n\t\t\telse if( keyCode === 71 ) {\n\t\t\t\tif ( config.jumpToSlide ) {\n\t\t\t\t\tthis.Reveal.toggleJumpToSlide();\n\t\t\t\t}\n\t\t\t}\n\t\t\telse {\n\t\t\t\ttriggered = false;\n\t\t\t}\n\n\t\t}\n\n\t\t// If the input resulted in a triggered action we should prevent\n\t\t// the browsers default behavior\n\t\tif( triggered ) {\n\t\t\tevent.preventDefault && event.preventDefault();\n\t\t}\n\t\t// ESC or O key\n\t\telse if( keyCode === 27 || keyCode === 79 ) {\n\t\t\tif( this.Reveal.closeOverlay() === false ) {\n\t\t\t\tthis.Reveal.overview.toggle();\n\t\t\t}\n\n\t\t\tevent.preventDefault && event.preventDefault();\n\t\t}\n\n\t\t// If auto-sliding is enabled we need to cue up\n\t\t// another timeout\n\t\tthis.Reveal.cueAutoSlide();\n\n\t}\n\n}", "/**\n * Reads and writes the URL based on reveal.js' current state.\n */\nexport default class Location {\n\n\t// The minimum number of milliseconds that must pass between\n\t// calls to history.replaceState\n\tMAX_REPLACE_STATE_FREQUENCY = 1000\n\n\tconstructor( Reveal ) {\n\n\t\tthis.Reveal = Reveal;\n\n\t\t// Delays updates to the URL due to a Chrome thumbnailer bug\n\t\tthis.writeURLTimeout = 0;\n\n\t\tthis.replaceStateTimestamp = 0;\n\n\t\tthis.onWindowHashChange = this.onWindowHashChange.bind( this );\n\n\t}\n\n\tbind() {\n\n\t\twindow.addEventListener( 'hashchange', this.onWindowHashChange, false );\n\n\t}\n\n\tunbind() {\n\n\t\twindow.removeEventListener( 'hashchange', this.onWindowHashChange, false );\n\n\t}\n\n\t/**\n\t * Returns the slide indices for the given hash link.\n\t *\n\t * @param {string} [hash] the hash string that we want to\n\t * find the indices for\n\t *\n\t * @returns slide indices or null\n\t */\n\tgetIndicesFromHash( hash=window.location.hash, options={} ) {\n\n\t\t// Attempt to parse the hash as either an index or name\n\t\tlet name = hash.replace( /^#\\/?/, '' );\n\t\tlet bits = name.split( '/' );\n\n\t\t// If the first bit is not fully numeric and there is a name we\n\t\t// can assume that this is a named link\n\t\tif( !/^[0-9]*$/.test( bits[0] ) && name.length ) {\n\t\t\tlet element;\n\n\t\t\tlet f;\n\n\t\t\t// Parse named links with fragments (#/named-link/2)\n\t\t\tif( /\\/[-\\d]+$/g.test( name ) ) {\n\t\t\t\tf = parseInt( name.split( '/' ).pop(), 10 );\n\t\t\t\tf = isNaN(f) ? undefined : f;\n\t\t\t\tname = name.split( '/' ).shift();\n\t\t\t}\n\n\t\t\t// Ensure the named link is a valid HTML ID attribute\n\t\t\ttry {\n\t\t\t\telement = document.getElementById( decodeURIComponent( name ) );\n\t\t\t}\n\t\t\tcatch ( error ) { }\n\n\t\t\tif( element ) {\n\t\t\t\treturn { ...this.Reveal.getIndices( element ), f };\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\tconst config = this.Reveal.getConfig();\n\t\t\tlet hashIndexBase = config.hashOneBasedIndex || options.oneBasedIndex ? 1 : 0;\n\n\t\t\t// Read the index components of the hash\n\t\t\tlet h = ( parseInt( bits[0], 10 ) - hashIndexBase ) || 0,\n\t\t\t\tv = ( parseInt( bits[1], 10 ) - hashIndexBase ) || 0,\n\t\t\t\tf;\n\n\t\t\tif( config.fragmentInURL ) {\n\t\t\t\tf = parseInt( bits[2], 10 );\n\t\t\t\tif( isNaN( f ) ) {\n\t\t\t\t\tf = undefined;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn { h, v, f };\n\t\t}\n\n\t\t// The hash couldn't be parsed or no matching named link was found\n\t\treturn null\n\n\t}\n\n\t/**\n\t * Reads the current URL (hash) and navigates accordingly.\n\t */\n\treadURL() {\n\n\t\tconst currentIndices = this.Reveal.getIndices();\n\t\tconst newIndices = this.getIndicesFromHash();\n\n\t\tif( newIndices ) {\n\t\t\tif( ( newIndices.h !== currentIndices.h || newIndices.v !== currentIndices.v || newIndices.f !== undefined ) ) {\n\t\t\t\t\tthis.Reveal.slide( newIndices.h, newIndices.v, newIndices.f );\n\t\t\t}\n\t\t}\n\t\t// If no new indices are available, we're trying to navigate to\n\t\t// a slide hash that does not exist\n\t\telse {\n\t\t\tthis.Reveal.slide( currentIndices.h || 0, currentIndices.v || 0 );\n\t\t}\n\n\t}\n\n\t/**\n\t * Updates the page URL (hash) to reflect the current\n\t * state.\n\t *\n\t * @param {number} delay The time in ms to wait before\n\t * writing the hash\n\t */\n\twriteURL( delay ) {\n\n\t\tlet config = this.Reveal.getConfig();\n\t\tlet currentSlide = this.Reveal.getCurrentSlide();\n\n\t\t// Make sure there's never more than one timeout running\n\t\tclearTimeout( this.writeURLTimeout );\n\n\t\t// If a delay is specified, timeout this call\n\t\tif( typeof delay === 'number' ) {\n\t\t\tthis.writeURLTimeout = setTimeout( this.writeURL, delay );\n\t\t}\n\t\telse if( currentSlide ) {\n\n\t\t\tlet hash = this.getHash();\n\n\t\t\t// If we're configured to push to history OR the history\n\t\t\t// API is not available.\n\t\t\tif( config.history ) {\n\t\t\t\twindow.location.hash = hash;\n\t\t\t}\n\t\t\t// If we're configured to reflect the current slide in the\n\t\t\t// URL without pushing to history.\n\t\t\telse if( config.hash ) {\n\t\t\t\t// If the hash is empty, don't add it to the URL\n\t\t\t\tif( hash === '/' ) {\n\t\t\t\t\tthis.debouncedReplaceState( window.location.pathname + window.location.search );\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tthis.debouncedReplaceState( '#' + hash );\n\t\t\t\t}\n\t\t\t}\n\t\t\t// UPDATE: The below nuking of all hash changes breaks\n\t\t\t// anchors on pages where reveal.js is running. Removed\n\t\t\t// in 4.0. Why was it here in the first place? ¯\\_(ツ)_/¯\n\t\t\t//\n\t\t\t// If history and hash are both disabled, a hash may still\n\t\t\t// be added to the URL by clicking on a href with a hash\n\t\t\t// target. Counter this by always removing the hash.\n\t\t\t// else {\n\t\t\t// \twindow.history.replaceState( null, null, window.location.pathname + window.location.search );\n\t\t\t// }\n\n\t\t}\n\n\t}\n\n\treplaceState( url ) {\n\n\t\twindow.history.replaceState( null, null, url );\n\t\tthis.replaceStateTimestamp = Date.now();\n\n\t}\n\n\tdebouncedReplaceState( url ) {\n\n\t\tclearTimeout( this.replaceStateTimeout );\n\n\t\tif( Date.now() - this.replaceStateTimestamp > this.MAX_REPLACE_STATE_FREQUENCY ) {\n\t\t\tthis.replaceState( url );\n\t\t}\n\t\telse {\n\t\t\tthis.replaceStateTimeout = setTimeout( () => this.replaceState( url ), this.MAX_REPLACE_STATE_FREQUENCY );\n\t\t}\n\n\t}\n\n\t/**\n\t * Return a hash URL that will resolve to the given slide location.\n\t *\n\t * @param {HTMLElement} [slide=currentSlide] The slide to link to\n\t */\n\tgetHash( slide ) {\n\n\t\tlet url = '/';\n\n\t\t// Attempt to create a named link based on the slide's ID\n\t\tlet s = slide || this.Reveal.getCurrentSlide();\n\t\tlet id = s ? s.getAttribute( 'id' ) : null;\n\t\tif( id ) {\n\t\t\tid = encodeURIComponent( id );\n\t\t}\n\n\t\tlet index = this.Reveal.getIndices( slide );\n\t\tif( !this.Reveal.getConfig().fragmentInURL ) {\n\t\t\tindex.f = undefined;\n\t\t}\n\n\t\t// If the current slide has an ID, use that as a named link,\n\t\t// but we don't support named links with a fragment index\n\t\tif( typeof id === 'string' && id.length ) {\n\t\t\turl = '/' + id;\n\n\t\t\t// If there is also a fragment, append that at the end\n\t\t\t// of the named link, like: #/named-link/2\n\t\t\tif( index.f >= 0 ) url += '/' + index.f;\n\t\t}\n\t\t// Otherwise use the /h/v index\n\t\telse {\n\t\t\tlet hashIndexBase = this.Reveal.getConfig().hashOneBasedIndex ? 1 : 0;\n\t\t\tif( index.h > 0 || index.v > 0 || index.f >= 0 ) url += index.h + hashIndexBase;\n\t\t\tif( index.v > 0 || index.f >= 0 ) url += '/' + (index.v + hashIndexBase );\n\t\t\tif( index.f >= 0 ) url += '/' + index.f;\n\t\t}\n\n\t\treturn url;\n\n\t}\n\n\t/**\n\t * Handler for the window level 'hashchange' event.\n\t *\n\t * @param {object} [event]\n\t */\n\tonWindowHashChange( event ) {\n\n\t\tthis.readURL();\n\n\t}\n\n}", "import { queryAll } from '../utils/util.js'\nimport { isAndroid } from '../utils/device.js'\n\n/**\n * Manages our presentation controls. This includes both\n * the built-in control arrows as well as event monitoring\n * of any elements within the presentation with either of the\n * following helper classes:\n * - .navigate-up\n * - .navigate-right\n * - .navigate-down\n * - .navigate-left\n * - .navigate-next\n * - .navigate-prev\n */\nexport default class Controls {\n\n\tconstructor( Reveal ) {\n\n\t\tthis.Reveal = Reveal;\n\n\t\tthis.onNavigateLeftClicked = this.onNavigateLeftClicked.bind( this );\n\t\tthis.onNavigateRightClicked = this.onNavigateRightClicked.bind( this );\n\t\tthis.onNavigateUpClicked = this.onNavigateUpClicked.bind( this );\n\t\tthis.onNavigateDownClicked = this.onNavigateDownClicked.bind( this );\n\t\tthis.onNavigatePrevClicked = this.onNavigatePrevClicked.bind( this );\n\t\tthis.onNavigateNextClicked = this.onNavigateNextClicked.bind( this );\n\n\t}\n\n\trender() {\n\n\t\tconst rtl = this.Reveal.getConfig().rtl;\n\t\tconst revealElement = this.Reveal.getRevealElement();\n\n\t\tthis.element = document.createElement( 'aside' );\n\t\tthis.element.className = 'controls';\n\t\tthis.element.innerHTML =\n\t\t\t`<button class=\"navigate-left\" aria-label=\"${ rtl ? 'next slide' : 'previous slide' }\"><div class=\"controls-arrow\"></div></button>\n\t\t\t<button class=\"navigate-right\" aria-label=\"${ rtl ? 'previous slide' : 'next slide' }\"><div class=\"controls-arrow\"></div></button>\n\t\t\t<button class=\"navigate-up\" aria-label=\"above slide\"><div class=\"controls-arrow\"></div></button>\n\t\t\t<button class=\"navigate-down\" aria-label=\"below slide\"><div class=\"controls-arrow\"></div></button>`;\n\n\t\tthis.Reveal.getRevealElement().appendChild( this.element );\n\n\t\t// There can be multiple instances of controls throughout the page\n\t\tthis.controlsLeft = queryAll( revealElement, '.navigate-left' );\n\t\tthis.controlsRight = queryAll( revealElement, '.navigate-right' );\n\t\tthis.controlsUp = queryAll( revealElement, '.navigate-up' );\n\t\tthis.controlsDown = queryAll( revealElement, '.navigate-down' );\n\t\tthis.controlsPrev = queryAll( revealElement, '.navigate-prev' );\n\t\tthis.controlsNext = queryAll( revealElement, '.navigate-next' );\n\n\t\t// The left, right and down arrows in the standard reveal.js controls\n\t\tthis.controlsRightArrow = this.element.querySelector( '.navigate-right' );\n\t\tthis.controlsLeftArrow = this.element.querySelector( '.navigate-left' );\n\t\tthis.controlsDownArrow = this.element.querySelector( '.navigate-down' );\n\n\t}\n\n\t/**\n\t * Called when the reveal.js config is updated.\n\t */\n\tconfigure( config, oldConfig ) {\n\n\t\tthis.element.style.display = config.controls ? 'block' : 'none';\n\n\t\tthis.element.setAttribute( 'data-controls-layout', config.controlsLayout );\n\t\tthis.element.setAttribute( 'data-controls-back-arrows', config.controlsBackArrows );\n\n\t}\n\n\tbind() {\n\n\t\t// Listen to both touch and click events, in case the device\n\t\t// supports both\n\t\tlet pointerEvents = [ 'touchstart', 'click' ];\n\n\t\t// Only support touch for Android, fixes double navigations in\n\t\t// stock browser\n\t\tif( isAndroid ) {\n\t\t\tpointerEvents = [ 'touchstart' ];\n\t\t}\n\n\t\tpointerEvents.forEach( eventName => {\n\t\t\tthis.controlsLeft.forEach( el => el.addEventListener( eventName, this.onNavigateLeftClicked, false ) );\n\t\t\tthis.controlsRight.forEach( el => el.addEventListener( eventName, this.onNavigateRightClicked, false ) );\n\t\t\tthis.controlsUp.forEach( el => el.addEventListener( eventName, this.onNavigateUpClicked, false ) );\n\t\t\tthis.controlsDown.forEach( el => el.addEventListener( eventName, this.onNavigateDownClicked, false ) );\n\t\t\tthis.controlsPrev.forEach( el => el.addEventListener( eventName, this.onNavigatePrevClicked, false ) );\n\t\t\tthis.controlsNext.forEach( el => el.addEventListener( eventName, this.onNavigateNextClicked, false ) );\n\t\t} );\n\n\t}\n\n\tunbind() {\n\n\t\t[ 'touchstart', 'click' ].forEach( eventName => {\n\t\t\tthis.controlsLeft.forEach( el => el.removeEventListener( eventName, this.onNavigateLeftClicked, false ) );\n\t\t\tthis.controlsRight.forEach( el => el.removeEventListener( eventName, this.onNavigateRightClicked, false ) );\n\t\t\tthis.controlsUp.forEach( el => el.removeEventListener( eventName, this.onNavigateUpClicked, false ) );\n\t\t\tthis.controlsDown.forEach( el => el.removeEventListener( eventName, this.onNavigateDownClicked, false ) );\n\t\t\tthis.controlsPrev.forEach( el => el.removeEventListener( eventName, this.onNavigatePrevClicked, false ) );\n\t\t\tthis.controlsNext.forEach( el => el.removeEventListener( eventName, this.onNavigateNextClicked, false ) );\n\t\t} );\n\n\t}\n\n\t/**\n\t * Updates the state of all control/navigation arrows.\n\t */\n\tupdate() {\n\n\t\tlet routes = this.Reveal.availableRoutes();\n\n\t\t// Remove the 'enabled' class from all directions\n\t\t[...this.controlsLeft, ...this.controlsRight, ...this.controlsUp, ...this.controlsDown, ...this.controlsPrev, ...this.controlsNext].forEach( node => {\n\t\t\tnode.classList.remove( 'enabled', 'fragmented' );\n\n\t\t\t// Set 'disabled' attribute on all directions\n\t\t\tnode.setAttribute( 'disabled', 'disabled' );\n\t\t} );\n\n\t\t// Add the 'enabled' class to the available routes; remove 'disabled' attribute to enable buttons\n\t\tif( routes.left ) this.controlsLeft.forEach( el => { el.classList.add( 'enabled' ); el.removeAttribute( 'disabled' ); } );\n\t\tif( routes.right ) this.controlsRight.forEach( el => { el.classList.add( 'enabled' ); el.removeAttribute( 'disabled' ); } );\n\t\tif( routes.up ) this.controlsUp.forEach( el => { el.classList.add( 'enabled' ); el.removeAttribute( 'disabled' ); } );\n\t\tif( routes.down ) this.controlsDown.forEach( el => { el.classList.add( 'enabled' ); el.removeAttribute( 'disabled' ); } );\n\n\t\t// Prev/next buttons\n\t\tif( routes.left || routes.up ) this.controlsPrev.forEach( el => { el.classList.add( 'enabled' ); el.removeAttribute( 'disabled' ); } );\n\t\tif( routes.right || routes.down ) this.controlsNext.forEach( el => { el.classList.add( 'enabled' ); el.removeAttribute( 'disabled' ); } );\n\n\t\t// Highlight fragment directions\n\t\tlet currentSlide = this.Reveal.getCurrentSlide();\n\t\tif( currentSlide ) {\n\n\t\t\tlet fragmentsRoutes = this.Reveal.fragments.availableRoutes();\n\n\t\t\t// Always apply fragment decorator to prev/next buttons\n\t\t\tif( fragmentsRoutes.prev ) this.controlsPrev.forEach( el => { el.classList.add( 'fragmented', 'enabled' ); el.removeAttribute( 'disabled' ); } );\n\t\t\tif( fragmentsRoutes.next ) this.controlsNext.forEach( el => { el.classList.add( 'fragmented', 'enabled' ); el.removeAttribute( 'disabled' ); } );\n\n\t\t\t// Apply fragment decorators to directional buttons based on\n\t\t\t// what slide axis they are in\n\t\t\tif( this.Reveal.isVerticalSlide( currentSlide ) ) {\n\t\t\t\tif( fragmentsRoutes.prev ) this.controlsUp.forEach( el => { el.classList.add( 'fragmented', 'enabled' ); el.removeAttribute( 'disabled' ); } );\n\t\t\t\tif( fragmentsRoutes.next ) this.controlsDown.forEach( el => { el.classList.add( 'fragmented', 'enabled' ); el.removeAttribute( 'disabled' ); } );\n\t\t\t}\n\t\t\telse {\n\t\t\t\tif( fragmentsRoutes.prev ) this.controlsLeft.forEach( el => { el.classList.add( 'fragmented', 'enabled' ); el.removeAttribute( 'disabled' ); } );\n\t\t\t\tif( fragmentsRoutes.next ) this.controlsRight.forEach( el => { el.classList.add( 'fragmented', 'enabled' ); el.removeAttribute( 'disabled' ); } );\n\t\t\t}\n\n\t\t}\n\n\t\tif( this.Reveal.getConfig().controlsTutorial ) {\n\n\t\t\tlet indices = this.Reveal.getIndices();\n\n\t\t\t// Highlight control arrows with an animation to ensure\n\t\t\t// that the viewer knows how to navigate\n\t\t\tif( !this.Reveal.hasNavigatedVertically() && routes.down ) {\n\t\t\t\tthis.controlsDownArrow.classList.add( 'highlight' );\n\t\t\t}\n\t\t\telse {\n\t\t\t\tthis.controlsDownArrow.classList.remove( 'highlight' );\n\n\t\t\t\tif( this.Reveal.getConfig().rtl ) {\n\n\t\t\t\t\tif( !this.Reveal.hasNavigatedHorizontally() && routes.left && indices.v === 0 ) {\n\t\t\t\t\t\tthis.controlsLeftArrow.classList.add( 'highlight' );\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tthis.controlsLeftArrow.classList.remove( 'highlight' );\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tif( !this.Reveal.hasNavigatedHorizontally() && routes.right && indices.v === 0 ) {\n\t\t\t\t\t\tthis.controlsRightArrow.classList.add( 'highlight' );\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tthis.controlsRightArrow.classList.remove( 'highlight' );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tdestroy() {\n\n\t\tthis.unbind();\n\t\tthis.element.remove();\n\n\t}\n\n\t/**\n\t * Event handlers for navigation control buttons.\n\t */\n\tonNavigateLeftClicked( event ) {\n\n\t\tevent.preventDefault();\n\t\tthis.Reveal.onUserInput();\n\n\t\tif( this.Reveal.getConfig().navigationMode === 'linear' ) {\n\t\t\tthis.Reveal.prev();\n\t\t}\n\t\telse {\n\t\t\tthis.Reveal.left();\n\t\t}\n\n\t}\n\n\tonNavigateRightClicked( event ) {\n\n\t\tevent.preventDefault();\n\t\tthis.Reveal.onUserInput();\n\n\t\tif( this.Reveal.getConfig().navigationMode === 'linear' ) {\n\t\t\tthis.Reveal.next();\n\t\t}\n\t\telse {\n\t\t\tthis.Reveal.right();\n\t\t}\n\n\t}\n\n\tonNavigateUpClicked( event ) {\n\n\t\tevent.preventDefault();\n\t\tthis.Reveal.onUserInput();\n\n\t\tthis.Reveal.up();\n\n\t}\n\n\tonNavigateDownClicked( event ) {\n\n\t\tevent.preventDefault();\n\t\tthis.Reveal.onUserInput();\n\n\t\tthis.Reveal.down();\n\n\t}\n\n\tonNavigatePrevClicked( event ) {\n\n\t\tevent.preventDefault();\n\t\tthis.Reveal.onUserInput();\n\n\t\tthis.Reveal.prev();\n\n\t}\n\n\tonNavigateNextClicked( event ) {\n\n\t\tevent.preventDefault();\n\t\tthis.Reveal.onUserInput();\n\n\t\tthis.Reveal.next();\n\n\t}\n\n\n}", "/**\n * Creates a visual progress bar for the presentation.\n */\nexport default class Progress {\n\n\tconstructor( Reveal ) {\n\n\t\tthis.Reveal = Reveal;\n\n\t\tthis.onProgressClicked = this.onProgressClicked.bind( this );\n\n\t}\n\n\trender() {\n\n\t\tthis.element = document.createElement( 'div' );\n\t\tthis.element.className = 'progress';\n\t\tthis.Reveal.getRevealElement().appendChild( this.element );\n\n\t\tthis.bar = document.createElement( 'span' );\n\t\tthis.element.appendChild( this.bar );\n\n\t}\n\n\t/**\n\t * Called when the reveal.js config is updated.\n\t */\n\tconfigure( config, oldConfig ) {\n\n\t\tthis.element.style.display = config.progress ? 'block' : 'none';\n\n\t}\n\n\tbind() {\n\n\t\tif( this.Reveal.getConfig().progress && this.element ) {\n\t\t\tthis.element.addEventListener( 'click', this.onProgressClicked, false );\n\t\t}\n\n\t}\n\n\tunbind() {\n\n\t\tif ( this.Reveal.getConfig().progress && this.element ) {\n\t\t\tthis.element.removeEventListener( 'click', this.onProgressClicked, false );\n\t\t}\n\n\t}\n\n\t/**\n\t * Updates the progress bar to reflect the current slide.\n\t */\n\tupdate() {\n\n\t\t// Update progress if enabled\n\t\tif( this.Reveal.getConfig().progress && this.bar ) {\n\n\t\t\tlet scale = this.Reveal.getProgress();\n\n\t\t\t// Don't fill the progress bar if there's only one slide\n\t\t\tif( this.Reveal.getTotalSlides() < 2 ) {\n\t\t\t\tscale = 0;\n\t\t\t}\n\n\t\t\tthis.bar.style.transform = 'scaleX('+ scale +')';\n\n\t\t}\n\n\t}\n\n\tgetMaxWidth() {\n\n\t\treturn this.Reveal.getRevealElement().offsetWidth;\n\n\t}\n\n\t/**\n\t * Clicking on the progress bar results in a navigation to the\n\t * closest approximate horizontal slide using this equation:\n\t *\n\t * ( clickX / presentationWidth ) * numberOfSlides\n\t *\n\t * @param {object} event\n\t */\n\tonProgressClicked( event ) {\n\n\t\tthis.Reveal.onUserInput( event );\n\n\t\tevent.preventDefault();\n\n\t\tlet slides = this.Reveal.getSlides();\n\t\tlet slidesTotal = slides.length;\n\t\tlet slideIndex = Math.floor( ( event.clientX / this.getMaxWidth() ) * slidesTotal );\n\n\t\tif( this.Reveal.getConfig().rtl ) {\n\t\t\tslideIndex = slidesTotal - slideIndex;\n\t\t}\n\n\t\tlet targetIndices = this.Reveal.getIndices(slides[slideIndex]);\n\t\tthis.Reveal.slide( targetIndices.h, targetIndices.v );\n\n\t}\n\n\tdestroy() {\n\n\t\tthis.element.remove();\n\n\t}\n\n}", "/**\n * Handles hiding of the pointer/cursor when inactive.\n */\nexport default class Pointer {\n\n\tconstructor( Reveal ) {\n\n\t\tthis.Reveal = Reveal;\n\n\t\t// Throttles mouse wheel navigation\n\t\tthis.lastMouseWheelStep = 0;\n\n\t\t// Is the mouse pointer currently hidden from view\n\t\tthis.cursorHidden = false;\n\n\t\t// Timeout used to determine when the cursor is inactive\n\t\tthis.cursorInactiveTimeout = 0;\n\n\t\tthis.onDocumentCursorActive = this.onDocumentCursorActive.bind( this );\n\t\tthis.onDocumentMouseScroll = this.onDocumentMouseScroll.bind( this );\n\n\t}\n\n\t/**\n\t * Called when the reveal.js config is updated.\n\t */\n\tconfigure( config, oldConfig ) {\n\n\t\tif( config.mouseWheel ) {\n\t\t\tdocument.addEventListener( 'DOMMouseScroll', this.onDocumentMouseScroll, false ); // FF\n\t\t\tdocument.addEventListener( 'mousewheel', this.onDocumentMouseScroll, false );\n\t\t}\n\t\telse {\n\t\t\tdocument.removeEventListener( 'DOMMouseScroll', this.onDocumentMouseScroll, false ); // FF\n\t\t\tdocument.removeEventListener( 'mousewheel', this.onDocumentMouseScroll, false );\n\t\t}\n\n\t\t// Auto-hide the mouse pointer when its inactive\n\t\tif( config.hideInactiveCursor ) {\n\t\t\tdocument.addEventListener( 'mousemove', this.onDocumentCursorActive, false );\n\t\t\tdocument.addEventListener( 'mousedown', this.onDocumentCursorActive, false );\n\t\t}\n\t\telse {\n\t\t\tthis.showCursor();\n\n\t\t\tdocument.removeEventListener( 'mousemove', this.onDocumentCursorActive, false );\n\t\t\tdocument.removeEventListener( 'mousedown', this.onDocumentCursorActive, false );\n\t\t}\n\n\t}\n\n\t/**\n\t * Shows the mouse pointer after it has been hidden with\n\t * #hideCursor.\n\t */\n\tshowCursor() {\n\n\t\tif( this.cursorHidden ) {\n\t\t\tthis.cursorHidden = false;\n\t\t\tthis.Reveal.getRevealElement().style.cursor = '';\n\t\t}\n\n\t}\n\n\t/**\n\t * Hides the mouse pointer when it's on top of the .reveal\n\t * container.\n\t */\n\thideCursor() {\n\n\t\tif( this.cursorHidden === false ) {\n\t\t\tthis.cursorHidden = true;\n\t\t\tthis.Reveal.getRevealElement().style.cursor = 'none';\n\t\t}\n\n\t}\n\n\tdestroy() {\n\n\t\tthis.showCursor();\n\n\t\tdocument.removeEventListener( 'DOMMouseScroll', this.onDocumentMouseScroll, false );\n\t\tdocument.removeEventListener( 'mousewheel', this.onDocumentMouseScroll, false );\n\t\tdocument.removeEventListener( 'mousemove', this.onDocumentCursorActive, false );\n\t\tdocument.removeEventListener( 'mousedown', this.onDocumentCursorActive, false );\n\n\t}\n\n\t/**\n\t * Called whenever there is mouse input at the document level\n\t * to determine if the cursor is active or not.\n\t *\n\t * @param {object} event\n\t */\n\tonDocumentCursorActive( event ) {\n\n\t\tthis.showCursor();\n\n\t\tclearTimeout( this.cursorInactiveTimeout );\n\n\t\tthis.cursorInactiveTimeout = setTimeout( this.hideCursor.bind( this ), this.Reveal.getConfig().hideCursorTime );\n\n\t}\n\n\t/**\n\t * Handles mouse wheel scrolling, throttled to avoid skipping\n\t * multiple slides.\n\t *\n\t * @param {object} event\n\t */\n\tonDocumentMouseScroll( event ) {\n\n\t\tif( Date.now() - this.lastMouseWheelStep > 1000 ) {\n\n\t\t\tthis.lastMouseWheelStep = Date.now();\n\n\t\t\tlet delta = event.detail || -event.wheelDelta;\n\t\t\tif( delta > 0 ) {\n\t\t\t\tthis.Reveal.next();\n\t\t\t}\n\t\t\telse if( delta < 0 ) {\n\t\t\t\tthis.Reveal.prev();\n\t\t\t}\n\n\t\t}\n\n\t}\n\n}", "/**\n * Loads a JavaScript file from the given URL and executes it.\n *\n * @param {string} url Address of the .js file to load\n * @param {function} callback Method to invoke when the script\n * has loaded and executed\n */\nexport const loadScript = ( url, callback ) => {\n\n\tconst script = document.createElement( 'script' );\n\tscript.type = 'text/javascript';\n\tscript.async = false;\n\tscript.defer = false;\n\tscript.src = url;\n\n\tif( typeof callback === 'function' ) {\n\n\t\t// Success callback\n\t\tscript.onload = script.onreadystatechange = event => {\n\t\t\tif( event.type === 'load' || /loaded|complete/.test( script.readyState ) ) {\n\n\t\t\t\t// Kill event listeners\n\t\t\t\tscript.onload = script.onreadystatechange = script.onerror = null;\n\n\t\t\t\tcallback();\n\n\t\t\t}\n\t\t};\n\n\t\t// Error callback\n\t\tscript.onerror = err => {\n\n\t\t\t// Kill event listeners\n\t\t\tscript.onload = script.onreadystatechange = script.onerror = null;\n\n\t\t\tcallback( new Error( 'Failed loading script: ' + script.src + '\\n' + err ) );\n\n\t\t};\n\n\t}\n\n\t// Append the script at the end of <head>\n\tconst head = document.querySelector( 'head' );\n\thead.insertBefore( script, head.lastChild );\n\n}", "import { loadScript } from '../utils/loader.js'\n\n/**\n * Manages loading and registering of reveal.js plugins.\n */\nexport default class Plugins {\n\n\tconstructor( reveal ) {\n\n\t\tthis.Reveal = reveal;\n\n\t\t// Flags our current state (idle -> loading -> loaded)\n\t\tthis.state = 'idle';\n\n\t\t// An id:instance map of currently registered plugins\n\t\tthis.registeredPlugins = {};\n\n\t\tthis.asyncDependencies = [];\n\n\t}\n\n\t/**\n\t * Loads reveal.js dependencies, registers and\n\t * initializes plugins.\n\t *\n\t * Plugins are direct references to a reveal.js plugin\n\t * object that we register and initialize after any\n\t * synchronous dependencies have loaded.\n\t *\n\t * Dependencies are defined via the 'dependencies' config\n\t * option and will be loaded prior to starting reveal.js.\n\t * Some dependencies may have an 'async' flag, if so they\n\t * will load after reveal.js has been started up.\n\t */\n\tload( plugins, dependencies ) {\n\n\t\tthis.state = 'loading';\n\n\t\tplugins.forEach( this.registerPlugin.bind( this ) );\n\n\t\treturn new Promise( resolve => {\n\n\t\t\tlet scripts = [],\n\t\t\t\tscriptsToLoad = 0;\n\n\t\t\tdependencies.forEach( s => {\n\t\t\t\t// Load if there's no condition or the condition is truthy\n\t\t\t\tif( !s.condition || s.condition() ) {\n\t\t\t\t\tif( s.async ) {\n\t\t\t\t\t\tthis.asyncDependencies.push( s );\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tscripts.push( s );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} );\n\n\t\t\tif( scripts.length ) {\n\t\t\t\tscriptsToLoad = scripts.length;\n\n\t\t\t\tconst scriptLoadedCallback = (s) => {\n\t\t\t\t\tif( s && typeof s.callback === 'function' ) s.callback();\n\n\t\t\t\t\tif( --scriptsToLoad === 0 ) {\n\t\t\t\t\t\tthis.initPlugins().then( resolve );\n\t\t\t\t\t}\n\t\t\t\t};\n\n\t\t\t\t// Load synchronous scripts\n\t\t\t\tscripts.forEach( s => {\n\t\t\t\t\tif( typeof s.id === 'string' ) {\n\t\t\t\t\t\tthis.registerPlugin( s );\n\t\t\t\t\t\tscriptLoadedCallback( s );\n\t\t\t\t\t}\n\t\t\t\t\telse if( typeof s.src === 'string' ) {\n\t\t\t\t\t\tloadScript( s.src, () => scriptLoadedCallback(s) );\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tconsole.warn( 'Unrecognized plugin format', s );\n\t\t\t\t\t\tscriptLoadedCallback();\n\t\t\t\t\t}\n\t\t\t\t} );\n\t\t\t}\n\t\t\telse {\n\t\t\t\tthis.initPlugins().then( resolve );\n\t\t\t}\n\n\t\t} );\n\n\t}\n\n\t/**\n\t * Initializes our plugins and waits for them to be ready\n\t * before proceeding.\n\t */\n\tinitPlugins() {\n\n\t\treturn new Promise( resolve => {\n\n\t\t\tlet pluginValues = Object.values( this.registeredPlugins );\n\t\t\tlet pluginsToInitialize = pluginValues.length;\n\n\t\t\t// If there are no plugins, skip this step\n\t\t\tif( pluginsToInitialize === 0 ) {\n\t\t\t\tthis.loadAsync().then( resolve );\n\t\t\t}\n\t\t\t// ... otherwise initialize plugins\n\t\t\telse {\n\n\t\t\t\tlet initNextPlugin;\n\n\t\t\t\tlet afterPlugInitialized = () => {\n\t\t\t\t\tif( --pluginsToInitialize === 0 ) {\n\t\t\t\t\t\tthis.loadAsync().then( resolve );\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tinitNextPlugin();\n\t\t\t\t\t}\n\t\t\t\t};\n\n\t\t\t\tlet i = 0;\n\n\t\t\t\t// Initialize plugins serially\n\t\t\t\tinitNextPlugin = () => {\n\n\t\t\t\t\tlet plugin = pluginValues[i++];\n\n\t\t\t\t\t// If the plugin has an 'init' method, invoke it\n\t\t\t\t\tif( typeof plugin.init === 'function' ) {\n\t\t\t\t\t\tlet promise = plugin.init( this.Reveal );\n\n\t\t\t\t\t\t// If the plugin returned a Promise, wait for it\n\t\t\t\t\t\tif( promise && typeof promise.then === 'function' ) {\n\t\t\t\t\t\t\tpromise.then( afterPlugInitialized );\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\tafterPlugInitialized();\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tafterPlugInitialized();\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tinitNextPlugin();\n\n\t\t\t}\n\n\t\t} )\n\n\t}\n\n\t/**\n\t * Loads all async reveal.js dependencies.\n\t */\n\tloadAsync() {\n\n\t\tthis.state = 'loaded';\n\n\t\tif( this.asyncDependencies.length ) {\n\t\t\tthis.asyncDependencies.forEach( s => {\n\t\t\t\tloadScript( s.src, s.callback );\n\t\t\t} );\n\t\t}\n\n\t\treturn Promise.resolve();\n\n\t}\n\n\t/**\n\t * Registers a new plugin with this reveal.js instance.\n\t *\n\t * reveal.js waits for all registered plugins to initialize\n\t * before considering itself ready, as long as the plugin\n\t * is registered before calling `Reveal.initialize()`.\n\t */\n\tregisterPlugin( plugin ) {\n\n\t\t// Backwards compatibility to make reveal.js ~3.9.0\n\t\t// plugins work with reveal.js 4.0.0\n\t\tif( arguments.length === 2 && typeof arguments[0] === 'string' ) {\n\t\t\tplugin = arguments[1];\n\t\t\tplugin.id = arguments[0];\n\t\t}\n\t\t// Plugin can optionally be a function which we call\n\t\t// to create an instance of the plugin\n\t\telse if( typeof plugin === 'function' ) {\n\t\t\tplugin = plugin();\n\t\t}\n\n\t\tlet id = plugin.id;\n\n\t\tif( typeof id !== 'string' ) {\n\t\t\tconsole.warn( 'Unrecognized plugin format; can\\'t find plugin.id', plugin );\n\t\t}\n\t\telse if( this.registeredPlugins[id] === undefined ) {\n\t\t\tthis.registeredPlugins[id] = plugin;\n\n\t\t\t// If a plugin is registered after reveal.js is loaded,\n\t\t\t// initialize it right away\n\t\t\tif( this.state === 'loaded' && typeof plugin.init === 'function' ) {\n\t\t\t\tplugin.init( this.Reveal );\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\tconsole.warn( 'reveal.js: \"'+ id +'\" plugin has already been registered' );\n\t\t}\n\n\t}\n\n\t/**\n\t * Checks if a specific plugin has been registered.\n\t *\n\t * @param {String} id Unique plugin identifier\n\t */\n\thasPlugin( id ) {\n\n\t\treturn !!this.registeredPlugins[id];\n\n\t}\n\n\t/**\n\t * Returns the specific plugin instance, if a plugin\n\t * with the given ID has been registered.\n\t *\n\t * @param {String} id Unique plugin identifier\n\t */\n\tgetPlugin( id ) {\n\n\t\treturn this.registeredPlugins[id];\n\n\t}\n\n\tgetRegisteredPlugins() {\n\n\t\treturn this.registeredPlugins;\n\n\t}\n\n\tdestroy() {\n\n\t\tObject.values( this.registeredPlugins ).forEach( plugin => {\n\t\t\tif( typeof plugin.destroy === 'function' ) {\n\t\t\t\tplugin.destroy();\n\t\t\t}\n\t\t} );\n\n\t\tthis.registeredPlugins = {};\n\t\tthis.asyncDependencies = [];\n\n\t}\n\n}\n", "import { SLIDES_SELECTOR } from '../utils/constants.js'\nimport { queryAll, createStyleSheet } from '../utils/util.js'\n\n/**\n * Setups up our presentation for printing/exporting to PDF.\n */\nexport default class Print {\n\n\tconstructor( Reveal ) {\n\n\t\tthis.Reveal = Reveal;\n\n\t}\n\n\t/**\n\t * Configures the presentation for printing to a static\n\t * PDF.\n\t */\n\tasync setupPDF() {\n\n\t\tconst config = this.Reveal.getConfig();\n\t\tconst slides = queryAll( this.Reveal.getRevealElement(), SLIDES_SELECTOR )\n\n\t\t// Compute slide numbers now, before we start duplicating slides\n\t\tconst injectPageNumbers = config.slideNumber && /all|print/i.test( config.showSlideNumber );\n\n\t\tconst slideSize = this.Reveal.getComputedSlideSize( window.innerWidth, window.innerHeight );\n\n\t\t// Dimensions of the PDF pages\n\t\tconst pageWidth = Math.floor( slideSize.width * ( 1 + config.margin ) ),\n\t\t\tpageHeight = Math.floor( slideSize.height * ( 1 + config.margin ) );\n\n\t\t// Dimensions of slides within the pages\n\t\tconst slideWidth = slideSize.width,\n\t\t\tslideHeight = slideSize.height;\n\n\t\tawait new Promise( requestAnimationFrame );\n\n\t\t// Let the browser know what page size we want to print\n\t\tcreateStyleSheet( '@page{size:'+ pageWidth +'px '+ pageHeight +'px; margin: 0px;}' );\n\n\t\t// Limit the size of certain elements to the dimensions of the slide\n\t\tcreateStyleSheet( '.reveal section>img, .reveal section>video, .reveal section>iframe{max-width: '+ slideWidth +'px; max-height:'+ slideHeight +'px}' );\n\n\t\tdocument.documentElement.classList.add( 'print-pdf' );\n\t\tdocument.body.style.width = pageWidth + 'px';\n\t\tdocument.body.style.height = pageHeight + 'px';\n\n\t\tconst viewportElement = document.querySelector( '.reveal-viewport' );\n\t\tlet presentationBackground;\n\t\tif( viewportElement ) {\n\t\t\tconst viewportStyles = window.getComputedStyle( viewportElement );\n\t\t\tif( viewportStyles && viewportStyles.background ) {\n\t\t\t\tpresentationBackground = viewportStyles.background;\n\t\t\t}\n\t\t}\n\n\t\t// Make sure stretch elements fit on slide\n\t\tawait new Promise( requestAnimationFrame );\n\t\tthis.Reveal.layoutSlideContents( slideWidth, slideHeight );\n\n\t\t// Batch scrollHeight access to prevent layout thrashing\n\t\tawait new Promise( requestAnimationFrame );\n\n\t\tconst slideScrollHeights = slides.map( slide => slide.scrollHeight );\n\n\t\tconst pages = [];\n\t\tconst pageContainer = slides[0].parentNode;\n\t\tlet slideNumber = 1;\n\n\t\t// Slide and slide background layout\n\t\tslides.forEach( function( slide, index ) {\n\n\t\t\t// Vertical stacks are not centred since their section\n\t\t\t// children will be\n\t\t\tif( slide.classList.contains( 'stack' ) === false ) {\n\t\t\t\t// Center the slide inside of the page, giving the slide some margin\n\t\t\t\tlet left = ( pageWidth - slideWidth ) / 2;\n\t\t\t\tlet top = ( pageHeight - slideHeight ) / 2;\n\n\t\t\t\tconst contentHeight = slideScrollHeights[ index ];\n\t\t\t\tlet numberOfPages = Math.max( Math.ceil( contentHeight / pageHeight ), 1 );\n\n\t\t\t\t// Adhere to configured pages per slide limit\n\t\t\t\tnumberOfPages = Math.min( numberOfPages, config.pdfMaxPagesPerSlide );\n\n\t\t\t\t// Center slides vertically\n\t\t\t\tif( numberOfPages === 1 && config.center || slide.classList.contains( 'center' ) ) {\n\t\t\t\t\ttop = Math.max( ( pageHeight - contentHeight ) / 2, 0 );\n\t\t\t\t}\n\n\t\t\t\t// Wrap the slide in a page element and hide its overflow\n\t\t\t\t// so that no page ever flows onto another\n\t\t\t\tconst page = document.createElement( 'div' );\n\t\t\t\tpages.push( page );\n\n\t\t\t\tpage.className = 'pdf-page';\n\t\t\t\tpage.style.height = ( ( pageHeight + config.pdfPageHeightOffset ) * numberOfPages ) + 'px';\n\n\t\t\t\t// Copy the presentation-wide background to each individual\n\t\t\t\t// page when printing\n\t\t\t\tif( presentationBackground ) {\n\t\t\t\t\tpage.style.background = presentationBackground;\n\t\t\t\t}\n\n\t\t\t\tpage.appendChild( slide );\n\n\t\t\t\t// Position the slide inside of the page\n\t\t\t\tslide.style.left = left + 'px';\n\t\t\t\tslide.style.top = top + 'px';\n\t\t\t\tslide.style.width = slideWidth + 'px';\n\n\t\t\t\tthis.Reveal.slideContent.layout( slide );\n\n\t\t\t\tif( slide.slideBackgroundElement ) {\n\t\t\t\t\tpage.insertBefore( slide.slideBackgroundElement, slide );\n\t\t\t\t}\n\n\t\t\t\t// Inject notes if `showNotes` is enabled\n\t\t\t\tif( config.showNotes ) {\n\n\t\t\t\t\t// Are there notes for this slide?\n\t\t\t\t\tconst notes = this.Reveal.getSlideNotes( slide );\n\t\t\t\t\tif( notes ) {\n\n\t\t\t\t\t\tconst notesSpacing = 8;\n\t\t\t\t\t\tconst notesLayout = typeof config.showNotes === 'string' ? config.showNotes : 'inline';\n\t\t\t\t\t\tconst notesElement = document.createElement( 'div' );\n\t\t\t\t\t\tnotesElement.classList.add( 'speaker-notes' );\n\t\t\t\t\t\tnotesElement.classList.add( 'speaker-notes-pdf' );\n\t\t\t\t\t\tnotesElement.setAttribute( 'data-layout', notesLayout );\n\t\t\t\t\t\tnotesElement.innerHTML = notes;\n\n\t\t\t\t\t\tif( notesLayout === 'separate-page' ) {\n\t\t\t\t\t\t\tpages.push( notesElement );\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\tnotesElement.style.left = notesSpacing + 'px';\n\t\t\t\t\t\t\tnotesElement.style.bottom = notesSpacing + 'px';\n\t\t\t\t\t\t\tnotesElement.style.width = ( pageWidth - notesSpacing*2 ) + 'px';\n\t\t\t\t\t\t\tpage.appendChild( notesElement );\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\t// Inject page numbers if `slideNumbers` are enabled\n\t\t\t\tif( injectPageNumbers ) {\n\t\t\t\t\tconst numberElement = document.createElement( 'div' );\n\t\t\t\t\tnumberElement.classList.add( 'slide-number' );\n\t\t\t\t\tnumberElement.classList.add( 'slide-number-pdf' );\n\t\t\t\t\tnumberElement.innerHTML = slideNumber++;\n\t\t\t\t\tpage.appendChild( numberElement );\n\t\t\t\t}\n\n\t\t\t\t// Copy page and show fragments one after another\n\t\t\t\tif( config.pdfSeparateFragments ) {\n\n\t\t\t\t\t// Each fragment 'group' is an array containing one or more\n\t\t\t\t\t// fragments. Multiple fragments that appear at the same time\n\t\t\t\t\t// are part of the same group.\n\t\t\t\t\tconst fragmentGroups = this.Reveal.fragments.sort( page.querySelectorAll( '.fragment' ), true );\n\n\t\t\t\t\tlet previousFragmentStep;\n\n\t\t\t\t\tfragmentGroups.forEach( function( fragments, index ) {\n\n\t\t\t\t\t\t// Remove 'current-fragment' from the previous group\n\t\t\t\t\t\tif( previousFragmentStep ) {\n\t\t\t\t\t\t\tpreviousFragmentStep.forEach( function( fragment ) {\n\t\t\t\t\t\t\t\tfragment.classList.remove( 'current-fragment' );\n\t\t\t\t\t\t\t} );\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// Show the fragments for the current index\n\t\t\t\t\t\tfragments.forEach( function( fragment ) {\n\t\t\t\t\t\t\tfragment.classList.add( 'visible', 'current-fragment' );\n\t\t\t\t\t\t}, this );\n\n\t\t\t\t\t\t// Create a separate page for the current fragment state\n\t\t\t\t\t\tconst clonedPage = page.cloneNode( true );\n\n\t\t\t\t\t\t// Inject unique page numbers for fragments\n\t\t\t\t\t\tif( injectPageNumbers ) {\n\t\t\t\t\t\t\tconst numberElement = clonedPage.querySelector( '.slide-number-pdf' );\n\t\t\t\t\t\t\tconst fragmentNumber = index + 1;\n\t\t\t\t\t\t\tnumberElement.innerHTML += '.' + fragmentNumber;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tpages.push( clonedPage );\n\n\t\t\t\t\t\tpreviousFragmentStep = fragments;\n\n\t\t\t\t\t}, this );\n\n\t\t\t\t\t// Reset the first/original page so that all fragments are hidden\n\t\t\t\t\tfragmentGroups.forEach( function( fragments ) {\n\t\t\t\t\t\tfragments.forEach( function( fragment ) {\n\t\t\t\t\t\t\tfragment.classList.remove( 'visible', 'current-fragment' );\n\t\t\t\t\t\t} );\n\t\t\t\t\t} );\n\n\t\t\t\t}\n\t\t\t\t// Show all fragments\n\t\t\t\telse {\n\t\t\t\t\tqueryAll( page, '.fragment:not(.fade-out)' ).forEach( function( fragment ) {\n\t\t\t\t\t\tfragment.classList.add( 'visible' );\n\t\t\t\t\t} );\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}, this );\n\n\t\tawait new Promise( requestAnimationFrame );\n\n\t\tpages.forEach( page => pageContainer.appendChild( page ) );\n\n\t\t// Re-run JS-based content layout after the slide is added to page DOM\n\t\tthis.Reveal.slideContent.layout( this.Reveal.getSlidesElement() );\n\n\t\t// Notify subscribers that the PDF layout is good to go\n\t\tthis.Reveal.dispatchEvent({ type: 'pdf-ready' });\n\n\t}\n\n\t/**\n\t * Checks if this instance is being used to print a PDF.\n\t */\n\tisPrintingPDF() {\n\n\t\treturn ( /print-pdf/gi ).test( window.location.search );\n\n\t}\n\n}\n", "import { isAndroid } from '../utils/device.js'\nimport { matches } from '../utils/util.js'\n\nconst SWIPE_THRESHOLD = 40;\n\n/**\n * Controls all touch interactions and navigations for\n * a presentation.\n */\nexport default class Touch {\n\n\tconstructor( Reveal ) {\n\n\t\tthis.Reveal = Reveal;\n\n\t\t// Holds information about the currently ongoing touch interaction\n\t\tthis.touchStartX = 0;\n\t\tthis.touchStartY = 0;\n\t\tthis.touchStartCount = 0;\n\t\tthis.touchCaptured = false;\n\n\t\tthis.onPointerDown = this.onPointerDown.bind( this );\n\t\tthis.onPointerMove = this.onPointerMove.bind( this );\n\t\tthis.onPointerUp = this.onPointerUp.bind( this );\n\t\tthis.onTouchStart = this.onTouchStart.bind( this );\n\t\tthis.onTouchMove = this.onTouchMove.bind( this );\n\t\tthis.onTouchEnd = this.onTouchEnd.bind( this );\n\n\t}\n\n\t/**\n\t *\n\t */\n\tbind() {\n\n\t\tlet revealElement = this.Reveal.getRevealElement();\n\n\t\tif( 'onpointerdown' in window ) {\n\t\t\t// Use W3C pointer events\n\t\t\trevealElement.addEventListener( 'pointerdown', this.onPointerDown, false );\n\t\t\trevealElement.addEventListener( 'pointermove', this.onPointerMove, false );\n\t\t\trevealElement.addEventListener( 'pointerup', this.onPointerUp, false );\n\t\t}\n\t\telse if( window.navigator.msPointerEnabled ) {\n\t\t\t// IE 10 uses prefixed version of pointer events\n\t\t\trevealElement.addEventListener( 'MSPointerDown', this.onPointerDown, false );\n\t\t\trevealElement.addEventListener( 'MSPointerMove', this.onPointerMove, false );\n\t\t\trevealElement.addEventListener( 'MSPointerUp', this.onPointerUp, false );\n\t\t}\n\t\telse {\n\t\t\t// Fall back to touch events\n\t\t\trevealElement.addEventListener( 'touchstart', this.onTouchStart, false );\n\t\t\trevealElement.addEventListener( 'touchmove', this.onTouchMove, false );\n\t\t\trevealElement.addEventListener( 'touchend', this.onTouchEnd, false );\n\t\t}\n\n\t}\n\n\t/**\n\t *\n\t */\n\tunbind() {\n\n\t\tlet revealElement = this.Reveal.getRevealElement();\n\n\t\trevealElement.removeEventListener( 'pointerdown', this.onPointerDown, false );\n\t\trevealElement.removeEventListener( 'pointermove', this.onPointerMove, false );\n\t\trevealElement.removeEventListener( 'pointerup', this.onPointerUp, false );\n\n\t\trevealElement.removeEventListener( 'MSPointerDown', this.onPointerDown, false );\n\t\trevealElement.removeEventListener( 'MSPointerMove', this.onPointerMove, false );\n\t\trevealElement.removeEventListener( 'MSPointerUp', this.onPointerUp, false );\n\n\t\trevealElement.removeEventListener( 'touchstart', this.onTouchStart, false );\n\t\trevealElement.removeEventListener( 'touchmove', this.onTouchMove, false );\n\t\trevealElement.removeEventListener( 'touchend', this.onTouchEnd, false );\n\n\t}\n\n\t/**\n\t * Checks if the target element prevents the triggering of\n\t * swipe navigation.\n\t */\n\tisSwipePrevented( target ) {\n\n\t\t// Prevent accidental swipes when scrubbing timelines\n\t\tif( matches( target, 'video, audio' ) ) return true;\n\n\t\twhile( target && typeof target.hasAttribute === 'function' ) {\n\t\t\tif( target.hasAttribute( 'data-prevent-swipe' ) ) return true;\n\t\t\ttarget = target.parentNode;\n\t\t}\n\n\t\treturn false;\n\n\t}\n\n\t/**\n\t * Handler for the 'touchstart' event, enables support for\n\t * swipe and pinch gestures.\n\t *\n\t * @param {object} event\n\t */\n\tonTouchStart( event ) {\n\n\t\tif( this.isSwipePrevented( event.target ) ) return true;\n\n\t\tthis.touchStartX = event.touches[0].clientX;\n\t\tthis.touchStartY = event.touches[0].clientY;\n\t\tthis.touchStartCount = event.touches.length;\n\n\t}\n\n\t/**\n\t * Handler for the 'touchmove' event.\n\t *\n\t * @param {object} event\n\t */\n\tonTouchMove( event ) {\n\n\t\tif( this.isSwipePrevented( event.target ) ) return true;\n\n\t\tlet config = this.Reveal.getConfig();\n\n\t\t// Each touch should only trigger one action\n\t\tif( !this.touchCaptured ) {\n\t\t\tthis.Reveal.onUserInput( event );\n\n\t\t\tlet currentX = event.touches[0].clientX;\n\t\t\tlet currentY = event.touches[0].clientY;\n\n\t\t\t// There was only one touch point, look for a swipe\n\t\t\tif( event.touches.length === 1 && this.touchStartCount !== 2 ) {\n\n\t\t\t\tlet availableRoutes = this.Reveal.availableRoutes({ includeFragments: true });\n\n\t\t\t\tlet deltaX = currentX - this.touchStartX,\n\t\t\t\t\tdeltaY = currentY - this.touchStartY;\n\n\t\t\t\tif( deltaX > SWIPE_THRESHOLD && Math.abs( deltaX ) > Math.abs( deltaY ) ) {\n\t\t\t\t\tthis.touchCaptured = true;\n\t\t\t\t\tif( config.navigationMode === 'linear' ) {\n\t\t\t\t\t\tif( config.rtl ) {\n\t\t\t\t\t\t\tthis.Reveal.next();\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\tthis.Reveal.prev();\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tthis.Reveal.left();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse if( deltaX < -SWIPE_THRESHOLD && Math.abs( deltaX ) > Math.abs( deltaY ) ) {\n\t\t\t\t\tthis.touchCaptured = true;\n\t\t\t\t\tif( config.navigationMode === 'linear' ) {\n\t\t\t\t\t\tif( config.rtl ) {\n\t\t\t\t\t\t\tthis.Reveal.prev();\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\tthis.Reveal.next();\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tthis.Reveal.right();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse if( deltaY > SWIPE_THRESHOLD && availableRoutes.up ) {\n\t\t\t\t\tthis.touchCaptured = true;\n\t\t\t\t\tif( config.navigationMode === 'linear' ) {\n\t\t\t\t\t\tthis.Reveal.prev();\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tthis.Reveal.up();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse if( deltaY < -SWIPE_THRESHOLD && availableRoutes.down ) {\n\t\t\t\t\tthis.touchCaptured = true;\n\t\t\t\t\tif( config.navigationMode === 'linear' ) {\n\t\t\t\t\t\tthis.Reveal.next();\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tthis.Reveal.down();\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// If we're embedded, only block touch events if they have\n\t\t\t\t// triggered an action\n\t\t\t\tif( config.embedded ) {\n\t\t\t\t\tif( this.touchCaptured || this.Reveal.isVerticalSlide() ) {\n\t\t\t\t\t\tevent.preventDefault();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t// Not embedded? Block them all to avoid needless tossing\n\t\t\t\t// around of the viewport in iOS\n\t\t\t\telse {\n\t\t\t\t\tevent.preventDefault();\n\t\t\t\t}\n\n\t\t\t}\n\t\t}\n\t\t// There's a bug with swiping on some Android devices unless\n\t\t// the default action is always prevented\n\t\telse if( isAndroid ) {\n\t\t\tevent.preventDefault();\n\t\t}\n\n\t}\n\n\t/**\n\t * Handler for the 'touchend' event.\n\t *\n\t * @param {object} event\n\t */\n\tonTouchEnd( event ) {\n\n\t\tthis.touchCaptured = false;\n\n\t}\n\n\t/**\n\t * Convert pointer down to touch start.\n\t *\n\t * @param {object} event\n\t */\n\tonPointerDown( event ) {\n\n\t\tif( event.pointerType === event.MSPOINTER_TYPE_TOUCH || event.pointerType === \"touch\" ) {\n\t\t\tevent.touches = [{ clientX: event.clientX, clientY: event.clientY }];\n\t\t\tthis.onTouchStart( event );\n\t\t}\n\n\t}\n\n\t/**\n\t * Convert pointer move to touch move.\n\t *\n\t * @param {object} event\n\t */\n\tonPointerMove( event ) {\n\n\t\tif( event.pointerType === event.MSPOINTER_TYPE_TOUCH || event.pointerType === \"touch\" )  {\n\t\t\tevent.touches = [{ clientX: event.clientX, clientY: event.clientY }];\n\t\t\tthis.onTouchMove( event );\n\t\t}\n\n\t}\n\n\t/**\n\t * Convert pointer up to touch end.\n\t *\n\t * @param {object} event\n\t */\n\tonPointerUp( event ) {\n\n\t\tif( event.pointerType === event.MSPOINTER_TYPE_TOUCH || event.pointerType === \"touch\" )  {\n\t\t\tevent.touches = [{ clientX: event.clientX, clientY: event.clientY }];\n\t\t\tthis.onTouchEnd( event );\n\t\t}\n\n\t}\n\n}", "import { closest } from '../utils/util.js'\n\n/**\n * Manages focus when a presentation is embedded. This\n * helps us only capture keyboard from the presentation\n * a user is currently interacting with in a page where\n * multiple presentations are embedded.\n */\n\nconst STATE_FOCUS = 'focus';\nconst STATE_BLUR = 'blur';\n\nexport default class Focus {\n\n\tconstructor( Reveal ) {\n\n\t\tthis.Reveal = Reveal;\n\n\t\tthis.onRevealPointerDown = this.onRevealPointerDown.bind( this );\n\t\tthis.onDocumentPointerDown = this.onDocumentPointerDown.bind( this );\n\n\t}\n\n\t/**\n\t * Called when the reveal.js config is updated.\n\t */\n\tconfigure( config, oldConfig ) {\n\n\t\tif( config.embedded ) {\n\t\t\tthis.blur();\n\t\t}\n\t\telse {\n\t\t\tthis.focus();\n\t\t\tthis.unbind();\n\t\t}\n\n\t}\n\n\tbind() {\n\n\t\tif( this.Reveal.getConfig().embedded ) {\n\t\t\tthis.Reveal.getRevealElement().addEventListener( 'pointerdown', this.onRevealPointerDown, false );\n\t\t}\n\n\t}\n\n\tunbind() {\n\n\t\tthis.Reveal.getRevealElement().removeEventListener( 'pointerdown', this.onRevealPointerDown, false );\n\t\tdocument.removeEventListener( 'pointerdown', this.onDocumentPointerDown, false );\n\n\t}\n\n\tfocus() {\n\n\t\tif( this.state !== STATE_FOCUS ) {\n\t\t\tthis.Reveal.getRevealElement().classList.add( 'focused' );\n\t\t\tdocument.addEventListener( 'pointerdown', this.onDocumentPointerDown, false );\n\t\t}\n\n\t\tthis.state = STATE_FOCUS;\n\n\t}\n\n\tblur() {\n\n\t\tif( this.state !== STATE_BLUR ) {\n\t\t\tthis.Reveal.getRevealElement().classList.remove( 'focused' );\n\t\t\tdocument.removeEventListener( 'pointerdown', this.onDocumentPointerDown, false );\n\t\t}\n\n\t\tthis.state = STATE_BLUR;\n\n\t}\n\n\tisFocused() {\n\n\t\treturn this.state === STATE_FOCUS;\n\n\t}\n\n\tdestroy() {\n\n\t\tthis.Reveal.getRevealElement().classList.remove( 'focused' );\n\n\t}\n\n\tonRevealPointerDown( event ) {\n\n\t\tthis.focus();\n\n\t}\n\n\tonDocumentPointerDown( event ) {\n\n\t\tlet revealElement = closest( event.target, '.reveal' );\n\t\tif( !revealElement || revealElement !== this.Reveal.getRevealElement() ) {\n\t\t\tthis.blur();\n\t\t}\n\n\t}\n\n}", "/**\n * Handles the showing of speaker notes\n */\nexport default class Notes {\n\n\tconstructor( Reveal ) {\n\n\t\tthis.Reveal = Reveal;\n\n\t}\n\n\trender() {\n\n\t\tthis.element = document.createElement( 'div' );\n\t\tthis.element.className = 'speaker-notes';\n\t\tthis.element.setAttribute( 'data-prevent-swipe', '' );\n\t\tthis.element.setAttribute( 'tabindex', '0' );\n\t\tthis.Reveal.getRevealElement().appendChild( this.element );\n\n\t}\n\n\t/**\n\t * Called when the reveal.js config is updated.\n\t */\n\tconfigure( config, oldConfig ) {\n\n\t\tif( config.showNotes ) {\n\t\t\tthis.element.setAttribute( 'data-layout', typeof config.showNotes === 'string' ? config.showNotes : 'inline' );\n\t\t}\n\n\t}\n\n\t/**\n\t * Pick up notes from the current slide and display them\n\t * to the viewer.\n\t *\n\t * @see {@link config.showNotes}\n\t */\n\tupdate() {\n\n\t\tif( this.Reveal.getConfig().showNotes && this.element && this.Reveal.getCurrentSlide() && !this.Reveal.print.isPrintingPDF() ) {\n\n\t\t\tthis.element.innerHTML = this.getSlideNotes() || '<span class=\"notes-placeholder\">No notes on this slide.</span>';\n\n\t\t}\n\n\t}\n\n\t/**\n\t * Updates the visibility of the speaker notes sidebar that\n\t * is used to share annotated slides. The notes sidebar is\n\t * only visible if showNotes is true and there are notes on\n\t * one or more slides in the deck.\n\t */\n\tupdateVisibility() {\n\n\t\tif( this.Reveal.getConfig().showNotes && this.hasNotes() && !this.Reveal.print.isPrintingPDF() ) {\n\t\t\tthis.Reveal.getRevealElement().classList.add( 'show-notes' );\n\t\t}\n\t\telse {\n\t\t\tthis.Reveal.getRevealElement().classList.remove( 'show-notes' );\n\t\t}\n\n\t}\n\n\t/**\n\t * Checks if there are speaker notes for ANY slide in the\n\t * presentation.\n\t */\n\thasNotes() {\n\n\t\treturn this.Reveal.getSlidesElement().querySelectorAll( '[data-notes], aside.notes' ).length > 0;\n\n\t}\n\n\t/**\n\t * Checks if this presentation is running inside of the\n\t * speaker notes window.\n\t *\n\t * @return {boolean}\n\t */\n\tisSpeakerNotesWindow() {\n\n\t\treturn !!window.location.search.match( /receiver/gi );\n\n\t}\n\n\t/**\n\t * Retrieves the speaker notes from a slide. Notes can be\n\t * defined in two ways:\n\t * 1. As a data-notes attribute on the slide <section>\n\t * 2. With <aside class=\"notes\"> elements inside the slide\n\t *\n\t * @param {HTMLElement} [slide=currentSlide]\n\t * @return {(string|null)}\n\t */\n\tgetSlideNotes( slide = this.Reveal.getCurrentSlide() ) {\n\n\t\t// Notes can be specified via the data-notes attribute...\n\t\tif( slide.hasAttribute( 'data-notes' ) ) {\n\t\t\treturn slide.getAttribute( 'data-notes' );\n\t\t}\n\n\t\t// ... or using <aside class=\"notes\"> elements\n\t\tlet notesElements = slide.querySelectorAll( 'aside.notes' );\n\t\tif( notesElements ) {\n\t\t\treturn Array.from(notesElements).map( notesElement => notesElement.innerHTML ).join( '\\n' );\n\t\t}\n\n\t\treturn null;\n\n\t}\n\n\tdestroy() {\n\n\t\tthis.element.remove();\n\n\t}\n\n}", "/**\n * UI component that lets the use control auto-slide\n * playback via play/pause.\n */\nexport default class Playback {\n\n\t/**\n\t * @param {HTMLElement} container The component will append\n\t * itself to this\n\t * @param {function} progressCheck A method which will be\n\t * called frequently to get the current playback progress on\n\t * a range of 0-1\n\t */\n\tconstructor( container, progressCheck ) {\n\n\t\t// Cosmetics\n\t\tthis.diameter = 100;\n\t\tthis.diameter2 = this.diameter/2;\n\t\tthis.thickness = 6;\n\n\t\t// Flags if we are currently playing\n\t\tthis.playing = false;\n\n\t\t// Current progress on a 0-1 range\n\t\tthis.progress = 0;\n\n\t\t// Used to loop the animation smoothly\n\t\tthis.progressOffset = 1;\n\n\t\tthis.container = container;\n\t\tthis.progressCheck = progressCheck;\n\n\t\tthis.canvas = document.createElement( 'canvas' );\n\t\tthis.canvas.className = 'playback';\n\t\tthis.canvas.width = this.diameter;\n\t\tthis.canvas.height = this.diameter;\n\t\tthis.canvas.style.width = this.diameter2 + 'px';\n\t\tthis.canvas.style.height = this.diameter2 + 'px';\n\t\tthis.context = this.canvas.getContext( '2d' );\n\n\t\tthis.container.appendChild( this.canvas );\n\n\t\tthis.render();\n\n\t}\n\n\tsetPlaying( value ) {\n\n\t\tconst wasPlaying = this.playing;\n\n\t\tthis.playing = value;\n\n\t\t// Start repainting if we weren't already\n\t\tif( !wasPlaying && this.playing ) {\n\t\t\tthis.animate();\n\t\t}\n\t\telse {\n\t\t\tthis.render();\n\t\t}\n\n\t}\n\n\tanimate() {\n\n\t\tconst progressBefore = this.progress;\n\n\t\tthis.progress = this.progressCheck();\n\n\t\t// When we loop, offset the progress so that it eases\n\t\t// smoothly rather than immediately resetting\n\t\tif( progressBefore > 0.8 && this.progress < 0.2 ) {\n\t\t\tthis.progressOffset = this.progress;\n\t\t}\n\n\t\tthis.render();\n\n\t\tif( this.playing ) {\n\t\t\trequestAnimationFrame( this.animate.bind( this ) );\n\t\t}\n\n\t}\n\n\t/**\n\t * Renders the current progress and playback state.\n\t */\n\trender() {\n\n\t\tlet progress = this.playing ? this.progress : 0,\n\t\t\tradius = ( this.diameter2 ) - this.thickness,\n\t\t\tx = this.diameter2,\n\t\t\ty = this.diameter2,\n\t\t\ticonSize = 28;\n\n\t\t// Ease towards 1\n\t\tthis.progressOffset += ( 1 - this.progressOffset ) * 0.1;\n\n\t\tconst endAngle = ( - Math.PI / 2 ) + ( progress * ( Math.PI * 2 ) );\n\t\tconst startAngle = ( - Math.PI / 2 ) + ( this.progressOffset * ( Math.PI * 2 ) );\n\n\t\tthis.context.save();\n\t\tthis.context.clearRect( 0, 0, this.diameter, this.diameter );\n\n\t\t// Solid background color\n\t\tthis.context.beginPath();\n\t\tthis.context.arc( x, y, radius + 4, 0, Math.PI * 2, false );\n\t\tthis.context.fillStyle = 'rgba( 0, 0, 0, 0.4 )';\n\t\tthis.context.fill();\n\n\t\t// Draw progress track\n\t\tthis.context.beginPath();\n\t\tthis.context.arc( x, y, radius, 0, Math.PI * 2, false );\n\t\tthis.context.lineWidth = this.thickness;\n\t\tthis.context.strokeStyle = 'rgba( 255, 255, 255, 0.2 )';\n\t\tthis.context.stroke();\n\n\t\tif( this.playing ) {\n\t\t\t// Draw progress on top of track\n\t\t\tthis.context.beginPath();\n\t\t\tthis.context.arc( x, y, radius, startAngle, endAngle, false );\n\t\t\tthis.context.lineWidth = this.thickness;\n\t\t\tthis.context.strokeStyle = '#fff';\n\t\t\tthis.context.stroke();\n\t\t}\n\n\t\tthis.context.translate( x - ( iconSize / 2 ), y - ( iconSize / 2 ) );\n\n\t\t// Draw play/pause icons\n\t\tif( this.playing ) {\n\t\t\tthis.context.fillStyle = '#fff';\n\t\t\tthis.context.fillRect( 0, 0, iconSize / 2 - 4, iconSize );\n\t\t\tthis.context.fillRect( iconSize / 2 + 4, 0, iconSize / 2 - 4, iconSize );\n\t\t}\n\t\telse {\n\t\t\tthis.context.beginPath();\n\t\t\tthis.context.translate( 4, 0 );\n\t\t\tthis.context.moveTo( 0, 0 );\n\t\t\tthis.context.lineTo( iconSize - 4, iconSize / 2 );\n\t\t\tthis.context.lineTo( 0, iconSize );\n\t\t\tthis.context.fillStyle = '#fff';\n\t\t\tthis.context.fill();\n\t\t}\n\n\t\tthis.context.restore();\n\n\t}\n\n\ton( type, listener ) {\n\t\tthis.canvas.addEventListener( type, listener, false );\n\t}\n\n\toff( type, listener ) {\n\t\tthis.canvas.removeEventListener( type, listener, false );\n\t}\n\n\tdestroy() {\n\n\t\tthis.playing = false;\n\n\t\tif( this.canvas.parentNode ) {\n\t\t\tthis.container.removeChild( this.canvas );\n\t\t}\n\n\t}\n\n}", "/**\n * The default reveal.js config object.\n */\nexport default {\n\n\t// The \"normal\" size of the presentation, aspect ratio will be preserved\n\t// when the presentation is scaled to fit different resolutions\n\twidth: 960,\n\theight: 700,\n\n\t// Factor of the display size that should remain empty around the content\n\tmargin: 0.04,\n\n\t// Bounds for smallest/largest possible scale to apply to content\n\tminScale: 0.2,\n\tmaxScale: 2.0,\n\n\t// Display presentation control arrows\n\tcontrols: true,\n\n\t// Help the user learn the controls by providing hints, for example by\n\t// bouncing the down arrow when they first encounter a vertical slide\n\tcontrolsTutorial: true,\n\n\t// Determines where controls appear, \"edges\" or \"bottom-right\"\n\tcontrolsLayout: 'bottom-right',\n\n\t// Visibility rule for backwards navigation arrows; \"faded\", \"hidden\"\n\t// or \"visible\"\n\tcontrolsBackArrows: 'faded',\n\n\t// Display a presentation progress bar\n\tprogress: true,\n\n\t// Display the page number of the current slide\n\t// - true:    Show slide number\n\t// - false:   Hide slide number\n\t//\n\t// Can optionally be set as a string that specifies the number formatting:\n\t// - \"h.v\":\t  Horizontal . vertical slide number (default)\n\t// - \"h/v\":\t  Horizontal / vertical slide number\n\t// - \"c\":\t  Flattened slide number\n\t// - \"c/t\":\t  Flattened slide number / total slides\n\t//\n\t// Alternatively, you can provide a function that returns the slide\n\t// number for the current slide. The function should take in a slide\n\t// object and return an array with one string [slideNumber] or\n\t// three strings [n1,delimiter,n2]. See #formatSlideNumber().\n\tslideNumber: false,\n\n\t// Can be used to limit the contexts in which the slide number appears\n\t// - \"all\":      Always show the slide number\n\t// - \"print\":    Only when printing to PDF\n\t// - \"speaker\":  Only in the speaker view\n\tshowSlideNumber: 'all',\n\n\t// Use 1 based indexing for # links to match slide number (default is zero\n\t// based)\n\thashOneBasedIndex: false,\n\n\t// Add the current slide number to the URL hash so that reloading the\n\t// page/copying the URL will return you to the same slide\n\thash: false,\n\n\t// Flags if we should monitor the hash and change slides accordingly\n\trespondToHashChanges: true,\n\n\t// Enable support for jump-to-slide navigation shortcuts\n\tjumpToSlide: true,\n\n\t// Push each slide change to the browser history.  Implies `hash: true`\n\thistory: false,\n\n\t// Enable keyboard shortcuts for navigation\n\tkeyboard: true,\n\n\t// Optional function that blocks keyboard events when retuning false\n\t//\n\t// If you set this to 'focused', we will only capture keyboard events\n\t// for embedded decks when they are in focus\n\tkeyboardCondition: null,\n\n\t// Disables the default reveal.js slide layout (scaling and centering)\n\t// so that you can use custom CSS layout\n\tdisableLayout: false,\n\n\t// Enable the slide overview mode\n\toverview: true,\n\n\t// Vertical centering of slides\n\tcenter: true,\n\n\t// Enables touch navigation on devices with touch input\n\ttouch: true,\n\n\t// Loop the presentation\n\tloop: false,\n\n\t// Change the presentation direction to be RTL\n\trtl: false,\n\n\t// Changes the behavior of our navigation directions.\n\t//\n\t// \"default\"\n\t// Left/right arrow keys step between horizontal slides, up/down\n\t// arrow keys step between vertical slides. Space key steps through\n\t// all slides (both horizontal and vertical).\n\t//\n\t// \"linear\"\n\t// Removes the up/down arrows. Left/right arrows step through all\n\t// slides (both horizontal and vertical).\n\t//\n\t// \"grid\"\n\t// When this is enabled, stepping left/right from a vertical stack\n\t// to an adjacent vertical stack will land you at the same vertical\n\t// index.\n\t//\n\t// Consider a deck with six slides ordered in two vertical stacks:\n\t// 1.1    2.1\n\t// 1.2    2.2\n\t// 1.3    2.3\n\t//\n\t// If you're on slide 1.3 and navigate right, you will normally move\n\t// from 1.3 -> 2.1. If \"grid\" is used, the same navigation takes you\n\t// from 1.3 -> 2.3.\n\tnavigationMode: 'default',\n\n\t// Randomizes the order of slides each time the presentation loads\n\tshuffle: false,\n\n\t// Turns fragments on and off globally\n\tfragments: true,\n\n\t// Flags whether to include the current fragment in the URL,\n\t// so that reloading brings you to the same fragment position\n\tfragmentInURL: true,\n\n\t// Flags if the presentation is running in an embedded mode,\n\t// i.e. contained within a limited portion of the screen\n\tembedded: false,\n\n\t// Flags if we should show a help overlay when the question-mark\n\t// key is pressed\n\thelp: true,\n\n\t// Flags if it should be possible to pause the presentation (blackout)\n\tpause: true,\n\n\t// Flags if speaker notes should be visible to all viewers\n\tshowNotes: false,\n\n\t// Flags if slides with data-visibility=\"hidden\" should be kep visible\n\tshowHiddenSlides: false,\n\n\t// Global override for autoplaying embedded media (video/audio/iframe)\n\t// - null:   Media will only autoplay if data-autoplay is present\n\t// - true:   All media will autoplay, regardless of individual setting\n\t// - false:  No media will autoplay, regardless of individual setting\n\tautoPlayMedia: null,\n\n\t// Global override for preloading lazy-loaded iframes\n\t// - null:   Iframes with data-src AND data-preload will be loaded when within\n\t//           the viewDistance, iframes with only data-src will be loaded when visible\n\t// - true:   All iframes with data-src will be loaded when within the viewDistance\n\t// - false:  All iframes with data-src will be loaded only when visible\n\tpreloadIframes: null,\n\n\t// Can be used to globally disable auto-animation\n\tautoAnimate: true,\n\n\t// Optionally provide a custom element matcher that will be\n\t// used to dictate which elements we can animate between.\n\tautoAnimateMatcher: null,\n\n\t// Default settings for our auto-animate transitions, can be\n\t// overridden per-slide or per-element via data arguments\n\tautoAnimateEasing: 'ease',\n\tautoAnimateDuration: 1.0,\n\tautoAnimateUnmatched: true,\n\n\t// CSS properties that can be auto-animated. Position & scale\n\t// is matched separately so there's no need to include styles\n\t// like top/right/bottom/left, width/height or margin.\n\tautoAnimateStyles: [\n\t\t'opacity',\n\t\t'color',\n\t\t'background-color',\n\t\t'padding',\n\t\t'font-size',\n\t\t'line-height',\n\t\t'letter-spacing',\n\t\t'border-width',\n\t\t'border-color',\n\t\t'border-radius',\n\t\t'outline',\n\t\t'outline-offset'\n\t],\n\n\t// Controls automatic progression to the next slide\n\t// - 0:      Auto-sliding only happens if the data-autoslide HTML attribute\n\t//           is present on the current slide or fragment\n\t// - 1+:     All slides will progress automatically at the given interval\n\t// - false:  No auto-sliding, even if data-autoslide is present\n\tautoSlide: 0,\n\n\t// Stop auto-sliding after user input\n\tautoSlideStoppable: true,\n\n\t// Use this method for navigation when auto-sliding (defaults to navigateNext)\n\tautoSlideMethod: null,\n\n\t// Specify the average time in seconds that you think you will spend\n\t// presenting each slide. This is used to show a pacing timer in the\n\t// speaker view\n\tdefaultTiming: null,\n\n\t// Enable slide navigation via mouse wheel\n\tmouseWheel: false,\n\n\t// Opens links in an iframe preview overlay\n\t// Add `data-preview-link` and `data-preview-link=\"false\"` to customise each link\n\t// individually\n\tpreviewLinks: false,\n\n\t// Exposes the reveal.js API through window.postMessage\n\tpostMessage: true,\n\n\t// Dispatches all reveal.js events to the parent window through postMessage\n\tpostMessageEvents: false,\n\n\t// Focuses body when page changes visibility to ensure keyboard shortcuts work\n\tfocusBodyOnPageVisibilityChange: true,\n\n\t// Transition style\n\ttransition: 'slide', // none/fade/slide/convex/concave/zoom\n\n\t// Transition speed\n\ttransitionSpeed: 'default', // default/fast/slow\n\n\t// Transition style for full page slide backgrounds\n\tbackgroundTransition: 'fade', // none/fade/slide/convex/concave/zoom\n\n\t// Parallax background image\n\tparallaxBackgroundImage: '', // CSS syntax, e.g. \"a.jpg\"\n\n\t// Parallax background size\n\tparallaxBackgroundSize: '', // CSS syntax, e.g. \"3000px 2000px\"\n\n\t// Parallax background repeat\n\tparallaxBackgroundRepeat: '', // repeat/repeat-x/repeat-y/no-repeat/initial/inherit\n\n\t// Parallax background position\n\tparallaxBackgroundPosition: '', // CSS syntax, e.g. \"top left\"\n\n\t// Amount of pixels to move the parallax background per slide step\n\tparallaxBackgroundHorizontal: null,\n\tparallaxBackgroundVertical: null,\n\n\t// The maximum number of pages a single slide can expand onto when printing\n\t// to PDF, unlimited by default\n\tpdfMaxPagesPerSlide: Number.POSITIVE_INFINITY,\n\n\t// Prints each fragment on a separate slide\n\tpdfSeparateFragments: true,\n\n\t// Offset used to reduce the height of content within exported PDF pages.\n\t// This exists to account for environment differences based on how you\n\t// print to PDF. CLI printing options, like phantomjs and wkpdf, can end\n\t// on precisely the total height of the document whereas in-browser\n\t// printing has to end one pixel before.\n\tpdfPageHeightOffset: -1,\n\n\t// Number of slides away from the current that are visible\n\tviewDistance: 3,\n\n\t// Number of slides away from the current that are visible on mobile\n\t// devices. It is advisable to set this to a lower number than\n\t// viewDistance in order to save resources.\n\tmobileViewDistance: 2,\n\n\t// The display mode that will be used to show slides\n\tdisplay: 'block',\n\n\t// Hide cursor if inactive\n\thideInactiveCursor: true,\n\n\t// Time before the cursor is hidden (in ms)\n\thideCursorTime: 5000,\n\n\t// Should we automatmically sort and set indices for fragments\n\t// at each sync? (See Reveal.sync)\n\tsortFragmentsOnSync: true,\n\n\t// Script dependencies to load\n\tdependencies: [],\n\n\t// Plugin objects to register and use for this presentation\n\tplugins: []\n\n}", "import SlideContent from './controllers/slidecontent.js'\nimport SlideNumber from './controllers/slidenumber.js'\nimport JumpToSlide from './controllers/jumptoslide.js'\nimport Backgrounds from './controllers/backgrounds.js'\nimport AutoAnimate from './controllers/autoanimate.js'\nimport Fragments from './controllers/fragments.js'\nimport Overview from './controllers/overview.js'\nimport Keyboard from './controllers/keyboard.js'\nimport Location from './controllers/location.js'\nimport Controls from './controllers/controls.js'\nimport Progress from './controllers/progress.js'\nimport Pointer from './controllers/pointer.js'\nimport Plugins from './controllers/plugins.js'\nimport Print from './controllers/print.js'\nimport Touch from './controllers/touch.js'\nimport Focus from './controllers/focus.js'\nimport Notes from './controllers/notes.js'\nimport Playback from './components/playback.js'\nimport defaultConfig from './config.js'\nimport * as Util from './utils/util.js'\nimport * as Device from './utils/device.js'\nimport {\n\tSLIDES_SELECTOR,\n\tHORIZONTAL_SLIDES_SELECTOR,\n\tVERTICAL_SLIDES_SELECTOR,\n\tPOST_MESSAGE_METHOD_BLACKLIST\n} from './utils/constants.js'\n\n// The reveal.js version\nexport const VERSION = '4.5.0';\n\n/**\n * reveal.js\n * https://revealjs.com\n * MIT licensed\n *\n * Copyright (C) 2011-2022 Hakim El Hattab, https://hakim.se\n */\nexport default function( revealElement, options ) {\n\n\t// Support initialization with no args, one arg\n\t// [options] or two args [revealElement, options]\n\tif( arguments.length < 2 ) {\n\t\toptions = arguments[0];\n\t\trevealElement = document.querySelector( '.reveal' );\n\t}\n\n\tconst Reveal = {};\n\n\t// Configuration defaults, can be overridden at initialization time\n\tlet config = {},\n\n\t\t// Flags if reveal.js is loaded (has dispatched the 'ready' event)\n\t\tready = false,\n\n\t\t// The horizontal and vertical index of the currently active slide\n\t\tindexh,\n\t\tindexv,\n\n\t\t// The previous and current slide HTML elements\n\t\tpreviousSlide,\n\t\tcurrentSlide,\n\n\t\t// Remember which directions that the user has navigated towards\n\t\tnavigationHistory = {\n\t\t\thasNavigatedHorizontally: false,\n\t\t\thasNavigatedVertically: false\n\t\t},\n\n\t\t// Slides may have a data-state attribute which we pick up and apply\n\t\t// as a class to the body. This list contains the combined state of\n\t\t// all current slides.\n\t\tstate = [],\n\n\t\t// The current scale of the presentation (see width/height config)\n\t\tscale = 1,\n\n\t\t// CSS transform that is currently applied to the slides container,\n\t\t// split into two groups\n\t\tslidesTransform = { layout: '', overview: '' },\n\n\t\t// Cached references to DOM elements\n\t\tdom = {},\n\n\t\t// Flags if the interaction event listeners are bound\n\t\teventsAreBound = false,\n\n\t\t// The current slide transition state; idle or running\n\t\ttransition = 'idle',\n\n\t\t// The current auto-slide duration\n\t\tautoSlide = 0,\n\n\t\t// Auto slide properties\n\t\tautoSlidePlayer,\n\t\tautoSlideTimeout = 0,\n\t\tautoSlideStartTime = -1,\n\t\tautoSlidePaused = false,\n\n\t\t// Controllers for different aspects of our presentation. They're\n\t\t// all given direct references to this Reveal instance since there\n\t\t// may be multiple presentations running in parallel.\n\t\tslideContent = new SlideContent( Reveal ),\n\t\tslideNumber = new SlideNumber( Reveal ),\n\t\tjumpToSlide = new JumpToSlide( Reveal ),\n\t\tautoAnimate = new AutoAnimate( Reveal ),\n\t\tbackgrounds = new Backgrounds( Reveal ),\n\t\tfragments = new Fragments( Reveal ),\n\t\toverview = new Overview( Reveal ),\n\t\tkeyboard = new Keyboard( Reveal ),\n\t\tlocation = new Location( Reveal ),\n\t\tcontrols = new Controls( Reveal ),\n\t\tprogress = new Progress( Reveal ),\n\t\tpointer = new Pointer( Reveal ),\n\t\tplugins = new Plugins( Reveal ),\n\t\tprint = new Print( Reveal ),\n\t\tfocus = new Focus( Reveal ),\n\t\ttouch = new Touch( Reveal ),\n\t\tnotes = new Notes( Reveal );\n\n\t/**\n\t * Starts up the presentation.\n\t */\n\tfunction initialize( initOptions ) {\n\n\t\tif( !revealElement ) throw 'Unable to find presentation root (<div class=\"reveal\">).';\n\n\t\t// Cache references to key DOM elements\n\t\tdom.wrapper = revealElement;\n\t\tdom.slides = revealElement.querySelector( '.slides' );\n\n\t\tif( !dom.slides ) throw 'Unable to find slides container (<div class=\"slides\">).';\n\n\t\t// Compose our config object in order of increasing precedence:\n\t\t// 1. Default reveal.js options\n\t\t// 2. Options provided via Reveal.configure() prior to\n\t\t//    initialization\n\t\t// 3. Options passed to the Reveal constructor\n\t\t// 4. Options passed to Reveal.initialize\n\t\t// 5. Query params\n\t\tconfig = { ...defaultConfig, ...config, ...options, ...initOptions, ...Util.getQueryHash() };\n\n\t\tsetViewport();\n\n\t\t// Force a layout when the whole page, incl fonts, has loaded\n\t\twindow.addEventListener( 'load', layout, false );\n\n\t\t// Register plugins and load dependencies, then move on to #start()\n\t\tplugins.load( config.plugins, config.dependencies ).then( start );\n\n\t\treturn new Promise( resolve => Reveal.on( 'ready', resolve ) );\n\n\t}\n\n\t/**\n\t * Encase the presentation in a reveal.js viewport. The\n\t * extent of the viewport differs based on configuration.\n\t */\n\tfunction setViewport() {\n\n\t\t// Embedded decks use the reveal element as their viewport\n\t\tif( config.embedded === true ) {\n\t\t\tdom.viewport = Util.closest( revealElement, '.reveal-viewport' ) || revealElement;\n\t\t}\n\t\t// Full-page decks use the body as their viewport\n\t\telse {\n\t\t\tdom.viewport = document.body;\n\t\t\tdocument.documentElement.classList.add( 'reveal-full-page' );\n\t\t}\n\n\t\tdom.viewport.classList.add( 'reveal-viewport' );\n\n\t}\n\n\t/**\n\t * Starts up reveal.js by binding input events and navigating\n\t * to the current URL deeplink if there is one.\n\t */\n\tfunction start() {\n\n\t\tready = true;\n\n\t\t// Remove slides hidden with data-visibility\n\t\tremoveHiddenSlides();\n\n\t\t// Make sure we've got all the DOM elements we need\n\t\tsetupDOM();\n\n\t\t// Listen to messages posted to this window\n\t\tsetupPostMessage();\n\n\t\t// Prevent the slides from being scrolled out of view\n\t\tsetupScrollPrevention();\n\n\t\t// Adds bindings for fullscreen mode\n\t\tsetupFullscreen();\n\n\t\t// Resets all vertical slides so that only the first is visible\n\t\tresetVerticalSlides();\n\n\t\t// Updates the presentation to match the current configuration values\n\t\tconfigure();\n\n\t\t// Read the initial hash\n\t\tlocation.readURL();\n\n\t\t// Create slide backgrounds\n\t\tbackgrounds.update( true );\n\n\t\t// Notify listeners that the presentation is ready but use a 1ms\n\t\t// timeout to ensure it's not fired synchronously after #initialize()\n\t\tsetTimeout( () => {\n\t\t\t// Enable transitions now that we're loaded\n\t\t\tdom.slides.classList.remove( 'no-transition' );\n\n\t\t\tdom.wrapper.classList.add( 'ready' );\n\n\t\t\tdispatchEvent({\n\t\t\t\ttype: 'ready',\n\t\t\t\tdata: {\n\t\t\t\t\tindexh,\n\t\t\t\t\tindexv,\n\t\t\t\t\tcurrentSlide\n\t\t\t\t}\n\t\t\t});\n\t\t}, 1 );\n\n\t\t// Special setup and config is required when printing to PDF\n\t\tif( print.isPrintingPDF() ) {\n\t\t\tremoveEventListeners();\n\n\t\t\t// The document needs to have loaded for the PDF layout\n\t\t\t// measurements to be accurate\n\t\t\tif( document.readyState === 'complete' ) {\n\t\t\t\tprint.setupPDF();\n\t\t\t}\n\t\t\telse {\n\t\t\t\twindow.addEventListener( 'load', () => {\n\t\t\t\t\tprint.setupPDF();\n\t\t\t\t} );\n\t\t\t}\n\t\t}\n\n\t}\n\n\t/**\n\t * Removes all slides with data-visibility=\"hidden\". This\n\t * is done right before the rest of the presentation is\n\t * initialized.\n\t *\n\t * If you want to show all hidden slides, initialize\n\t * reveal.js with showHiddenSlides set to true.\n\t */\n\tfunction removeHiddenSlides() {\n\n\t\tif( !config.showHiddenSlides ) {\n\t\t\tUtil.queryAll( dom.wrapper, 'section[data-visibility=\"hidden\"]' ).forEach( slide => {\n\t\t\t\tslide.parentNode.removeChild( slide );\n\t\t\t} );\n\t\t}\n\n\t}\n\n\t/**\n\t * Finds and stores references to DOM elements which are\n\t * required by the presentation. If a required element is\n\t * not found, it is created.\n\t */\n\tfunction setupDOM() {\n\n\t\t// Prevent transitions while we're loading\n\t\tdom.slides.classList.add( 'no-transition' );\n\n\t\tif( Device.isMobile ) {\n\t\t\tdom.wrapper.classList.add( 'no-hover' );\n\t\t}\n\t\telse {\n\t\t\tdom.wrapper.classList.remove( 'no-hover' );\n\t\t}\n\n\t\tbackgrounds.render();\n\t\tslideNumber.render();\n\t\tjumpToSlide.render();\n\t\tcontrols.render();\n\t\tprogress.render();\n\t\tnotes.render();\n\n\t\t// Overlay graphic which is displayed during the paused mode\n\t\tdom.pauseOverlay = Util.createSingletonNode( dom.wrapper, 'div', 'pause-overlay', config.controls ? '<button class=\"resume-button\">Resume presentation</button>' : null );\n\n\t\tdom.statusElement = createStatusElement();\n\n\t\tdom.wrapper.setAttribute( 'role', 'application' );\n\t}\n\n\t/**\n\t * Creates a hidden div with role aria-live to announce the\n\t * current slide content. Hide the div off-screen to make it\n\t * available only to Assistive Technologies.\n\t *\n\t * @return {HTMLElement}\n\t */\n\tfunction createStatusElement() {\n\n\t\tlet statusElement = dom.wrapper.querySelector( '.aria-status' );\n\t\tif( !statusElement ) {\n\t\t\tstatusElement = document.createElement( 'div' );\n\t\t\tstatusElement.style.position = 'absolute';\n\t\t\tstatusElement.style.height = '1px';\n\t\t\tstatusElement.style.width = '1px';\n\t\t\tstatusElement.style.overflow = 'hidden';\n\t\t\tstatusElement.style.clip = 'rect( 1px, 1px, 1px, 1px )';\n\t\t\tstatusElement.classList.add( 'aria-status' );\n\t\t\tstatusElement.setAttribute( 'aria-live', 'polite' );\n\t\t\tstatusElement.setAttribute( 'aria-atomic','true' );\n\t\t\tdom.wrapper.appendChild( statusElement );\n\t\t}\n\t\treturn statusElement;\n\n\t}\n\n\t/**\n\t * Announces the given text to screen readers.\n\t */\n\tfunction announceStatus( value ) {\n\n\t\tdom.statusElement.textContent = value;\n\n\t}\n\n\t/**\n\t * Converts the given HTML element into a string of text\n\t * that can be announced to a screen reader. Hidden\n\t * elements are excluded.\n\t */\n\tfunction getStatusText( node ) {\n\n\t\tlet text = '';\n\n\t\t// Text node\n\t\tif( node.nodeType === 3 ) {\n\t\t\ttext += node.textContent;\n\t\t}\n\t\t// Element node\n\t\telse if( node.nodeType === 1 ) {\n\n\t\t\tlet isAriaHidden = node.getAttribute( 'aria-hidden' );\n\t\t\tlet isDisplayHidden = window.getComputedStyle( node )['display'] === 'none';\n\t\t\tif( isAriaHidden !== 'true' && !isDisplayHidden ) {\n\n\t\t\t\tArray.from( node.childNodes ).forEach( child => {\n\t\t\t\t\ttext += getStatusText( child );\n\t\t\t\t} );\n\n\t\t\t}\n\n\t\t}\n\n\t\ttext = text.trim();\n\n\t\treturn text === '' ? '' : text + ' ';\n\n\t}\n\n\t/**\n\t * This is an unfortunate necessity. Some actions – such as\n\t * an input field being focused in an iframe or using the\n\t * keyboard to expand text selection beyond the bounds of\n\t * a slide – can trigger our content to be pushed out of view.\n\t * This scrolling can not be prevented by hiding overflow in\n\t * CSS (we already do) so we have to resort to repeatedly\n\t * checking if the slides have been offset :(\n\t */\n\tfunction setupScrollPrevention() {\n\n\t\tsetInterval( () => {\n\t\t\tif( dom.wrapper.scrollTop !== 0 || dom.wrapper.scrollLeft !== 0 ) {\n\t\t\t\tdom.wrapper.scrollTop = 0;\n\t\t\t\tdom.wrapper.scrollLeft = 0;\n\t\t\t}\n\t\t}, 1000 );\n\n\t}\n\n\t/**\n\t * After entering fullscreen we need to force a layout to\n\t * get our presentations to scale correctly. This behavior\n\t * is inconsistent across browsers but a force layout seems\n\t * to normalize it.\n\t */\n\tfunction setupFullscreen() {\n\n\t\tdocument.addEventListener( 'fullscreenchange', onFullscreenChange );\n\t\tdocument.addEventListener( 'webkitfullscreenchange', onFullscreenChange );\n\n\t}\n\n\t/**\n\t * Registers a listener to postMessage events, this makes it\n\t * possible to call all reveal.js API methods from another\n\t * window. For example:\n\t *\n\t * revealWindow.postMessage( JSON.stringify({\n\t *   method: 'slide',\n\t *   args: [ 2 ]\n\t * }), '*' );\n\t */\n\tfunction setupPostMessage() {\n\n\t\tif( config.postMessage ) {\n\t\t\twindow.addEventListener( 'message', onPostMessage, false );\n\t\t}\n\n\t}\n\n\t/**\n\t * Applies the configuration settings from the config\n\t * object. May be called multiple times.\n\t *\n\t * @param {object} options\n\t */\n\tfunction configure( options ) {\n\n\t\tconst oldConfig = { ...config }\n\n\t\t// New config options may be passed when this method\n\t\t// is invoked through the API after initialization\n\t\tif( typeof options === 'object' ) Util.extend( config, options );\n\n\t\t// Abort if reveal.js hasn't finished loading, config\n\t\t// changes will be applied automatically once ready\n\t\tif( Reveal.isReady() ===  false ) return;\n\n\t\tconst numberOfSlides = dom.wrapper.querySelectorAll( SLIDES_SELECTOR ).length;\n\n\t\t// The transition is added as a class on the .reveal element\n\t\tdom.wrapper.classList.remove( oldConfig.transition );\n\t\tdom.wrapper.classList.add( config.transition );\n\n\t\tdom.wrapper.setAttribute( 'data-transition-speed', config.transitionSpeed );\n\t\tdom.wrapper.setAttribute( 'data-background-transition', config.backgroundTransition );\n\n\t\t// Expose our configured slide dimensions as custom props\n\t\tdom.viewport.style.setProperty( '--slide-width', config.width + 'px' );\n\t\tdom.viewport.style.setProperty( '--slide-height', config.height + 'px' );\n\n\t\tif( config.shuffle ) {\n\t\t\tshuffle();\n\t\t}\n\n\t\tUtil.toggleClass( dom.wrapper, 'embedded', config.embedded );\n\t\tUtil.toggleClass( dom.wrapper, 'rtl', config.rtl );\n\t\tUtil.toggleClass( dom.wrapper, 'center', config.center );\n\n\t\t// Exit the paused mode if it was configured off\n\t\tif( config.pause === false ) {\n\t\t\tresume();\n\t\t}\n\n\t\t// Iframe link previews\n\t\tif( config.previewLinks ) {\n\t\t\tenablePreviewLinks();\n\t\t\tdisablePreviewLinks( '[data-preview-link=false]' );\n\t\t}\n\t\telse {\n\t\t\tdisablePreviewLinks();\n\t\t\tenablePreviewLinks( '[data-preview-link]:not([data-preview-link=false])' );\n\t\t}\n\n\t\t// Reset all changes made by auto-animations\n\t\tautoAnimate.reset();\n\n\t\t// Remove existing auto-slide controls\n\t\tif( autoSlidePlayer ) {\n\t\t\tautoSlidePlayer.destroy();\n\t\t\tautoSlidePlayer = null;\n\t\t}\n\n\t\t// Generate auto-slide controls if needed\n\t\tif( numberOfSlides > 1 && config.autoSlide && config.autoSlideStoppable ) {\n\t\t\tautoSlidePlayer = new Playback( dom.wrapper, () => {\n\t\t\t\treturn Math.min( Math.max( ( Date.now() - autoSlideStartTime ) / autoSlide, 0 ), 1 );\n\t\t\t} );\n\n\t\t\tautoSlidePlayer.on( 'click', onAutoSlidePlayerClick );\n\t\t\tautoSlidePaused = false;\n\t\t}\n\n\t\t// Add the navigation mode to the DOM so we can adjust styling\n\t\tif( config.navigationMode !== 'default' ) {\n\t\t\tdom.wrapper.setAttribute( 'data-navigation-mode', config.navigationMode );\n\t\t}\n\t\telse {\n\t\t\tdom.wrapper.removeAttribute( 'data-navigation-mode' );\n\t\t}\n\n\t\tnotes.configure( config, oldConfig );\n\t\tfocus.configure( config, oldConfig );\n\t\tpointer.configure( config, oldConfig );\n\t\tcontrols.configure( config, oldConfig );\n\t\tprogress.configure( config, oldConfig );\n\t\tkeyboard.configure( config, oldConfig );\n\t\tfragments.configure( config, oldConfig );\n\t\tslideNumber.configure( config, oldConfig );\n\n\t\tsync();\n\n\t}\n\n\t/**\n\t * Binds all event listeners.\n\t */\n\tfunction addEventListeners() {\n\n\t\teventsAreBound = true;\n\n\t\twindow.addEventListener( 'resize', onWindowResize, false );\n\n\t\tif( config.touch ) touch.bind();\n\t\tif( config.keyboard ) keyboard.bind();\n\t\tif( config.progress ) progress.bind();\n\t\tif( config.respondToHashChanges ) location.bind();\n\t\tcontrols.bind();\n\t\tfocus.bind();\n\n\t\tdom.slides.addEventListener( 'click', onSlidesClicked, false );\n\t\tdom.slides.addEventListener( 'transitionend', onTransitionEnd, false );\n\t\tdom.pauseOverlay.addEventListener( 'click', resume, false );\n\n\t\tif( config.focusBodyOnPageVisibilityChange ) {\n\t\t\tdocument.addEventListener( 'visibilitychange', onPageVisibilityChange, false );\n\t\t}\n\n\t}\n\n\t/**\n\t * Unbinds all event listeners.\n\t */\n\tfunction removeEventListeners() {\n\n\t\teventsAreBound = false;\n\n\t\ttouch.unbind();\n\t\tfocus.unbind();\n\t\tkeyboard.unbind();\n\t\tcontrols.unbind();\n\t\tprogress.unbind();\n\t\tlocation.unbind();\n\n\t\twindow.removeEventListener( 'resize', onWindowResize, false );\n\n\t\tdom.slides.removeEventListener( 'click', onSlidesClicked, false );\n\t\tdom.slides.removeEventListener( 'transitionend', onTransitionEnd, false );\n\t\tdom.pauseOverlay.removeEventListener( 'click', resume, false );\n\n\t}\n\n\t/**\n\t * Uninitializes reveal.js by undoing changes made to the\n\t * DOM and removing all event listeners.\n\t */\n\tfunction destroy() {\n\n\t\tremoveEventListeners();\n\t\tcancelAutoSlide();\n\t\tdisablePreviewLinks();\n\n\t\t// Destroy controllers\n\t\tnotes.destroy();\n\t\tfocus.destroy();\n\t\tplugins.destroy();\n\t\tpointer.destroy();\n\t\tcontrols.destroy();\n\t\tprogress.destroy();\n\t\tbackgrounds.destroy();\n\t\tslideNumber.destroy();\n\t\tjumpToSlide.destroy();\n\n\t\t// Remove event listeners\n\t\tdocument.removeEventListener( 'fullscreenchange', onFullscreenChange );\n\t\tdocument.removeEventListener( 'webkitfullscreenchange', onFullscreenChange );\n\t\tdocument.removeEventListener( 'visibilitychange', onPageVisibilityChange, false );\n\t\twindow.removeEventListener( 'message', onPostMessage, false );\n\t\twindow.removeEventListener( 'load', layout, false );\n\n\t\t// Undo DOM changes\n\t\tif( dom.pauseOverlay ) dom.pauseOverlay.remove();\n\t\tif( dom.statusElement ) dom.statusElement.remove();\n\n\t\tdocument.documentElement.classList.remove( 'reveal-full-page' );\n\n\t\tdom.wrapper.classList.remove( 'ready', 'center', 'has-horizontal-slides', 'has-vertical-slides' );\n\t\tdom.wrapper.removeAttribute( 'data-transition-speed' );\n\t\tdom.wrapper.removeAttribute( 'data-background-transition' );\n\n\t\tdom.viewport.classList.remove( 'reveal-viewport' );\n\t\tdom.viewport.style.removeProperty( '--slide-width' );\n\t\tdom.viewport.style.removeProperty( '--slide-height' );\n\n\t\tdom.slides.style.removeProperty( 'width' );\n\t\tdom.slides.style.removeProperty( 'height' );\n\t\tdom.slides.style.removeProperty( 'zoom' );\n\t\tdom.slides.style.removeProperty( 'left' );\n\t\tdom.slides.style.removeProperty( 'top' );\n\t\tdom.slides.style.removeProperty( 'bottom' );\n\t\tdom.slides.style.removeProperty( 'right' );\n\t\tdom.slides.style.removeProperty( 'transform' );\n\n\t\tArray.from( dom.wrapper.querySelectorAll( SLIDES_SELECTOR ) ).forEach( slide => {\n\t\t\tslide.style.removeProperty( 'display' );\n\t\t\tslide.style.removeProperty( 'top' );\n\t\t\tslide.removeAttribute( 'hidden' );\n\t\t\tslide.removeAttribute( 'aria-hidden' );\n\t\t} );\n\n\t}\n\n\t/**\n\t * Adds a listener to one of our custom reveal.js events,\n\t * like slidechanged.\n\t */\n\tfunction on( type, listener, useCapture ) {\n\n\t\trevealElement.addEventListener( type, listener, useCapture );\n\n\t}\n\n\t/**\n\t * Unsubscribes from a reveal.js event.\n\t */\n\tfunction off( type, listener, useCapture ) {\n\n\t\trevealElement.removeEventListener( type, listener, useCapture );\n\n\t}\n\n\t/**\n\t * Applies CSS transforms to the slides container. The container\n\t * is transformed from two separate sources: layout and the overview\n\t * mode.\n\t *\n\t * @param {object} transforms\n\t */\n\tfunction transformSlides( transforms ) {\n\n\t\t// Pick up new transforms from arguments\n\t\tif( typeof transforms.layout === 'string' ) slidesTransform.layout = transforms.layout;\n\t\tif( typeof transforms.overview === 'string' ) slidesTransform.overview = transforms.overview;\n\n\t\t// Apply the transforms to the slides container\n\t\tif( slidesTransform.layout ) {\n\t\t\tUtil.transformElement( dom.slides, slidesTransform.layout + ' ' + slidesTransform.overview );\n\t\t}\n\t\telse {\n\t\t\tUtil.transformElement( dom.slides, slidesTransform.overview );\n\t\t}\n\n\t}\n\n\t/**\n\t * Dispatches an event of the specified type from the\n\t * reveal DOM element.\n\t */\n\tfunction dispatchEvent({ target=dom.wrapper, type, data, bubbles=true }) {\n\n\t\tlet event = document.createEvent( 'HTMLEvents', 1, 2 );\n\t\tevent.initEvent( type, bubbles, true );\n\t\tUtil.extend( event, data );\n\t\ttarget.dispatchEvent( event );\n\n\t\tif( target === dom.wrapper ) {\n\t\t\t// If we're in an iframe, post each reveal.js event to the\n\t\t\t// parent window. Used by the notes plugin\n\t\t\tdispatchPostMessage( type );\n\t\t}\n\n\t\treturn event;\n\n\t}\n\n\t/**\n\t * Dispatched a postMessage of the given type from our window.\n\t */\n\tfunction dispatchPostMessage( type, data ) {\n\n\t\tif( config.postMessageEvents && window.parent !== window.self ) {\n\t\t\tlet message = {\n\t\t\t\tnamespace: 'reveal',\n\t\t\t\teventName: type,\n\t\t\t\tstate: getState()\n\t\t\t};\n\n\t\t\tUtil.extend( message, data );\n\n\t\t\twindow.parent.postMessage( JSON.stringify( message ), '*' );\n\t\t}\n\n\t}\n\n\t/**\n\t * Bind preview frame links.\n\t *\n\t * @param {string} [selector=a] - selector for anchors\n\t */\n\tfunction enablePreviewLinks( selector = 'a' ) {\n\n\t\tArray.from( dom.wrapper.querySelectorAll( selector ) ).forEach( element => {\n\t\t\tif( /^(http|www)/gi.test( element.getAttribute( 'href' ) ) ) {\n\t\t\t\telement.addEventListener( 'click', onPreviewLinkClicked, false );\n\t\t\t}\n\t\t} );\n\n\t}\n\n\t/**\n\t * Unbind preview frame links.\n\t */\n\tfunction disablePreviewLinks( selector = 'a' ) {\n\n\t\tArray.from( dom.wrapper.querySelectorAll( selector ) ).forEach( element => {\n\t\t\tif( /^(http|www)/gi.test( element.getAttribute( 'href' ) ) ) {\n\t\t\t\telement.removeEventListener( 'click', onPreviewLinkClicked, false );\n\t\t\t}\n\t\t} );\n\n\t}\n\n\t/**\n\t * Opens a preview window for the target URL.\n\t *\n\t * @param {string} url - url for preview iframe src\n\t */\n\tfunction showPreview( url ) {\n\n\t\tcloseOverlay();\n\n\t\tdom.overlay = document.createElement( 'div' );\n\t\tdom.overlay.classList.add( 'overlay' );\n\t\tdom.overlay.classList.add( 'overlay-preview' );\n\t\tdom.wrapper.appendChild( dom.overlay );\n\n\t\tdom.overlay.innerHTML =\n\t\t\t`<header>\n\t\t\t\t<a class=\"close\" href=\"#\"><span class=\"icon\"></span></a>\n\t\t\t\t<a class=\"external\" href=\"${url}\" target=\"_blank\"><span class=\"icon\"></span></a>\n\t\t\t</header>\n\t\t\t<div class=\"spinner\"></div>\n\t\t\t<div class=\"viewport\">\n\t\t\t\t<iframe src=\"${url}\"></iframe>\n\t\t\t\t<small class=\"viewport-inner\">\n\t\t\t\t\t<span class=\"x-frame-error\">Unable to load iframe. This is likely due to the site's policy (x-frame-options).</span>\n\t\t\t\t</small>\n\t\t\t</div>`;\n\n\t\tdom.overlay.querySelector( 'iframe' ).addEventListener( 'load', event => {\n\t\t\tdom.overlay.classList.add( 'loaded' );\n\t\t}, false );\n\n\t\tdom.overlay.querySelector( '.close' ).addEventListener( 'click', event => {\n\t\t\tcloseOverlay();\n\t\t\tevent.preventDefault();\n\t\t}, false );\n\n\t\tdom.overlay.querySelector( '.external' ).addEventListener( 'click', event => {\n\t\t\tcloseOverlay();\n\t\t}, false );\n\n\t}\n\n\t/**\n\t * Open or close help overlay window.\n\t *\n\t * @param {Boolean} [override] Flag which overrides the\n\t * toggle logic and forcibly sets the desired state. True means\n\t * help is open, false means it's closed.\n\t */\n\tfunction toggleHelp( override ){\n\n\t\tif( typeof override === 'boolean' ) {\n\t\t\toverride ? showHelp() : closeOverlay();\n\t\t}\n\t\telse {\n\t\t\tif( dom.overlay ) {\n\t\t\t\tcloseOverlay();\n\t\t\t}\n\t\t\telse {\n\t\t\t\tshowHelp();\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Opens an overlay window with help material.\n\t */\n\tfunction showHelp() {\n\n\t\tif( config.help ) {\n\n\t\t\tcloseOverlay();\n\n\t\t\tdom.overlay = document.createElement( 'div' );\n\t\t\tdom.overlay.classList.add( 'overlay' );\n\t\t\tdom.overlay.classList.add( 'overlay-help' );\n\t\t\tdom.wrapper.appendChild( dom.overlay );\n\n\t\t\tlet html = '<p class=\"title\">Keyboard Shortcuts</p><br/>';\n\n\t\t\tlet shortcuts = keyboard.getShortcuts(),\n\t\t\t\tbindings = keyboard.getBindings();\n\n\t\t\thtml += '<table><th>KEY</th><th>ACTION</th>';\n\t\t\tfor( let key in shortcuts ) {\n\t\t\t\thtml += `<tr><td>${key}</td><td>${shortcuts[ key ]}</td></tr>`;\n\t\t\t}\n\n\t\t\t// Add custom key bindings that have associated descriptions\n\t\t\tfor( let binding in bindings ) {\n\t\t\t\tif( bindings[binding].key && bindings[binding].description ) {\n\t\t\t\t\thtml += `<tr><td>${bindings[binding].key}</td><td>${bindings[binding].description}</td></tr>`;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\thtml += '</table>';\n\n\t\t\tdom.overlay.innerHTML = `\n\t\t\t\t<header>\n\t\t\t\t\t<a class=\"close\" href=\"#\"><span class=\"icon\"></span></a>\n\t\t\t\t</header>\n\t\t\t\t<div class=\"viewport\">\n\t\t\t\t\t<div class=\"viewport-inner\">${html}</div>\n\t\t\t\t</div>\n\t\t\t`;\n\n\t\t\tdom.overlay.querySelector( '.close' ).addEventListener( 'click', event => {\n\t\t\t\tcloseOverlay();\n\t\t\t\tevent.preventDefault();\n\t\t\t}, false );\n\n\t\t}\n\n\t}\n\n\t/**\n\t * Closes any currently open overlay.\n\t */\n\tfunction closeOverlay() {\n\n\t\tif( dom.overlay ) {\n\t\t\tdom.overlay.parentNode.removeChild( dom.overlay );\n\t\t\tdom.overlay = null;\n\t\t\treturn true;\n\t\t}\n\n\t\treturn false;\n\n\t}\n\n\t/**\n\t * Applies JavaScript-controlled layout rules to the\n\t * presentation.\n\t */\n\tfunction layout() {\n\n\t\tif( dom.wrapper && !print.isPrintingPDF() ) {\n\n\t\t\tif( !config.disableLayout ) {\n\n\t\t\t\t// On some mobile devices '100vh' is taller than the visible\n\t\t\t\t// viewport which leads to part of the presentation being\n\t\t\t\t// cut off. To work around this we define our own '--vh' custom\n\t\t\t\t// property where 100x adds up to the correct height.\n\t\t\t\t//\n\t\t\t\t// https://css-tricks.com/the-trick-to-viewport-units-on-mobile/\n\t\t\t\tif( Device.isMobile && !config.embedded ) {\n\t\t\t\t\tdocument.documentElement.style.setProperty( '--vh', ( window.innerHeight * 0.01 ) + 'px' );\n\t\t\t\t}\n\n\t\t\t\tconst size = getComputedSlideSize();\n\n\t\t\t\tconst oldScale = scale;\n\n\t\t\t\t// Layout the contents of the slides\n\t\t\t\tlayoutSlideContents( config.width, config.height );\n\n\t\t\t\tdom.slides.style.width = size.width + 'px';\n\t\t\t\tdom.slides.style.height = size.height + 'px';\n\n\t\t\t\t// Determine scale of content to fit within available space\n\t\t\t\tscale = Math.min( size.presentationWidth / size.width, size.presentationHeight / size.height );\n\n\t\t\t\t// Respect max/min scale settings\n\t\t\t\tscale = Math.max( scale, config.minScale );\n\t\t\t\tscale = Math.min( scale, config.maxScale );\n\n\t\t\t\t// Don't apply any scaling styles if scale is 1\n\t\t\t\tif( scale === 1 ) {\n\t\t\t\t\tdom.slides.style.zoom = '';\n\t\t\t\t\tdom.slides.style.left = '';\n\t\t\t\t\tdom.slides.style.top = '';\n\t\t\t\t\tdom.slides.style.bottom = '';\n\t\t\t\t\tdom.slides.style.right = '';\n\t\t\t\t\ttransformSlides( { layout: '' } );\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tdom.slides.style.zoom = '';\n\t\t\t\t\tdom.slides.style.left = '50%';\n\t\t\t\t\tdom.slides.style.top = '50%';\n\t\t\t\t\tdom.slides.style.bottom = 'auto';\n\t\t\t\t\tdom.slides.style.right = 'auto';\n\t\t\t\t\ttransformSlides( { layout: 'translate(-50%, -50%) scale('+ scale +')' } );\n\t\t\t\t}\n\n\t\t\t\t// Select all slides, vertical and horizontal\n\t\t\t\tconst slides = Array.from( dom.wrapper.querySelectorAll( SLIDES_SELECTOR ) );\n\n\t\t\t\tfor( let i = 0, len = slides.length; i < len; i++ ) {\n\t\t\t\t\tconst slide = slides[ i ];\n\n\t\t\t\t\t// Don't bother updating invisible slides\n\t\t\t\t\tif( slide.style.display === 'none' ) {\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\n\t\t\t\t\tif( config.center || slide.classList.contains( 'center' ) ) {\n\t\t\t\t\t\t// Vertical stacks are not centred since their section\n\t\t\t\t\t\t// children will be\n\t\t\t\t\t\tif( slide.classList.contains( 'stack' ) ) {\n\t\t\t\t\t\t\tslide.style.top = 0;\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\tslide.style.top = Math.max( ( size.height - slide.scrollHeight ) / 2, 0 ) + 'px';\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tslide.style.top = '';\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tif( oldScale !== scale ) {\n\t\t\t\t\tdispatchEvent({\n\t\t\t\t\t\ttype: 'resize',\n\t\t\t\t\t\tdata: {\n\t\t\t\t\t\t\toldScale,\n\t\t\t\t\t\t\tscale,\n\t\t\t\t\t\t\tsize\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tdom.viewport.style.setProperty( '--slide-scale', scale );\n\n\t\t\tprogress.update();\n\t\t\tbackgrounds.updateParallax();\n\n\t\t\tif( overview.isActive() ) {\n\t\t\t\toverview.update();\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\t/**\n\t * Applies layout logic to the contents of all slides in\n\t * the presentation.\n\t *\n\t * @param {string|number} width\n\t * @param {string|number} height\n\t */\n\tfunction layoutSlideContents( width, height ) {\n\n\t\t// Handle sizing of elements with the 'r-stretch' class\n\t\tUtil.queryAll( dom.slides, 'section > .stretch, section > .r-stretch' ).forEach( element => {\n\n\t\t\t// Determine how much vertical space we can use\n\t\t\tlet remainingHeight = Util.getRemainingHeight( element, height );\n\n\t\t\t// Consider the aspect ratio of media elements\n\t\t\tif( /(img|video)/gi.test( element.nodeName ) ) {\n\t\t\t\tconst nw = element.naturalWidth || element.videoWidth,\n\t\t\t\t\t  nh = element.naturalHeight || element.videoHeight;\n\n\t\t\t\tconst es = Math.min( width / nw, remainingHeight / nh );\n\n\t\t\t\telement.style.width = ( nw * es ) + 'px';\n\t\t\t\telement.style.height = ( nh * es ) + 'px';\n\n\t\t\t}\n\t\t\telse {\n\t\t\t\telement.style.width = width + 'px';\n\t\t\t\telement.style.height = remainingHeight + 'px';\n\t\t\t}\n\n\t\t} );\n\n\t}\n\n\t/**\n\t * Calculates the computed pixel size of our slides. These\n\t * values are based on the width and height configuration\n\t * options.\n\t *\n\t * @param {number} [presentationWidth=dom.wrapper.offsetWidth]\n\t * @param {number} [presentationHeight=dom.wrapper.offsetHeight]\n\t */\n\tfunction getComputedSlideSize( presentationWidth, presentationHeight ) {\n\t\tlet width = config.width;\n\t\tlet height = config.height;\n\n\t\tif( config.disableLayout ) {\n\t\t\twidth = dom.slides.offsetWidth;\n\t\t\theight = dom.slides.offsetHeight;\n\t\t}\n\n\t\tconst size = {\n\t\t\t// Slide size\n\t\t\twidth: width,\n\t\t\theight: height,\n\n\t\t\t// Presentation size\n\t\t\tpresentationWidth: presentationWidth || dom.wrapper.offsetWidth,\n\t\t\tpresentationHeight: presentationHeight || dom.wrapper.offsetHeight\n\t\t};\n\n\t\t// Reduce available space by margin\n\t\tsize.presentationWidth -= ( size.presentationWidth * config.margin );\n\t\tsize.presentationHeight -= ( size.presentationHeight * config.margin );\n\n\t\t// Slide width may be a percentage of available width\n\t\tif( typeof size.width === 'string' && /%$/.test( size.width ) ) {\n\t\t\tsize.width = parseInt( size.width, 10 ) / 100 * size.presentationWidth;\n\t\t}\n\n\t\t// Slide height may be a percentage of available height\n\t\tif( typeof size.height === 'string' && /%$/.test( size.height ) ) {\n\t\t\tsize.height = parseInt( size.height, 10 ) / 100 * size.presentationHeight;\n\t\t}\n\n\t\treturn size;\n\n\t}\n\n\t/**\n\t * Stores the vertical index of a stack so that the same\n\t * vertical slide can be selected when navigating to and\n\t * from the stack.\n\t *\n\t * @param {HTMLElement} stack The vertical stack element\n\t * @param {string|number} [v=0] Index to memorize\n\t */\n\tfunction setPreviousVerticalIndex( stack, v ) {\n\n\t\tif( typeof stack === 'object' && typeof stack.setAttribute === 'function' ) {\n\t\t\tstack.setAttribute( 'data-previous-indexv', v || 0 );\n\t\t}\n\n\t}\n\n\t/**\n\t * Retrieves the vertical index which was stored using\n\t * #setPreviousVerticalIndex() or 0 if no previous index\n\t * exists.\n\t *\n\t * @param {HTMLElement} stack The vertical stack element\n\t */\n\tfunction getPreviousVerticalIndex( stack ) {\n\n\t\tif( typeof stack === 'object' && typeof stack.setAttribute === 'function' && stack.classList.contains( 'stack' ) ) {\n\t\t\t// Prefer manually defined start-indexv\n\t\t\tconst attributeName = stack.hasAttribute( 'data-start-indexv' ) ? 'data-start-indexv' : 'data-previous-indexv';\n\n\t\t\treturn parseInt( stack.getAttribute( attributeName ) || 0, 10 );\n\t\t}\n\n\t\treturn 0;\n\n\t}\n\n\t/**\n\t * Checks if the current or specified slide is vertical\n\t * (nested within another slide).\n\t *\n\t * @param {HTMLElement} [slide=currentSlide] The slide to check\n\t * orientation of\n\t * @return {Boolean}\n\t */\n\tfunction isVerticalSlide( slide = currentSlide ) {\n\n\t\treturn slide && slide.parentNode && !!slide.parentNode.nodeName.match( /section/i );\n\n\t}\n\n\t/**\n\t * Returns true if we're on the last slide in the current\n\t * vertical stack.\n\t */\n\tfunction isLastVerticalSlide() {\n\n\t\tif( currentSlide && isVerticalSlide( currentSlide ) ) {\n\t\t\t// Does this slide have a next sibling?\n\t\t\tif( currentSlide.nextElementSibling ) return false;\n\n\t\t\treturn true;\n\t\t}\n\n\t\treturn false;\n\n\t}\n\n\t/**\n\t * Returns true if we're currently on the first slide in\n\t * the presentation.\n\t */\n\tfunction isFirstSlide() {\n\n\t\treturn indexh === 0 && indexv === 0;\n\n\t}\n\n\t/**\n\t * Returns true if we're currently on the last slide in\n\t * the presenation. If the last slide is a stack, we only\n\t * consider this the last slide if it's at the end of the\n\t * stack.\n\t */\n\tfunction isLastSlide() {\n\n\t\tif( currentSlide ) {\n\t\t\t// Does this slide have a next sibling?\n\t\t\tif( currentSlide.nextElementSibling ) return false;\n\n\t\t\t// If it's vertical, does its parent have a next sibling?\n\t\t\tif( isVerticalSlide( currentSlide ) && currentSlide.parentNode.nextElementSibling ) return false;\n\n\t\t\treturn true;\n\t\t}\n\n\t\treturn false;\n\n\t}\n\n\t/**\n\t * Enters the paused mode which fades everything on screen to\n\t * black.\n\t */\n\tfunction pause() {\n\n\t\tif( config.pause ) {\n\t\t\tconst wasPaused = dom.wrapper.classList.contains( 'paused' );\n\n\t\t\tcancelAutoSlide();\n\t\t\tdom.wrapper.classList.add( 'paused' );\n\n\t\t\tif( wasPaused === false ) {\n\t\t\t\tdispatchEvent({ type: 'paused' });\n\t\t\t}\n\t\t}\n\n\t}\n\n\t/**\n\t * Exits from the paused mode.\n\t */\n\tfunction resume() {\n\n\t\tconst wasPaused = dom.wrapper.classList.contains( 'paused' );\n\t\tdom.wrapper.classList.remove( 'paused' );\n\n\t\tcueAutoSlide();\n\n\t\tif( wasPaused ) {\n\t\t\tdispatchEvent({ type: 'resumed' });\n\t\t}\n\n\t}\n\n\t/**\n\t * Toggles the paused mode on and off.\n\t */\n\tfunction togglePause( override ) {\n\n\t\tif( typeof override === 'boolean' ) {\n\t\t\toverride ? pause() : resume();\n\t\t}\n\t\telse {\n\t\t\tisPaused() ? resume() : pause();\n\t\t}\n\n\t}\n\n\t/**\n\t * Checks if we are currently in the paused mode.\n\t *\n\t * @return {Boolean}\n\t */\n\tfunction isPaused() {\n\n\t\treturn dom.wrapper.classList.contains( 'paused' );\n\n\t}\n\n\t/**\n\t * Toggles visibility of the jump-to-slide UI.\n\t */\n\tfunction toggleJumpToSlide( override ) {\n\n\t\tif( typeof override === 'boolean' ) {\n\t\t\toverride ? jumpToSlide.show() : jumpToSlide.hide();\n\t\t}\n\t\telse {\n\t\t\tjumpToSlide.isVisible() ? jumpToSlide.hide() : jumpToSlide.show();\n\t\t}\n\n\t}\n\n\t/**\n\t * Toggles the auto slide mode on and off.\n\t *\n\t * @param {Boolean} [override] Flag which sets the desired state.\n\t * True means autoplay starts, false means it stops.\n\t */\n\n\tfunction toggleAutoSlide( override ) {\n\n\t\tif( typeof override === 'boolean' ) {\n\t\t\toverride ? resumeAutoSlide() : pauseAutoSlide();\n\t\t}\n\n\t\telse {\n\t\t\tautoSlidePaused ? resumeAutoSlide() : pauseAutoSlide();\n\t\t}\n\n\t}\n\n\t/**\n\t * Checks if the auto slide mode is currently on.\n\t *\n\t * @return {Boolean}\n\t */\n\tfunction isAutoSliding() {\n\n\t\treturn !!( autoSlide && !autoSlidePaused );\n\n\t}\n\n\t/**\n\t * Steps from the current point in the presentation to the\n\t * slide which matches the specified horizontal and vertical\n\t * indices.\n\t *\n\t * @param {number} [h=indexh] Horizontal index of the target slide\n\t * @param {number} [v=indexv] Vertical index of the target slide\n\t * @param {number} [f] Index of a fragment within the\n\t * target slide to activate\n\t * @param {number} [origin] Origin for use in multimaster environments\n\t */\n\tfunction slide( h, v, f, origin ) {\n\n\t\t// Dispatch an event before the slide\n\t\tconst slidechange = dispatchEvent({\n\t\t\ttype: 'beforeslidechange',\n\t\t\tdata: {\n\t\t\t\tindexh: h === undefined ? indexh : h,\n\t\t\t\tindexv: v === undefined ? indexv : v,\n\t\t\t\torigin\n\t\t\t}\n\t\t});\n\n\t\t// Abort if this slide change was prevented by an event listener\n\t\tif( slidechange.defaultPrevented ) return;\n\n\t\t// Remember where we were at before\n\t\tpreviousSlide = currentSlide;\n\n\t\t// Query all horizontal slides in the deck\n\t\tconst horizontalSlides = dom.wrapper.querySelectorAll( HORIZONTAL_SLIDES_SELECTOR );\n\n\t\t// Abort if there are no slides\n\t\tif( horizontalSlides.length === 0 ) return;\n\n\t\t// If no vertical index is specified and the upcoming slide is a\n\t\t// stack, resume at its previous vertical index\n\t\tif( v === undefined && !overview.isActive() ) {\n\t\t\tv = getPreviousVerticalIndex( horizontalSlides[ h ] );\n\t\t}\n\n\t\t// If we were on a vertical stack, remember what vertical index\n\t\t// it was on so we can resume at the same position when returning\n\t\tif( previousSlide && previousSlide.parentNode && previousSlide.parentNode.classList.contains( 'stack' ) ) {\n\t\t\tsetPreviousVerticalIndex( previousSlide.parentNode, indexv );\n\t\t}\n\n\t\t// Remember the state before this slide\n\t\tconst stateBefore = state.concat();\n\n\t\t// Reset the state array\n\t\tstate.length = 0;\n\n\t\tlet indexhBefore = indexh || 0,\n\t\t\tindexvBefore = indexv || 0;\n\n\t\t// Activate and transition to the new slide\n\t\tindexh = updateSlides( HORIZONTAL_SLIDES_SELECTOR, h === undefined ? indexh : h );\n\t\tindexv = updateSlides( VERTICAL_SLIDES_SELECTOR, v === undefined ? indexv : v );\n\n\t\t// Dispatch an event if the slide changed\n\t\tlet slideChanged = ( indexh !== indexhBefore || indexv !== indexvBefore );\n\n\t\t// Ensure that the previous slide is never the same as the current\n\t\tif( !slideChanged ) previousSlide = null;\n\n\t\t// Find the current horizontal slide and any possible vertical slides\n\t\t// within it\n\t\tlet currentHorizontalSlide = horizontalSlides[ indexh ],\n\t\t\tcurrentVerticalSlides = currentHorizontalSlide.querySelectorAll( 'section' );\n\n\t\t// Store references to the previous and current slides\n\t\tcurrentSlide = currentVerticalSlides[ indexv ] || currentHorizontalSlide;\n\n\t\tlet autoAnimateTransition = false;\n\n\t\t// Detect if we're moving between two auto-animated slides\n\t\tif( slideChanged && previousSlide && currentSlide && !overview.isActive() ) {\n\n\t\t\t// If this is an auto-animated transition, we disable the\n\t\t\t// regular slide transition\n\t\t\t//\n\t\t\t// Note 20-03-2020:\n\t\t\t// This needs to happen before we update slide visibility,\n\t\t\t// otherwise transitions will still run in Safari.\n\t\t\tif( previousSlide.hasAttribute( 'data-auto-animate' ) && currentSlide.hasAttribute( 'data-auto-animate' )\n\t\t\t\t\t&& previousSlide.getAttribute( 'data-auto-animate-id' ) === currentSlide.getAttribute( 'data-auto-animate-id' )\n\t\t\t\t\t&& !( ( indexh > indexhBefore || indexv > indexvBefore ) ? currentSlide : previousSlide ).hasAttribute( 'data-auto-animate-restart' ) ) {\n\n\t\t\t\tautoAnimateTransition = true;\n\t\t\t\tdom.slides.classList.add( 'disable-slide-transitions' );\n\t\t\t}\n\n\t\t\ttransition = 'running';\n\n\t\t}\n\n\t\t// Update the visibility of slides now that the indices have changed\n\t\tupdateSlidesVisibility();\n\n\t\tlayout();\n\n\t\t// Update the overview if it's currently active\n\t\tif( overview.isActive() ) {\n\t\t\toverview.update();\n\t\t}\n\n\t\t// Show fragment, if specified\n\t\tif( typeof f !== 'undefined' ) {\n\t\t\tfragments.goto( f );\n\t\t}\n\n\t\t// Solves an edge case where the previous slide maintains the\n\t\t// 'present' class when navigating between adjacent vertical\n\t\t// stacks\n\t\tif( previousSlide && previousSlide !== currentSlide ) {\n\t\t\tpreviousSlide.classList.remove( 'present' );\n\t\t\tpreviousSlide.setAttribute( 'aria-hidden', 'true' );\n\n\t\t\t// Reset all slides upon navigate to home\n\t\t\tif( isFirstSlide() ) {\n\t\t\t\t// Launch async task\n\t\t\t\tsetTimeout( () => {\n\t\t\t\t\tgetVerticalStacks().forEach( slide => {\n\t\t\t\t\t\tsetPreviousVerticalIndex( slide, 0 );\n\t\t\t\t\t} );\n\t\t\t\t}, 0 );\n\t\t\t}\n\t\t}\n\n\t\t// Apply the new state\n\t\tstateLoop: for( let i = 0, len = state.length; i < len; i++ ) {\n\t\t\t// Check if this state existed on the previous slide. If it\n\t\t\t// did, we will avoid adding it repeatedly\n\t\t\tfor( let j = 0; j < stateBefore.length; j++ ) {\n\t\t\t\tif( stateBefore[j] === state[i] ) {\n\t\t\t\t\tstateBefore.splice( j, 1 );\n\t\t\t\t\tcontinue stateLoop;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tdom.viewport.classList.add( state[i] );\n\n\t\t\t// Dispatch custom event matching the state's name\n\t\t\tdispatchEvent({ type: state[i] });\n\t\t}\n\n\t\t// Clean up the remains of the previous state\n\t\twhile( stateBefore.length ) {\n\t\t\tdom.viewport.classList.remove( stateBefore.pop() );\n\t\t}\n\n\t\tif( slideChanged ) {\n\t\t\tdispatchEvent({\n\t\t\t\ttype: 'slidechanged',\n\t\t\t\tdata: {\n\t\t\t\t\tindexh,\n\t\t\t\t\tindexv,\n\t\t\t\t\tpreviousSlide,\n\t\t\t\t\tcurrentSlide,\n\t\t\t\t\torigin\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\n\t\t// Handle embedded content\n\t\tif( slideChanged || !previousSlide ) {\n\t\t\tslideContent.stopEmbeddedContent( previousSlide );\n\t\t\tslideContent.startEmbeddedContent( currentSlide );\n\t\t}\n\n\t\t// Announce the current slide contents to screen readers\n\t\t// Use animation frame to prevent getComputedStyle in getStatusText\n\t\t// from triggering layout mid-frame\n\t\trequestAnimationFrame( () => {\n\t\t\tannounceStatus( getStatusText( currentSlide ) );\n\t\t});\n\n\t\tprogress.update();\n\t\tcontrols.update();\n\t\tnotes.update();\n\t\tbackgrounds.update();\n\t\tbackgrounds.updateParallax();\n\t\tslideNumber.update();\n\t\tfragments.update();\n\n\t\t// Update the URL hash\n\t\tlocation.writeURL();\n\n\t\tcueAutoSlide();\n\n\t\t// Auto-animation\n\t\tif( autoAnimateTransition ) {\n\n\t\t\tsetTimeout( () => {\n\t\t\t\tdom.slides.classList.remove( 'disable-slide-transitions' );\n\t\t\t}, 0 );\n\n\t\t\tif( config.autoAnimate ) {\n\t\t\t\t// Run the auto-animation between our slides\n\t\t\t\tautoAnimate.run( previousSlide, currentSlide );\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\t/**\n\t * Syncs the presentation with the current DOM. Useful\n\t * when new slides or control elements are added or when\n\t * the configuration has changed.\n\t */\n\tfunction sync() {\n\n\t\t// Subscribe to input\n\t\tremoveEventListeners();\n\t\taddEventListeners();\n\n\t\t// Force a layout to make sure the current config is accounted for\n\t\tlayout();\n\n\t\t// Reflect the current autoSlide value\n\t\tautoSlide = config.autoSlide;\n\n\t\t// Start auto-sliding if it's enabled\n\t\tcueAutoSlide();\n\n\t\t// Re-create all slide backgrounds\n\t\tbackgrounds.create();\n\n\t\t// Write the current hash to the URL\n\t\tlocation.writeURL();\n\n\t\tif( config.sortFragmentsOnSync === true ) {\n\t\t\tfragments.sortAll();\n\t\t}\n\n\t\tcontrols.update();\n\t\tprogress.update();\n\n\t\tupdateSlidesVisibility();\n\n\t\tnotes.update();\n\t\tnotes.updateVisibility();\n\t\tbackgrounds.update( true );\n\t\tslideNumber.update();\n\t\tslideContent.formatEmbeddedContent();\n\n\t\t// Start or stop embedded content depending on global config\n\t\tif( config.autoPlayMedia === false ) {\n\t\t\tslideContent.stopEmbeddedContent( currentSlide, { unloadIframes: false } );\n\t\t}\n\t\telse {\n\t\t\tslideContent.startEmbeddedContent( currentSlide );\n\t\t}\n\n\t\tif( overview.isActive() ) {\n\t\t\toverview.layout();\n\t\t}\n\n\t}\n\n\t/**\n\t * Updates reveal.js to keep in sync with new slide attributes. For\n\t * example, if you add a new `data-background-image` you can call\n\t * this to have reveal.js render the new background image.\n\t *\n\t * Similar to #sync() but more efficient when you only need to\n\t * refresh a specific slide.\n\t *\n\t * @param {HTMLElement} slide\n\t */\n\tfunction syncSlide( slide = currentSlide ) {\n\n\t\tbackgrounds.sync( slide );\n\t\tfragments.sync( slide );\n\n\t\tslideContent.load( slide );\n\n\t\tbackgrounds.update();\n\t\tnotes.update();\n\n\t}\n\n\t/**\n\t * Resets all vertical slides so that only the first\n\t * is visible.\n\t */\n\tfunction resetVerticalSlides() {\n\n\t\tgetHorizontalSlides().forEach( horizontalSlide => {\n\n\t\t\tUtil.queryAll( horizontalSlide, 'section' ).forEach( ( verticalSlide, y ) => {\n\n\t\t\t\tif( y > 0 ) {\n\t\t\t\t\tverticalSlide.classList.remove( 'present' );\n\t\t\t\t\tverticalSlide.classList.remove( 'past' );\n\t\t\t\t\tverticalSlide.classList.add( 'future' );\n\t\t\t\t\tverticalSlide.setAttribute( 'aria-hidden', 'true' );\n\t\t\t\t}\n\n\t\t\t} );\n\n\t\t} );\n\n\t}\n\n\t/**\n\t * Randomly shuffles all slides in the deck.\n\t */\n\tfunction shuffle( slides = getHorizontalSlides() ) {\n\n\t\tslides.forEach( ( slide, i ) => {\n\n\t\t\t// Insert the slide next to a randomly picked sibling slide\n\t\t\t// slide. This may cause the slide to insert before itself,\n\t\t\t// but that's not an issue.\n\t\t\tlet beforeSlide = slides[ Math.floor( Math.random() * slides.length ) ];\n\t\t\tif( beforeSlide.parentNode === slide.parentNode ) {\n\t\t\t\tslide.parentNode.insertBefore( slide, beforeSlide );\n\t\t\t}\n\n\t\t\t// Randomize the order of vertical slides (if there are any)\n\t\t\tlet verticalSlides = slide.querySelectorAll( 'section' );\n\t\t\tif( verticalSlides.length ) {\n\t\t\t\tshuffle( verticalSlides );\n\t\t\t}\n\n\t\t} );\n\n\t}\n\n\t/**\n\t * Updates one dimension of slides by showing the slide\n\t * with the specified index.\n\t *\n\t * @param {string} selector A CSS selector that will fetch\n\t * the group of slides we are working with\n\t * @param {number} index The index of the slide that should be\n\t * shown\n\t *\n\t * @return {number} The index of the slide that is now shown,\n\t * might differ from the passed in index if it was out of\n\t * bounds.\n\t */\n\tfunction updateSlides( selector, index ) {\n\n\t\t// Select all slides and convert the NodeList result to\n\t\t// an array\n\t\tlet slides = Util.queryAll( dom.wrapper, selector ),\n\t\t\tslidesLength = slides.length;\n\n\t\tlet printMode = print.isPrintingPDF();\n\t\tlet loopedForwards = false;\n\t\tlet loopedBackwards = false;\n\n\t\tif( slidesLength ) {\n\n\t\t\t// Should the index loop?\n\t\t\tif( config.loop ) {\n\t\t\t\tif( index >= slidesLength ) loopedForwards = true;\n\n\t\t\t\tindex %= slidesLength;\n\n\t\t\t\tif( index < 0 ) {\n\t\t\t\t\tindex = slidesLength + index;\n\t\t\t\t\tloopedBackwards = true;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Enforce max and minimum index bounds\n\t\t\tindex = Math.max( Math.min( index, slidesLength - 1 ), 0 );\n\n\t\t\tfor( let i = 0; i < slidesLength; i++ ) {\n\t\t\t\tlet element = slides[i];\n\n\t\t\t\tlet reverse = config.rtl && !isVerticalSlide( element );\n\n\t\t\t\t// Avoid .remove() with multiple args for IE11 support\n\t\t\t\telement.classList.remove( 'past' );\n\t\t\t\telement.classList.remove( 'present' );\n\t\t\t\telement.classList.remove( 'future' );\n\n\t\t\t\t// http://www.w3.org/html/wg/drafts/html/master/editing.html#the-hidden-attribute\n\t\t\t\telement.setAttribute( 'hidden', '' );\n\t\t\t\telement.setAttribute( 'aria-hidden', 'true' );\n\n\t\t\t\t// If this element contains vertical slides\n\t\t\t\tif( element.querySelector( 'section' ) ) {\n\t\t\t\t\telement.classList.add( 'stack' );\n\t\t\t\t}\n\n\t\t\t\t// If we're printing static slides, all slides are \"present\"\n\t\t\t\tif( printMode ) {\n\t\t\t\t\telement.classList.add( 'present' );\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tif( i < index ) {\n\t\t\t\t\t// Any element previous to index is given the 'past' class\n\t\t\t\t\telement.classList.add( reverse ? 'future' : 'past' );\n\n\t\t\t\t\tif( config.fragments ) {\n\t\t\t\t\t\t// Show all fragments in prior slides\n\t\t\t\t\t\tshowFragmentsIn( element );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse if( i > index ) {\n\t\t\t\t\t// Any element subsequent to index is given the 'future' class\n\t\t\t\t\telement.classList.add( reverse ? 'past' : 'future' );\n\n\t\t\t\t\tif( config.fragments ) {\n\t\t\t\t\t\t// Hide all fragments in future slides\n\t\t\t\t\t\thideFragmentsIn( element );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t// Update the visibility of fragments when a presentation loops\n\t\t\t\t// in either direction\n\t\t\t\telse if( i === index && config.fragments ) {\n\t\t\t\t\tif( loopedForwards ) {\n\t\t\t\t\t\thideFragmentsIn( element );\n\t\t\t\t\t}\n\t\t\t\t\telse if( loopedBackwards ) {\n\t\t\t\t\t\tshowFragmentsIn( element );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tlet slide = slides[index];\n\t\t\tlet wasPresent = slide.classList.contains( 'present' );\n\n\t\t\t// Mark the current slide as present\n\t\t\tslide.classList.add( 'present' );\n\t\t\tslide.removeAttribute( 'hidden' );\n\t\t\tslide.removeAttribute( 'aria-hidden' );\n\n\t\t\tif( !wasPresent ) {\n\t\t\t\t// Dispatch an event indicating the slide is now visible\n\t\t\t\tdispatchEvent({\n\t\t\t\t\ttarget: slide,\n\t\t\t\t\ttype: 'visible',\n\t\t\t\t\tbubbles: false\n\t\t\t\t});\n\t\t\t}\n\n\t\t\t// If this slide has a state associated with it, add it\n\t\t\t// onto the current state of the deck\n\t\t\tlet slideState = slide.getAttribute( 'data-state' );\n\t\t\tif( slideState ) {\n\t\t\t\tstate = state.concat( slideState.split( ' ' ) );\n\t\t\t}\n\n\t\t}\n\t\telse {\n\t\t\t// Since there are no slides we can't be anywhere beyond the\n\t\t\t// zeroth index\n\t\t\tindex = 0;\n\t\t}\n\n\t\treturn index;\n\n\t}\n\n\t/**\n\t * Shows all fragment elements within the given contaienr.\n\t */\n\tfunction showFragmentsIn( container ) {\n\n\t\tUtil.queryAll( container, '.fragment' ).forEach( fragment => {\n\t\t\tfragment.classList.add( 'visible' );\n\t\t\tfragment.classList.remove( 'current-fragment' );\n\t\t} );\n\n\t}\n\n\t/**\n\t * Hides all fragment elements within the given contaienr.\n\t */\n\tfunction hideFragmentsIn( container ) {\n\n\t\tUtil.queryAll( container, '.fragment.visible' ).forEach( fragment => {\n\t\t\tfragment.classList.remove( 'visible', 'current-fragment' );\n\t\t} );\n\n\t}\n\n\t/**\n\t * Optimization method; hide all slides that are far away\n\t * from the present slide.\n\t */\n\tfunction updateSlidesVisibility() {\n\n\t\t// Select all slides and convert the NodeList result to\n\t\t// an array\n\t\tlet horizontalSlides = getHorizontalSlides(),\n\t\t\thorizontalSlidesLength = horizontalSlides.length,\n\t\t\tdistanceX,\n\t\t\tdistanceY;\n\n\t\tif( horizontalSlidesLength && typeof indexh !== 'undefined' ) {\n\n\t\t\t// The number of steps away from the present slide that will\n\t\t\t// be visible\n\t\t\tlet viewDistance = overview.isActive() ? 10 : config.viewDistance;\n\n\t\t\t// Shorten the view distance on devices that typically have\n\t\t\t// less resources\n\t\t\tif( Device.isMobile ) {\n\t\t\t\tviewDistance = overview.isActive() ? 6 : config.mobileViewDistance;\n\t\t\t}\n\n\t\t\t// All slides need to be visible when exporting to PDF\n\t\t\tif( print.isPrintingPDF() ) {\n\t\t\t\tviewDistance = Number.MAX_VALUE;\n\t\t\t}\n\n\t\t\tfor( let x = 0; x < horizontalSlidesLength; x++ ) {\n\t\t\t\tlet horizontalSlide = horizontalSlides[x];\n\n\t\t\t\tlet verticalSlides = Util.queryAll( horizontalSlide, 'section' ),\n\t\t\t\t\tverticalSlidesLength = verticalSlides.length;\n\n\t\t\t\t// Determine how far away this slide is from the present\n\t\t\t\tdistanceX = Math.abs( ( indexh || 0 ) - x ) || 0;\n\n\t\t\t\t// If the presentation is looped, distance should measure\n\t\t\t\t// 1 between the first and last slides\n\t\t\t\tif( config.loop ) {\n\t\t\t\t\tdistanceX = Math.abs( ( ( indexh || 0 ) - x ) % ( horizontalSlidesLength - viewDistance ) ) || 0;\n\t\t\t\t}\n\n\t\t\t\t// Show the horizontal slide if it's within the view distance\n\t\t\t\tif( distanceX < viewDistance ) {\n\t\t\t\t\tslideContent.load( horizontalSlide );\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tslideContent.unload( horizontalSlide );\n\t\t\t\t}\n\n\t\t\t\tif( verticalSlidesLength ) {\n\n\t\t\t\t\tlet oy = getPreviousVerticalIndex( horizontalSlide );\n\n\t\t\t\t\tfor( let y = 0; y < verticalSlidesLength; y++ ) {\n\t\t\t\t\t\tlet verticalSlide = verticalSlides[y];\n\n\t\t\t\t\t\tdistanceY = x === ( indexh || 0 ) ? Math.abs( ( indexv || 0 ) - y ) : Math.abs( y - oy );\n\n\t\t\t\t\t\tif( distanceX + distanceY < viewDistance ) {\n\t\t\t\t\t\t\tslideContent.load( verticalSlide );\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\tslideContent.unload( verticalSlide );\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Flag if there are ANY vertical slides, anywhere in the deck\n\t\t\tif( hasVerticalSlides() ) {\n\t\t\t\tdom.wrapper.classList.add( 'has-vertical-slides' );\n\t\t\t}\n\t\t\telse {\n\t\t\t\tdom.wrapper.classList.remove( 'has-vertical-slides' );\n\t\t\t}\n\n\t\t\t// Flag if there are ANY horizontal slides, anywhere in the deck\n\t\t\tif( hasHorizontalSlides() ) {\n\t\t\t\tdom.wrapper.classList.add( 'has-horizontal-slides' );\n\t\t\t}\n\t\t\telse {\n\t\t\t\tdom.wrapper.classList.remove( 'has-horizontal-slides' );\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\t/**\n\t * Determine what available routes there are for navigation.\n\t *\n\t * @return {{left: boolean, right: boolean, up: boolean, down: boolean}}\n\t */\n\tfunction availableRoutes({ includeFragments = false } = {}) {\n\n\t\tlet horizontalSlides = dom.wrapper.querySelectorAll( HORIZONTAL_SLIDES_SELECTOR ),\n\t\t\tverticalSlides = dom.wrapper.querySelectorAll( VERTICAL_SLIDES_SELECTOR );\n\n\t\tlet routes = {\n\t\t\tleft: indexh > 0,\n\t\t\tright: indexh < horizontalSlides.length - 1,\n\t\t\tup: indexv > 0,\n\t\t\tdown: indexv < verticalSlides.length - 1\n\t\t};\n\n\t\t// Looped presentations can always be navigated as long as\n\t\t// there are slides available\n\t\tif( config.loop ) {\n\t\t\tif( horizontalSlides.length > 1 ) {\n\t\t\t\troutes.left = true;\n\t\t\t\troutes.right = true;\n\t\t\t}\n\n\t\t\tif( verticalSlides.length > 1 ) {\n\t\t\t\troutes.up = true;\n\t\t\t\troutes.down = true;\n\t\t\t}\n\t\t}\n\n\t\tif ( horizontalSlides.length > 1 && config.navigationMode === 'linear' ) {\n\t\t\troutes.right = routes.right || routes.down;\n\t\t\troutes.left = routes.left || routes.up;\n\t\t}\n\n\t\t// If includeFragments is set, a route will be considered\n\t\t// available if either a slid OR fragment is available in\n\t\t// the given direction\n\t\tif( includeFragments === true ) {\n\t\t\tlet fragmentRoutes = fragments.availableRoutes();\n\t\t\troutes.left = routes.left || fragmentRoutes.prev;\n\t\t\troutes.up = routes.up || fragmentRoutes.prev;\n\t\t\troutes.down = routes.down || fragmentRoutes.next;\n\t\t\troutes.right = routes.right || fragmentRoutes.next;\n\t\t}\n\n\t\t// Reverse horizontal controls for rtl\n\t\tif( config.rtl ) {\n\t\t\tlet left = routes.left;\n\t\t\troutes.left = routes.right;\n\t\t\troutes.right = left;\n\t\t}\n\n\t\treturn routes;\n\n\t}\n\n\t/**\n\t * Returns the number of past slides. This can be used as a global\n\t * flattened index for slides.\n\t *\n\t * @param {HTMLElement} [slide=currentSlide] The slide we're counting before\n\t *\n\t * @return {number} Past slide count\n\t */\n\tfunction getSlidePastCount( slide = currentSlide ) {\n\n\t\tlet horizontalSlides = getHorizontalSlides();\n\n\t\t// The number of past slides\n\t\tlet pastCount = 0;\n\n\t\t// Step through all slides and count the past ones\n\t\tmainLoop: for( let i = 0; i < horizontalSlides.length; i++ ) {\n\n\t\t\tlet horizontalSlide = horizontalSlides[i];\n\t\t\tlet verticalSlides = horizontalSlide.querySelectorAll( 'section' );\n\n\t\t\tfor( let j = 0; j < verticalSlides.length; j++ ) {\n\n\t\t\t\t// Stop as soon as we arrive at the present\n\t\t\t\tif( verticalSlides[j] === slide ) {\n\t\t\t\t\tbreak mainLoop;\n\t\t\t\t}\n\n\t\t\t\t// Don't count slides with the \"uncounted\" class\n\t\t\t\tif( verticalSlides[j].dataset.visibility !== 'uncounted' ) {\n\t\t\t\t\tpastCount++;\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// Stop as soon as we arrive at the present\n\t\t\tif( horizontalSlide === slide ) {\n\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\t// Don't count the wrapping section for vertical slides and\n\t\t\t// slides marked as uncounted\n\t\t\tif( horizontalSlide.classList.contains( 'stack' ) === false && horizontalSlide.dataset.visibility !== 'uncounted' ) {\n\t\t\t\tpastCount++;\n\t\t\t}\n\n\t\t}\n\n\t\treturn pastCount;\n\n\t}\n\n\t/**\n\t * Returns a value ranging from 0-1 that represents\n\t * how far into the presentation we have navigated.\n\t *\n\t * @return {number}\n\t */\n\tfunction getProgress() {\n\n\t\t// The number of past and total slides\n\t\tlet totalCount = getTotalSlides();\n\t\tlet pastCount = getSlidePastCount();\n\n\t\tif( currentSlide ) {\n\n\t\t\tlet allFragments = currentSlide.querySelectorAll( '.fragment' );\n\n\t\t\t// If there are fragments in the current slide those should be\n\t\t\t// accounted for in the progress.\n\t\t\tif( allFragments.length > 0 ) {\n\t\t\t\tlet visibleFragments = currentSlide.querySelectorAll( '.fragment.visible' );\n\n\t\t\t\t// This value represents how big a portion of the slide progress\n\t\t\t\t// that is made up by its fragments (0-1)\n\t\t\t\tlet fragmentWeight = 0.9;\n\n\t\t\t\t// Add fragment progress to the past slide count\n\t\t\t\tpastCount += ( visibleFragments.length / allFragments.length ) * fragmentWeight;\n\t\t\t}\n\n\t\t}\n\n\t\treturn Math.min( pastCount / ( totalCount - 1 ), 1 );\n\n\t}\n\n\t/**\n\t * Retrieves the h/v location and fragment of the current,\n\t * or specified, slide.\n\t *\n\t * @param {HTMLElement} [slide] If specified, the returned\n\t * index will be for this slide rather than the currently\n\t * active one\n\t *\n\t * @return {{h: number, v: number, f: number}}\n\t */\n\tfunction getIndices( slide ) {\n\n\t\t// By default, return the current indices\n\t\tlet h = indexh,\n\t\t\tv = indexv,\n\t\t\tf;\n\n\t\t// If a slide is specified, return the indices of that slide\n\t\tif( slide ) {\n\t\t\tlet isVertical = isVerticalSlide( slide );\n\t\t\tlet slideh = isVertical ? slide.parentNode : slide;\n\n\t\t\t// Select all horizontal slides\n\t\t\tlet horizontalSlides = getHorizontalSlides();\n\n\t\t\t// Now that we know which the horizontal slide is, get its index\n\t\t\th = Math.max( horizontalSlides.indexOf( slideh ), 0 );\n\n\t\t\t// Assume we're not vertical\n\t\t\tv = undefined;\n\n\t\t\t// If this is a vertical slide, grab the vertical index\n\t\t\tif( isVertical ) {\n\t\t\t\tv = Math.max( Util.queryAll( slide.parentNode, 'section' ).indexOf( slide ), 0 );\n\t\t\t}\n\t\t}\n\n\t\tif( !slide && currentSlide ) {\n\t\t\tlet hasFragments = currentSlide.querySelectorAll( '.fragment' ).length > 0;\n\t\t\tif( hasFragments ) {\n\t\t\t\tlet currentFragment = currentSlide.querySelector( '.current-fragment' );\n\t\t\t\tif( currentFragment && currentFragment.hasAttribute( 'data-fragment-index' ) ) {\n\t\t\t\t\tf = parseInt( currentFragment.getAttribute( 'data-fragment-index' ), 10 );\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tf = currentSlide.querySelectorAll( '.fragment.visible' ).length - 1;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn { h, v, f };\n\n\t}\n\n\t/**\n\t * Retrieves all slides in this presentation.\n\t */\n\tfunction getSlides() {\n\n\t\treturn Util.queryAll( dom.wrapper, SLIDES_SELECTOR + ':not(.stack):not([data-visibility=\"uncounted\"])' );\n\n\t}\n\n\t/**\n\t * Returns a list of all horizontal slides in the deck. Each\n\t * vertical stack is included as one horizontal slide in the\n\t * resulting array.\n\t */\n\tfunction getHorizontalSlides() {\n\n\t\treturn Util.queryAll( dom.wrapper, HORIZONTAL_SLIDES_SELECTOR );\n\n\t}\n\n\t/**\n\t * Returns all vertical slides that exist within this deck.\n\t */\n\tfunction getVerticalSlides() {\n\n\t\treturn Util.queryAll( dom.wrapper, '.slides>section>section' );\n\n\t}\n\n\t/**\n\t * Returns all vertical stacks (each stack can contain multiple slides).\n\t */\n\tfunction getVerticalStacks() {\n\n\t\treturn Util.queryAll( dom.wrapper, HORIZONTAL_SLIDES_SELECTOR + '.stack');\n\n\t}\n\n\t/**\n\t * Returns true if there are at least two horizontal slides.\n\t */\n\tfunction hasHorizontalSlides() {\n\n\t\treturn getHorizontalSlides().length > 1;\n\t}\n\n\t/**\n\t * Returns true if there are at least two vertical slides.\n\t */\n\tfunction hasVerticalSlides() {\n\n\t\treturn getVerticalSlides().length > 1;\n\n\t}\n\n\t/**\n\t * Returns an array of objects where each object represents the\n\t * attributes on its respective slide.\n\t */\n\tfunction getSlidesAttributes() {\n\n\t\treturn getSlides().map( slide => {\n\n\t\t\tlet attributes = {};\n\t\t\tfor( let i = 0; i < slide.attributes.length; i++ ) {\n\t\t\t\tlet attribute = slide.attributes[ i ];\n\t\t\t\tattributes[ attribute.name ] = attribute.value;\n\t\t\t}\n\t\t\treturn attributes;\n\n\t\t} );\n\n\t}\n\n\t/**\n\t * Retrieves the total number of slides in this presentation.\n\t *\n\t * @return {number}\n\t */\n\tfunction getTotalSlides() {\n\n\t\treturn getSlides().length;\n\n\t}\n\n\t/**\n\t * Returns the slide element matching the specified index.\n\t *\n\t * @return {HTMLElement}\n\t */\n\tfunction getSlide( x, y ) {\n\n\t\tlet horizontalSlide = getHorizontalSlides()[ x ];\n\t\tlet verticalSlides = horizontalSlide && horizontalSlide.querySelectorAll( 'section' );\n\n\t\tif( verticalSlides && verticalSlides.length && typeof y === 'number' ) {\n\t\t\treturn verticalSlides ? verticalSlides[ y ] : undefined;\n\t\t}\n\n\t\treturn horizontalSlide;\n\n\t}\n\n\t/**\n\t * Returns the background element for the given slide.\n\t * All slides, even the ones with no background properties\n\t * defined, have a background element so as long as the\n\t * index is valid an element will be returned.\n\t *\n\t * @param {mixed} x Horizontal background index OR a slide\n\t * HTML element\n\t * @param {number} y Vertical background index\n\t * @return {(HTMLElement[]|*)}\n\t */\n\tfunction getSlideBackground( x, y ) {\n\n\t\tlet slide = typeof x === 'number' ? getSlide( x, y ) : x;\n\t\tif( slide ) {\n\t\t\treturn slide.slideBackgroundElement;\n\t\t}\n\n\t\treturn undefined;\n\n\t}\n\n\t/**\n\t * Retrieves the current state of the presentation as\n\t * an object. This state can then be restored at any\n\t * time.\n\t *\n\t * @return {{indexh: number, indexv: number, indexf: number, paused: boolean, overview: boolean}}\n\t */\n\tfunction getState() {\n\n\t\tlet indices = getIndices();\n\n\t\treturn {\n\t\t\tindexh: indices.h,\n\t\t\tindexv: indices.v,\n\t\t\tindexf: indices.f,\n\t\t\tpaused: isPaused(),\n\t\t\toverview: overview.isActive()\n\t\t};\n\n\t}\n\n\t/**\n\t * Restores the presentation to the given state.\n\t *\n\t * @param {object} state As generated by getState()\n\t * @see {@link getState} generates the parameter `state`\n\t */\n\tfunction setState( state ) {\n\n\t\tif( typeof state === 'object' ) {\n\t\t\tslide( Util.deserialize( state.indexh ), Util.deserialize( state.indexv ), Util.deserialize( state.indexf ) );\n\n\t\t\tlet pausedFlag = Util.deserialize( state.paused ),\n\t\t\t\toverviewFlag = Util.deserialize( state.overview );\n\n\t\t\tif( typeof pausedFlag === 'boolean' && pausedFlag !== isPaused() ) {\n\t\t\t\ttogglePause( pausedFlag );\n\t\t\t}\n\n\t\t\tif( typeof overviewFlag === 'boolean' && overviewFlag !== overview.isActive() ) {\n\t\t\t\toverview.toggle( overviewFlag );\n\t\t\t}\n\t\t}\n\n\t}\n\n\t/**\n\t * Cues a new automated slide if enabled in the config.\n\t */\n\tfunction cueAutoSlide() {\n\n\t\tcancelAutoSlide();\n\n\t\tif( currentSlide && config.autoSlide !== false ) {\n\n\t\t\tlet fragment = currentSlide.querySelector( '.current-fragment' );\n\n\t\t\t// When the slide first appears there is no \"current\" fragment so\n\t\t\t// we look for a data-autoslide timing on the first fragment\n\t\t\tif( !fragment ) fragment = currentSlide.querySelector( '.fragment' );\n\n\t\t\tlet fragmentAutoSlide = fragment ? fragment.getAttribute( 'data-autoslide' ) : null;\n\t\t\tlet parentAutoSlide = currentSlide.parentNode ? currentSlide.parentNode.getAttribute( 'data-autoslide' ) : null;\n\t\t\tlet slideAutoSlide = currentSlide.getAttribute( 'data-autoslide' );\n\n\t\t\t// Pick value in the following priority order:\n\t\t\t// 1. Current fragment's data-autoslide\n\t\t\t// 2. Current slide's data-autoslide\n\t\t\t// 3. Parent slide's data-autoslide\n\t\t\t// 4. Global autoSlide setting\n\t\t\tif( fragmentAutoSlide ) {\n\t\t\t\tautoSlide = parseInt( fragmentAutoSlide, 10 );\n\t\t\t}\n\t\t\telse if( slideAutoSlide ) {\n\t\t\t\tautoSlide = parseInt( slideAutoSlide, 10 );\n\t\t\t}\n\t\t\telse if( parentAutoSlide ) {\n\t\t\t\tautoSlide = parseInt( parentAutoSlide, 10 );\n\t\t\t}\n\t\t\telse {\n\t\t\t\tautoSlide = config.autoSlide;\n\n\t\t\t\t// If there are media elements with data-autoplay,\n\t\t\t\t// automatically set the autoSlide duration to the\n\t\t\t\t// length of that media. Not applicable if the slide\n\t\t\t\t// is divided up into fragments.\n\t\t\t\t// playbackRate is accounted for in the duration.\n\t\t\t\tif( currentSlide.querySelectorAll( '.fragment' ).length === 0 ) {\n\t\t\t\t\tUtil.queryAll( currentSlide, 'video, audio' ).forEach( el => {\n\t\t\t\t\t\tif( el.hasAttribute( 'data-autoplay' ) ) {\n\t\t\t\t\t\t\tif( autoSlide && (el.duration * 1000 / el.playbackRate ) > autoSlide ) {\n\t\t\t\t\t\t\t\tautoSlide = ( el.duration * 1000 / el.playbackRate ) + 1000;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t} );\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Cue the next auto-slide if:\n\t\t\t// - There is an autoSlide value\n\t\t\t// - Auto-sliding isn't paused by the user\n\t\t\t// - The presentation isn't paused\n\t\t\t// - The overview isn't active\n\t\t\t// - The presentation isn't over\n\t\t\tif( autoSlide && !autoSlidePaused && !isPaused() && !overview.isActive() && ( !isLastSlide() || fragments.availableRoutes().next || config.loop === true ) ) {\n\t\t\t\tautoSlideTimeout = setTimeout( () => {\n\t\t\t\t\tif( typeof config.autoSlideMethod === 'function' ) {\n\t\t\t\t\t\tconfig.autoSlideMethod()\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tnavigateNext();\n\t\t\t\t\t}\n\t\t\t\t\tcueAutoSlide();\n\t\t\t\t}, autoSlide );\n\t\t\t\tautoSlideStartTime = Date.now();\n\t\t\t}\n\n\t\t\tif( autoSlidePlayer ) {\n\t\t\t\tautoSlidePlayer.setPlaying( autoSlideTimeout !== -1 );\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\t/**\n\t * Cancels any ongoing request to auto-slide.\n\t */\n\tfunction cancelAutoSlide() {\n\n\t\tclearTimeout( autoSlideTimeout );\n\t\tautoSlideTimeout = -1;\n\n\t}\n\n\tfunction pauseAutoSlide() {\n\n\t\tif( autoSlide && !autoSlidePaused ) {\n\t\t\tautoSlidePaused = true;\n\t\t\tdispatchEvent({ type: 'autoslidepaused' });\n\t\t\tclearTimeout( autoSlideTimeout );\n\n\t\t\tif( autoSlidePlayer ) {\n\t\t\t\tautoSlidePlayer.setPlaying( false );\n\t\t\t}\n\t\t}\n\n\t}\n\n\tfunction resumeAutoSlide() {\n\n\t\tif( autoSlide && autoSlidePaused ) {\n\t\t\tautoSlidePaused = false;\n\t\t\tdispatchEvent({ type: 'autoslideresumed' });\n\t\t\tcueAutoSlide();\n\t\t}\n\n\t}\n\n\tfunction navigateLeft({skipFragments=false}={}) {\n\n\t\tnavigationHistory.hasNavigatedHorizontally = true;\n\n\t\t// Reverse for RTL\n\t\tif( config.rtl ) {\n\t\t\tif( ( overview.isActive() || skipFragments || fragments.next() === false ) && availableRoutes().left ) {\n\t\t\t\tslide( indexh + 1, config.navigationMode === 'grid' ? indexv : undefined );\n\t\t\t}\n\t\t}\n\t\t// Normal navigation\n\t\telse if( ( overview.isActive() || skipFragments || fragments.prev() === false ) && availableRoutes().left ) {\n\t\t\tslide( indexh - 1, config.navigationMode === 'grid' ? indexv : undefined );\n\t\t}\n\n\t}\n\n\tfunction navigateRight({skipFragments=false}={}) {\n\n\t\tnavigationHistory.hasNavigatedHorizontally = true;\n\n\t\t// Reverse for RTL\n\t\tif( config.rtl ) {\n\t\t\tif( ( overview.isActive() || skipFragments || fragments.prev() === false ) && availableRoutes().right ) {\n\t\t\t\tslide( indexh - 1, config.navigationMode === 'grid' ? indexv : undefined );\n\t\t\t}\n\t\t}\n\t\t// Normal navigation\n\t\telse if( ( overview.isActive() || skipFragments || fragments.next() === false ) && availableRoutes().right ) {\n\t\t\tslide( indexh + 1, config.navigationMode === 'grid' ? indexv : undefined );\n\t\t}\n\n\t}\n\n\tfunction navigateUp({skipFragments=false}={}) {\n\n\t\t// Prioritize hiding fragments\n\t\tif( ( overview.isActive() || skipFragments || fragments.prev() === false ) && availableRoutes().up ) {\n\t\t\tslide( indexh, indexv - 1 );\n\t\t}\n\n\t}\n\n\tfunction navigateDown({skipFragments=false}={}) {\n\n\t\tnavigationHistory.hasNavigatedVertically = true;\n\n\t\t// Prioritize revealing fragments\n\t\tif( ( overview.isActive() || skipFragments || fragments.next() === false ) && availableRoutes().down ) {\n\t\t\tslide( indexh, indexv + 1 );\n\t\t}\n\n\t}\n\n\t/**\n\t * Navigates backwards, prioritized in the following order:\n\t * 1) Previous fragment\n\t * 2) Previous vertical slide\n\t * 3) Previous horizontal slide\n\t */\n\tfunction navigatePrev({skipFragments=false}={}) {\n\n\t\t// Prioritize revealing fragments\n\t\tif( skipFragments || fragments.prev() === false ) {\n\t\t\tif( availableRoutes().up ) {\n\t\t\t\tnavigateUp({skipFragments});\n\t\t\t}\n\t\t\telse {\n\t\t\t\t// Fetch the previous horizontal slide, if there is one\n\t\t\t\tlet previousSlide;\n\n\t\t\t\tif( config.rtl ) {\n\t\t\t\t\tpreviousSlide = Util.queryAll( dom.wrapper, HORIZONTAL_SLIDES_SELECTOR + '.future' ).pop();\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tpreviousSlide = Util.queryAll( dom.wrapper, HORIZONTAL_SLIDES_SELECTOR + '.past' ).pop();\n\t\t\t\t}\n\n\t\t\t\t// When going backwards and arriving on a stack we start\n\t\t\t\t// at the bottom of the stack\n\t\t\t\tif( previousSlide && previousSlide.classList.contains( 'stack' ) ) {\n\t\t\t\t\tlet v = ( previousSlide.querySelectorAll( 'section' ).length - 1 ) || undefined;\n\t\t\t\t\tlet h = indexh - 1;\n\t\t\t\t\tslide( h, v );\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tnavigateLeft({skipFragments});\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t}\n\n\t/**\n\t * The reverse of #navigatePrev().\n\t */\n\tfunction navigateNext({skipFragments=false}={}) {\n\n\t\tnavigationHistory.hasNavigatedHorizontally = true;\n\t\tnavigationHistory.hasNavigatedVertically = true;\n\n\t\t// Prioritize revealing fragments\n\t\tif( skipFragments || fragments.next() === false ) {\n\n\t\t\tlet routes = availableRoutes();\n\n\t\t\t// When looping is enabled `routes.down` is always available\n\t\t\t// so we need a separate check for when we've reached the\n\t\t\t// end of a stack and should move horizontally\n\t\t\tif( routes.down && routes.right && config.loop && isLastVerticalSlide() ) {\n\t\t\t\troutes.down = false;\n\t\t\t}\n\n\t\t\tif( routes.down ) {\n\t\t\t\tnavigateDown({skipFragments});\n\t\t\t}\n\t\t\telse if( config.rtl ) {\n\t\t\t\tnavigateLeft({skipFragments});\n\t\t\t}\n\t\t\telse {\n\t\t\t\tnavigateRight({skipFragments});\n\t\t\t}\n\t\t}\n\n\t}\n\n\n\t// --------------------------------------------------------------------//\n\t// ----------------------------- EVENTS -------------------------------//\n\t// --------------------------------------------------------------------//\n\n\t/**\n\t * Called by all event handlers that are based on user\n\t * input.\n\t *\n\t * @param {object} [event]\n\t */\n\tfunction onUserInput( event ) {\n\n\t\tif( config.autoSlideStoppable ) {\n\t\t\tpauseAutoSlide();\n\t\t}\n\n\t}\n\n\t/**\n\t* Listener for post message events posted to this window.\n\t*/\n\tfunction onPostMessage( event ) {\n\n\t\tlet data = event.data;\n\n\t\t// Make sure we're dealing with JSON\n\t\tif( typeof data === 'string' && data.charAt( 0 ) === '{' && data.charAt( data.length - 1 ) === '}' ) {\n\t\t\tdata = JSON.parse( data );\n\n\t\t\t// Check if the requested method can be found\n\t\t\tif( data.method && typeof Reveal[data.method] === 'function' ) {\n\n\t\t\t\tif( POST_MESSAGE_METHOD_BLACKLIST.test( data.method ) === false ) {\n\n\t\t\t\t\tconst result = Reveal[data.method].apply( Reveal, data.args );\n\n\t\t\t\t\t// Dispatch a postMessage event with the returned value from\n\t\t\t\t\t// our method invocation for getter functions\n\t\t\t\t\tdispatchPostMessage( 'callback', { method: data.method, result: result } );\n\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tconsole.warn( 'reveal.js: \"'+ data.method +'\" is is blacklisted from the postMessage API' );\n\t\t\t\t}\n\n\t\t\t}\n\t\t}\n\n\t}\n\n\t/**\n\t * Event listener for transition end on the current slide.\n\t *\n\t * @param {object} [event]\n\t */\n\tfunction onTransitionEnd( event ) {\n\n\t\tif( transition === 'running' && /section/gi.test( event.target.nodeName ) ) {\n\t\t\ttransition = 'idle';\n\t\t\tdispatchEvent({\n\t\t\t\ttype: 'slidetransitionend',\n\t\t\t\tdata: { indexh, indexv, previousSlide, currentSlide }\n\t\t\t});\n\t\t}\n\n\t}\n\n\t/**\n\t * A global listener for all click events inside of the\n\t * .slides container.\n\t *\n\t * @param {object} [event]\n\t */\n\tfunction onSlidesClicked( event ) {\n\n\t\tconst anchor = Util.closest( event.target, 'a[href^=\"#\"]' );\n\n\t\t// If a hash link is clicked, we find the target slide\n\t\t// and navigate to it. We previously relied on 'hashchange'\n\t\t// for links like these but that prevented media with\n\t\t// audio tracks from playing in mobile browsers since it\n\t\t// wasn't considered a direct interaction with the document.\n\t\tif( anchor ) {\n\t\t\tconst hash = anchor.getAttribute( 'href' );\n\t\t\tconst indices = location.getIndicesFromHash( hash );\n\n\t\t\tif( indices ) {\n\t\t\t\tReveal.slide( indices.h, indices.v, indices.f );\n\t\t\t\tevent.preventDefault();\n\t\t\t}\n\t\t}\n\n\t}\n\n\t/**\n\t * Handler for the window level 'resize' event.\n\t *\n\t * @param {object} [event]\n\t */\n\tfunction onWindowResize( event ) {\n\n\t\tlayout();\n\n\t}\n\n\t/**\n\t * Handle for the window level 'visibilitychange' event.\n\t *\n\t * @param {object} [event]\n\t */\n\tfunction onPageVisibilityChange( event ) {\n\n\t\t// If, after clicking a link or similar and we're coming back,\n\t\t// focus the document.body to ensure we can use keyboard shortcuts\n\t\tif( document.hidden === false && document.activeElement !== document.body ) {\n\t\t\t// Not all elements support .blur() - SVGs among them.\n\t\t\tif( typeof document.activeElement.blur === 'function' ) {\n\t\t\t\tdocument.activeElement.blur();\n\t\t\t}\n\t\t\tdocument.body.focus();\n\t\t}\n\n\t}\n\n\t/**\n\t * Handler for the document level 'fullscreenchange' event.\n\t *\n\t * @param {object} [event]\n\t */\n\tfunction onFullscreenChange( event ) {\n\n\t\tlet element = document.fullscreenElement || document.webkitFullscreenElement;\n\t\tif( element === dom.wrapper ) {\n\t\t\tevent.stopImmediatePropagation();\n\n\t\t\t// Timeout to avoid layout shift in Safari\n\t\t\tsetTimeout( () => {\n\t\t\t\tReveal.layout();\n\t\t\t\tReveal.focus.focus(); // focus.focus :'(\n\t\t\t}, 1 );\n\t\t}\n\n\t}\n\n\t/**\n\t * Handles clicks on links that are set to preview in the\n\t * iframe overlay.\n\t *\n\t * @param {object} event\n\t */\n\tfunction onPreviewLinkClicked( event ) {\n\n\t\tif( event.currentTarget && event.currentTarget.hasAttribute( 'href' ) ) {\n\t\t\tlet url = event.currentTarget.getAttribute( 'href' );\n\t\t\tif( url ) {\n\t\t\t\tshowPreview( url );\n\t\t\t\tevent.preventDefault();\n\t\t\t}\n\t\t}\n\n\t}\n\n\t/**\n\t * Handles click on the auto-sliding controls element.\n\t *\n\t * @param {object} [event]\n\t */\n\tfunction onAutoSlidePlayerClick( event ) {\n\n\t\t// Replay\n\t\tif( isLastSlide() && config.loop === false ) {\n\t\t\tslide( 0, 0 );\n\t\t\tresumeAutoSlide();\n\t\t}\n\t\t// Resume\n\t\telse if( autoSlidePaused ) {\n\t\t\tresumeAutoSlide();\n\t\t}\n\t\t// Pause\n\t\telse {\n\t\t\tpauseAutoSlide();\n\t\t}\n\n\t}\n\n\n\t// --------------------------------------------------------------------//\n\t// ------------------------------- API --------------------------------//\n\t// --------------------------------------------------------------------//\n\n\t// The public reveal.js API\n\tconst API = {\n\t\tVERSION,\n\n\t\tinitialize,\n\t\tconfigure,\n\t\tdestroy,\n\n\t\tsync,\n\t\tsyncSlide,\n\t\tsyncFragments: fragments.sync.bind( fragments ),\n\n\t\t// Navigation methods\n\t\tslide,\n\t\tleft: navigateLeft,\n\t\tright: navigateRight,\n\t\tup: navigateUp,\n\t\tdown: navigateDown,\n\t\tprev: navigatePrev,\n\t\tnext: navigateNext,\n\n\t\t// Navigation aliases\n\t\tnavigateLeft, navigateRight, navigateUp, navigateDown, navigatePrev, navigateNext,\n\n\t\t// Fragment methods\n\t\tnavigateFragment: fragments.goto.bind( fragments ),\n\t\tprevFragment: fragments.prev.bind( fragments ),\n\t\tnextFragment: fragments.next.bind( fragments ),\n\n\t\t// Event binding\n\t\ton,\n\t\toff,\n\n\t\t// Legacy event binding methods left in for backwards compatibility\n\t\taddEventListener: on,\n\t\tremoveEventListener: off,\n\n\t\t// Forces an update in slide layout\n\t\tlayout,\n\n\t\t// Randomizes the order of slides\n\t\tshuffle,\n\n\t\t// Returns an object with the available routes as booleans (left/right/top/bottom)\n\t\tavailableRoutes,\n\n\t\t// Returns an object with the available fragments as booleans (prev/next)\n\t\tavailableFragments: fragments.availableRoutes.bind( fragments ),\n\n\t\t// Toggles a help overlay with keyboard shortcuts\n\t\ttoggleHelp,\n\n\t\t// Toggles the overview mode on/off\n\t\ttoggleOverview: overview.toggle.bind( overview ),\n\n\t\t// Toggles the \"black screen\" mode on/off\n\t\ttogglePause,\n\n\t\t// Toggles the auto slide mode on/off\n\t\ttoggleAutoSlide,\n\n\t\t// Toggles visibility of the jump-to-slide UI\n\t\ttoggleJumpToSlide,\n\n\t\t// Slide navigation checks\n\t\tisFirstSlide,\n\t\tisLastSlide,\n\t\tisLastVerticalSlide,\n\t\tisVerticalSlide,\n\n\t\t// State checks\n\t\tisPaused,\n\t\tisAutoSliding,\n\t\tisSpeakerNotes: notes.isSpeakerNotesWindow.bind( notes ),\n\t\tisOverview: overview.isActive.bind( overview ),\n\t\tisFocused: focus.isFocused.bind( focus ),\n\t\tisPrintingPDF: print.isPrintingPDF.bind( print ),\n\n\t\t// Checks if reveal.js has been loaded and is ready for use\n\t\tisReady: () => ready,\n\n\t\t// Slide preloading\n\t\tloadSlide: slideContent.load.bind( slideContent ),\n\t\tunloadSlide: slideContent.unload.bind( slideContent ),\n\n\t\t// Preview management\n\t\tshowPreview,\n\t\thidePreview: closeOverlay,\n\n\t\t// Adds or removes all internal event listeners\n\t\taddEventListeners,\n\t\tremoveEventListeners,\n\t\tdispatchEvent,\n\n\t\t// Facility for persisting and restoring the presentation state\n\t\tgetState,\n\t\tsetState,\n\n\t\t// Presentation progress on range of 0-1\n\t\tgetProgress,\n\n\t\t// Returns the indices of the current, or specified, slide\n\t\tgetIndices,\n\n\t\t// Returns an Array of key:value maps of the attributes of each\n\t\t// slide in the deck\n\t\tgetSlidesAttributes,\n\n\t\t// Returns the number of slides that we have passed\n\t\tgetSlidePastCount,\n\n\t\t// Returns the total number of slides\n\t\tgetTotalSlides,\n\n\t\t// Returns the slide element at the specified index\n\t\tgetSlide,\n\n\t\t// Returns the previous slide element, may be null\n\t\tgetPreviousSlide: () => previousSlide,\n\n\t\t// Returns the current slide element\n\t\tgetCurrentSlide: () => currentSlide,\n\n\t\t// Returns the slide background element at the specified index\n\t\tgetSlideBackground,\n\n\t\t// Returns the speaker notes string for a slide, or null\n\t\tgetSlideNotes: notes.getSlideNotes.bind( notes ),\n\n\t\t// Returns an Array of all slides\n\t\tgetSlides,\n\n\t\t// Returns an array with all horizontal/vertical slides in the deck\n\t\tgetHorizontalSlides,\n\t\tgetVerticalSlides,\n\n\t\t// Checks if the presentation contains two or more horizontal\n\t\t// and vertical slides\n\t\thasHorizontalSlides,\n\t\thasVerticalSlides,\n\n\t\t// Checks if the deck has navigated on either axis at least once\n\t\thasNavigatedHorizontally: () => navigationHistory.hasNavigatedHorizontally,\n\t\thasNavigatedVertically: () => navigationHistory.hasNavigatedVertically,\n\n\t\t// Adds/removes a custom key binding\n\t\taddKeyBinding: keyboard.addKeyBinding.bind( keyboard ),\n\t\tremoveKeyBinding: keyboard.removeKeyBinding.bind( keyboard ),\n\n\t\t// Programmatically triggers a keyboard event\n\t\ttriggerKey: keyboard.triggerKey.bind( keyboard ),\n\n\t\t// Registers a new shortcut to include in the help overlay\n\t\tregisterKeyboardShortcut: keyboard.registerKeyboardShortcut.bind( keyboard ),\n\n\t\tgetComputedSlideSize,\n\n\t\t// Returns the current scale of the presentation content\n\t\tgetScale: () => scale,\n\n\t\t// Returns the current configuration object\n\t\tgetConfig: () => config,\n\n\t\t// Helper method, retrieves query string as a key:value map\n\t\tgetQueryHash: Util.getQueryHash,\n\n\t\t// Returns the path to the current slide as represented in the URL\n\t\tgetSlidePath: location.getHash.bind( location ),\n\n\t\t// Returns reveal.js DOM elements\n\t\tgetRevealElement: () => revealElement,\n\t\tgetSlidesElement: () => dom.slides,\n\t\tgetViewportElement: () => dom.viewport,\n\t\tgetBackgroundsElement: () => backgrounds.element,\n\n\t\t// API for registering and retrieving plugins\n\t\tregisterPlugin: plugins.registerPlugin.bind( plugins ),\n\t\thasPlugin: plugins.hasPlugin.bind( plugins ),\n\t\tgetPlugin: plugins.getPlugin.bind( plugins ),\n\t\tgetPlugins: plugins.getRegisteredPlugins.bind( plugins )\n\n\t};\n\n\t// Our internal API which controllers have access to\n\tUtil.extend( Reveal, {\n\t\t...API,\n\n\t\t// Methods for announcing content to screen readers\n\t\tannounceStatus,\n\t\tgetStatusText,\n\n\t\t// Controllers\n\t\tprint,\n\t\tfocus,\n\t\tprogress,\n\t\tcontrols,\n\t\tlocation,\n\t\toverview,\n\t\tfragments,\n\t\tslideContent,\n\t\tslideNumber,\n\n\t\tonUserInput,\n\t\tcloseOverlay,\n\t\tupdateSlidesVisibility,\n\t\tlayoutSlideContents,\n\t\ttransformSlides,\n\t\tcueAutoSlide,\n\t\tcancelAutoSlide\n\t} );\n\n\treturn API;\n\n};\n", "import Deck, { VERSION } from './reveal.js'\n\n/**\n * Expose the Reveal class to the window. To create a\n * new instance:\n * let deck = new Reveal( document.querySelector( '.reveal' ), {\n *   controls: false\n * } );\n * deck.initialize().then(() => {\n *   // reveal.js is ready\n * });\n */\nlet Reveal = Deck;\n\n\n/**\n * The below is a thin shell that mimics the pre 4.0\n * reveal.js API and ensures backwards compatibility.\n * This API only allows for one Reveal instance per\n * page, whereas the new API above lets you run many\n * presentations on the same page.\n *\n * Reveal.initialize( { controls: false } ).then(() => {\n *   // reveal.js is ready\n * });\n */\n\nlet enqueuedAPICalls = [];\n\nReveal.initialize = options => {\n\n\t// Create our singleton reveal.js instance\n\tObject.assign( Reveal, new Deck( document.querySelector( '.reveal' ), options ) );\n\n\t// Invoke any enqueued API calls\n\tenqueuedAPICalls.map( method => method( Reveal ) );\n\n\treturn Reveal.initialize();\n\n}\n\n/**\n * The pre 4.0 API let you add event listener before\n * initializing. We maintain the same behavior by\n * queuing up premature API calls and invoking all\n * of them when Reveal.initialize is called.\n */\n[ 'configure', 'on', 'off', 'addEventListener', 'removeEventListener', 'registerPlugin' ].forEach( method => {\n\tReveal[method] = ( ...args ) => {\n\t\tenqueuedAPICalls.push( deck => deck[method].call( null, ...args ) );\n\t}\n} );\n\nReveal.isReady = () => false;\n\nReveal.VERSION = VERSION;\n\nexport default Reveal;"],
  "mappings": "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",
  "names": ["extend", "a", "b", "i", "queryAll", "el", "selector", "Array", "from", "querySelectorAll", "toggleClass", "className", "value", "classList", "add", "remove", "deserialize", "match", "parseFloat", "transformElement", "element", "transform", "style", "matches", "target", "matchesMethod", "matchesSelector", "msMatchesSelector", "call", "closest", "parentNode", "createSingletonNode", "container", "tagname", "classname", "innerHTML", "nodes", "length", "testNode", "node", "document", "createElement", "appendChild", "createStyleSheet", "tag", "type", "styleSheet", "cssText", "createTextNode", "head", "getQueryHash", "query", "location", "search", "replace", "split", "shift", "pop", "unescape", "getRemainingHeight", "height", "newHeight", "oldHeight", "offsetHeight", "removeProperty", "fileExtensionToMimeMap", "UA", "navigator", "userAgent", "isMobile", "test", "platform", "maxTouchPoints", "isAndroid", "Object", "defineProperty", "fitty_module", "_extends", "assign", "arguments", "source", "key", "prototype", "hasOwnProperty", "w", "toArray", "nl", "slice", "DrawState", "fitties", "redrawFrame", "requestRedraw", "cancelAnimationFrame", "requestAnimationFrame", "redraw", "filter", "f", "dirty", "active", "redrawAll", "forEach", "styleComputed", "computeStyle", "shouldPreStyle", "applyStyle", "fittiesToRedraw", "shouldRedraw", "calculateStyles", "markAsClean", "dispatchFitEvent", "availableWidth", "clientWidth", "currentWidth", "scrollWidth", "previousFontSize", "currentFontSize", "Math", "min", "max", "minSize", "maxSize", "whiteSpace", "multiLine", "getComputedStyle", "getPropertyValue", "display", "preStyle", "preStyleTestCompleted", "fontSize", "dispatchEvent", "CustomEvent", "detail", "oldValue", "newValue", "scaleFactor", "fit", "destroy", "_", "observeMutations", "observer", "disconnect", "originalStyle", "subscribe", "unsubscribe", "MutationObserver", "observe", "defaultOptions", "subtree", "childList", "characterData", "resizeDebounce", "onWindowResized", "clearTimeout", "setTimeout", "fitty", "observeWindowDelay", "events", "set", "enabled", "method", "e", "observeWindow", "fitAll", "fittyCreate", "elements", "options", "fittyOptions", "publicFitties", "map", "newbie", "push", "unfreeze", "freeze", "window", "SlideContent", "constructor", "Reveal", "startEmbeddedIframe", "this", "bind", "shouldPreload", "preload", "getConfig", "preloadIframes", "hasAttribute", "load", "slide", "tagName", "setAttribute", "getAttribute", "removeAttribute", "media", "sources", "background", "slideBackgroundElement", "backgroundContent", "slideBackgroundContentElement", "backgroundIframe", "backgroundImage", "backgroundVideo", "backgroundVideoLoop", "backgroundVideoMuted", "trim", "url", "encodeURI", "c", "charCodeAt", "toString", "toUpperCase", "decodeURI", "join", "isSpeakerNotes", "video", "muted", "filename", "excludeIframes", "iframe", "width", "maxHeight", "maxWidth", "backgroundIframeElement", "querySelector", "layout", "scopeElement", "unload", "getSlideBackground", "formatEmbeddedContent", "_appendParamToIframeSource", "sourceAttribute", "sourceURL", "param", "getSlidesElement", "src", "indexOf", "startEmbeddedContent", "autoplay", "autoPlayMedia", "play", "readyState", "startEmbeddedMedia", "promise", "catch", "controls", "addEventListener", "removeEventListener", "event", "isAttachedToDOM", "isVisible", "currentTime", "contentWindow", "postMessage", "stopEmbeddedContent", "unloadIframes", "pause", "SlideNumber", "render", "getRevealElement", "configure", "config", "oldConfig", "slideNumberDisplay", "slideNumber", "isPrintingPDF", "showSlideNumber", "update", "getSlideNumber", "getCurrentSlide", "format", "getHorizontalSlides", "horizontalOffset", "dataset", "visibility", "getSlidePastCount", "getTotalSlides", "indices", "getIndices", "h", "sep", "isVerticalSlide", "v", "getHash", "formatNumber", "delimiter", "isNaN", "JumpToSlide", "onInput", "onBlur", "onKeyDown", "jumpInput", "placeholder", "show", "indicesOnShow", "focus", "hide", "jumpTimeout", "jump", "getIndicesFromHash", "oneBasedIndex", "jumpAfter", "delay", "regex", "RegExp", "getSlides", "find", "innerText", "cancel", "confirm", "keyCode", "stopImmediatePropagation", "colorToRgb", "color", "hex3", "r", "parseInt", "charAt", "g", "hex6", "rgb", "rgba", "Backgrounds", "create", "slideh", "backgroundStack", "createBackground", "slidev", "parallaxBackgroundImage", "backgroundSize", "parallaxBackgroundSize", "backgroundRepeat", "parallaxBackgroundRepeat", "backgroundPosition", "parallaxBackgroundPosition", "contentElement", "sync", "data", "backgroundColor", "backgroundGradient", "backgroundTransition", "backgroundOpacity", "dataPreload", "opacity", "contrastColor", "computedBackgroundStyle", "includeAll", "currentSlide", "currentBackground", "horizontalPast", "rtl", "horizontalFuture", "childNodes", "backgroundh", "backgroundv", "previousBackground", "slideContent", "currentBackgroundContent", "backgroundImageURL", "previousBackgroundHash", "currentBackgroundHash", "classToBubble", "contains", "updateParallax", "backgroundWidth", "backgroundHeight", "horizontalSlides", "verticalSlides", "getVerticalSlides", "horizontalOffsetMultiplier", "slideWidth", "offsetWidth", "horizontalSlideCount", "parallaxBackgroundHorizontal", "verticalOffsetMultiplier", "verticalOffset", "slideHeight", "verticalSlideCount", "parallaxBackgroundVertical", "SLIDES_SELECTOR", "HORIZONTAL_SLIDES_SELECTOR", "VERTICAL_SLIDES_SELECTOR", "POST_MESSAGE_METHOD_BLACKLIST", "FRAGMENT_STYLE_REGEX", "autoAnimateCounter", "AutoAnimate", "run", "fromSlide", "toSlide", "reset", "allSlides", "toSlideIndex", "fromSlideIndex", "autoAnimateStyleSheet", "animationOptions", "getAutoAnimateOptions", "autoAnimate", "slideDirection", "fromSlideIsHidden", "css", "getAutoAnimatableElements", "autoAnimateElements", "to", "autoAnimateUnmatched", "defaultUnmatchedDuration", "duration", "defaultUnmatchedDelay", "getUnmatchedAutoAnimateElements", "unmatchedElement", "unmatchedOptions", "id", "autoAnimateTarget", "fontWeight", "sheet", "removeChild", "elementOptions", "easing", "fromProps", "getAutoAnimatableProperties", "toProps", "styles", "translate", "scale", "presentationScale", "getScale", "delta", "x", "y", "scaleX", "scaleY", "round", "propertyName", "toValue", "fromValue", "explicitValue", "toStyleProperties", "keys", "inheritedOptions", "autoAnimateEasing", "autoAnimateDuration", "autoAnimatedParent", "autoAnimateDelay", "direction", "properties", "bounds", "measure", "center", "getBoundingClientRect", "offsetLeft", "offsetTop", "computedStyles", "autoAnimateStyles", "property", "pairs", "autoAnimateMatcher", "getAutoAnimatePairs", "reserved", "pair", "index", "textNodes", "findAutoAnimateMatches", "nodeName", "textContent", "getLocalBoundingBox", "fromScope", "toScope", "serializer", "fromMatches", "toMatches", "fromElement", "primaryIndex", "secondaryIndex", "rootElement", "children", "reduce", "result", "containsAnimatedElements", "concat", "Fragments", "fragments", "disable", "enable", "availableRoutes", "hiddenFragments", "prev", "next", "sort", "grouped", "ordered", "unordered", "sorted", "fragment", "group", "sortAll", "horizontalSlide", "verticalSlide", "changedFragments", "shown", "hidden", "maxIndex", "currentFragment", "wasVisible", "announceStatus", "getStatusText", "bubbles", "goto", "offset", "lastVisibleFragment", "progress", "fragmentInURL", "writeURL", "Overview", "onSlideClicked", "activate", "overview", "isActive", "cancelAutoSlide", "getBackgroundsElement", "margin", "slideSize", "getComputedSlideSize", "overviewSlideWidth", "overviewSlideHeight", "updateSlidesVisibility", "hslide", "vslide", "hbackground", "vbackground", "vmin", "innerWidth", "innerHeight", "transformSlides", "deactivate", "cueAutoSlide", "toggle", "override", "preventDefault", "Keyboard", "shortcuts", "bindings", "onDocumentKeyDown", "onDocumentKeyPress", "navigationMode", "unbind", "addKeyBinding", "binding", "callback", "description", "removeKeyBinding", "triggerKey", "registerKeyboardShortcut", "getShortcuts", "getBindings", "shiftKey", "charCode", "toggleHelp", "keyboardCondition", "isFocused", "autoSlideWasPaused", "isAutoSliding", "onUserInput", "activeElementIsCE", "activeElement", "isContentEditable", "activeElementIsInput", "activeElementIsNotes", "unusedModifier", "altKey", "ctrlKey", "metaKey", "resumeKeyCodes", "keyboard", "isPaused", "useLinearMode", "hasHorizontalSlides", "hasVerticalSlides", "triggered", "apply", "action", "skipFragments", "left", "right", "up", "Number", "MAX_VALUE", "down", "togglePause", "requestMethod", "documentElement", "requestFullscreen", "webkitRequestFullscreen", "webkitRequestFullScreen", "mozRequestFullScreen", "msRequestFullscreen", "embedded", "getViewportElement", "autoSlideStoppable", "toggleAutoSlide", "jumpToSlide", "toggleJumpToSlide", "closeOverlay", "Location", "t", "n", "writeURLTimeout", "replaceStateTimestamp", "onWindowHashChange", "hash", "name", "bits", "hashIndexBase", "hashOneBasedIndex", "getElementById", "decodeURIComponent", "error", "readURL", "currentIndices", "newIndices", "history", "debouncedReplaceState", "pathname", "replaceState", "Date", "now", "replaceStateTimeout", "MAX_REPLACE_STATE_FREQUENCY", "s", "encodeURIComponent", "Controls", "onNavigateLeftClicked", "onNavigateRightClicked", "onNavigateUpClicked", "onNavigateDownClicked", "onNavigatePrevClicked", "onNavigateNextClicked", "revealElement", "controlsLeft", "controlsRight", "controlsUp", "controlsDown", "controlsPrev", "controlsNext", "controlsRightArrow", "controlsLeftArrow", "controlsDownArrow", "controlsLayout", "controlsBackArrows", "pointerEvents", "eventName", "routes", "fragmentsRoutes", "controlsTutorial", "hasNavigatedVertically", "hasNavigatedHorizontally", "Progress", "onProgressClicked", "bar", "getProgress", "getMaxWidth", "slides", "slidesTotal", "slideIndex", "floor", "clientX", "targetIndices", "Pointer", "lastMouseWheelStep", "cursorHidden", "cursorInactiveTimeout", "onDocumentCursorActive", "onDocumentMouseScroll", "mouseWheel", "hideInactiveCursor", "showCursor", "cursor", "hideCursor", "hideCursorTime", "wheelDelta", "loadScript", "script", "async", "defer", "onload", "onreadystatechange", "onerror", "err", "Error", "insertBefore", "lastChild", "Plugins", "reveal", "state", "registeredPlugins", "asyncDependencies", "plugins", "dependencies", "registerPlugin", "Promise", "resolve", "scripts", "scriptsToLoad", "condition", "scriptLoadedCallback", "initPlugins", "then", "console", "warn", "pluginValues", "values", "pluginsToInitialize", "loadAsync", "initNextPlugin", "afterPlugInitialized", "plugin", "init", "hasPlugin", "getPlugin", "getRegisteredPlugins", "Print", "injectPageNumbers", "pageWidth", "pageHeight", "body", "viewportElement", "presentationBackground", "viewportStyles", "layoutSlideContents", "slideScrollHeights", "scrollHeight", "pages", "pageContainer", "top", "contentHeight", "numberOfPages", "ceil", "pdfMaxPagesPerSlide", "page", "pdfPageHeightOffset", "showNotes", "notes", "getSlideNotes", "notesSpacing", "notesLayout", "notesElement", "bottom", "numberElement", "pdfSeparateFragments", "fragmentGroups", "previousFragmentStep", "clonedPage", "cloneNode", "fragmentNumber", "Touch", "touchStartX", "touchStartY", "touchStartCount", "touchCaptured", "onPointerDown", "onPointerMove", "onPointerUp", "onTouchStart", "onTouchMove", "onTouchEnd", "msPointerEnabled", "isSwipePrevented", "touches", "clientY", "currentX", "currentY", "includeFragments", "deltaX", "deltaY", "abs", "pointerType", "MSPOINTER_TYPE_TOUCH", "STATE_FOCUS", "STATE_BLUR", "Focus", "onRevealPointerDown", "onDocumentPointerDown", "blur", "Notes", "print", "updateVisibility", "hasNotes", "isSpeakerNotesWindow", "notesElements", "Playback", "progressCheck", "diameter", "diameter2", "thickness", "playing", "progressOffset", "canvas", "context", "getContext", "setPlaying", "wasPlaying", "animate", "progressBefore", "radius", "iconSize", "endAngle", "PI", "startAngle", "save", "clearRect", "beginPath", "arc", "fillStyle", "fill", "lineWidth", "strokeStyle", "stroke", "fillRect", "moveTo", "lineTo", "restore", "on", "listener", "off", "minScale", "maxScale", "respondToHashChanges", "disableLayout", "touch", "loop", "shuffle", "help", "showHiddenSlides", "autoSlide", "autoSlideMethod", "defaultTiming", "previewLinks", "postMessageEvents", "focusBodyOnPageVisibilityChange", "transition", "transitionSpeed", "POSITIVE_INFINITY", "viewDistance", "mobileViewDistance", "sortFragmentsOnSync", "VERSION", "indexh", "indexv", "previousSlide", "autoSlidePlayer", "ready", "navigationHistory", "slidesTransform", "dom", "autoSlideTimeout", "autoSlideStartTime", "autoSlidePaused", "backgrounds", "pointer", "initialize", "initOptions", "wrapper", "defaultConfig", "Util", "setViewport", "start", "viewport", "removeHiddenSlides", "setupDOM", "setupPostMessage", "setupScrollPrevention", "setupFullscreen", "resetVerticalSlides", "removeEventListeners", "setupPDF", "Device", "pauseOverlay", "statusElement", "createStatusElement", "position", "overflow", "clip", "text", "nodeType", "isAriaHidden", "isDisplayHidden", "child", "setInterval", "scrollTop", "scrollLeft", "onFullscreenChange", "onPostMessage", "isReady", "numberOfSlides", "setProperty", "resume", "enablePreviewLinks", "disablePreviewLinks", "onAutoSlidePlayerClick", "addEventListeners", "onWindowResize", "onSlidesClicked", "onTransitionEnd", "onPageVisibilityChange", "useCapture", "transforms", "createEvent", "initEvent", "dispatchPostMessage", "parent", "self", "message", "namespace", "getState", "JSON", "stringify", "onPreviewLinkClicked", "showPreview", "overlay", "showHelp", "html", "size", "oldScale", "presentationWidth", "presentationHeight", "zoom", "len", "remainingHeight", "nw", "naturalWidth", "videoWidth", "nh", "naturalHeight", "videoHeight", "es", "setPreviousVerticalIndex", "stack", "getPreviousVerticalIndex", "attributeName", "isLastVerticalSlide", "nextElementSibling", "isFirstSlide", "isLastSlide", "wasPaused", "resumeAutoSlide", "pauseAutoSlide", "origin", "defaultPrevented", "stateBefore", "indexhBefore", "indexvBefore", "updateSlides", "slideChanged", "currentHorizontalSlide", "currentVerticalSlides", "autoAnimateTransition", "getVerticalStacks", "stateLoop", "j", "splice", "syncSlide", "beforeSlide", "random", "slidesLength", "printMode", "loopedForwards", "loopedBackwards", "reverse", "showFragmentsIn", "hideFragmentsIn", "wasPresent", "slideState", "distanceX", "distanceY", "horizontalSlidesLength", "verticalSlidesLength", "oy", "fragmentRoutes", "pastCount", "mainLoop", "totalCount", "allFragments", "fragmentWeight", "isVertical", "getSlidesAttributes", "attributes", "attribute", "getSlide", "indexf", "paused", "setState", "pausedFlag", "overviewFlag", "fragmentAutoSlide", "parentAutoSlide", "slideAutoSlide", "playbackRate", "navigateNext", "navigateLeft", "undefined", "navigateRight", "navigateUp", "navigateDown", "navigatePrev", "parse", "args", "anchor", "fullscreenElement", "webkitFullscreenElement", "currentTarget", "API", "syncFragments", "navigateFragment", "prevFragment", "nextFragment", "availableFragments", "toggleOverview", "isOverview", "loadSlide", "unloadSlide", "hidePreview", "getPreviousSlide", "getSlidePath", "getPlugins", "Deck", "enqueuedAPICalls", "deck"]
}
